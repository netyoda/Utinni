// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace UtinniCore
{
    namespace Utinni
    {
        public unsafe partial class utinni
        {
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getPath@utinni@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")]
                internal static extern global::System.IntPtr GetPath();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getSwgCfgFilename@utinni@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")]
                internal static extern global::System.IntPtr GetSwgCfgFilename();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getConfig@utinni@@YAAAVUtINI@1@XZ")]
                internal static extern global::System.IntPtr GetConfig();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getPluginManager@utinni@@YAAAVPluginManager@1@XZ")]
                internal static extern global::System.IntPtr GetPluginManager();
            }

            public static string GetPath()
            {
                var __ret = __Internal.GetPath();
                var __basicStringRet0 = global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>.__CreateInstance(__ret);
                return global::Std.BasicStringExtensions.Data(__basicStringRet0);
            }

            public static string GetSwgCfgFilename()
            {
                var __ret = __Internal.GetSwgCfgFilename();
                var __basicStringRet0 = global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>.__CreateInstance(__ret);
                return global::Std.BasicStringExtensions.Data(__basicStringRet0);
            }

            public static global::UtinniCore.Utinni.UtINI GetConfig()
            {
                var __ret = __Internal.GetConfig();
                global::UtinniCore.Utinni.UtINI __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.UtINI.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.UtINI) global::UtinniCore.Utinni.UtINI.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.UtINI.__CreateInstance(__ret);
                return __result0;
            }

            public static global::UtinniCore.Utinni.PluginManager GetPluginManager()
            {
                var __ret = __Internal.GetPluginManager();
                global::UtinniCore.Utinni.PluginManager __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.PluginManager.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.PluginManager) global::UtinniCore.Utinni.PluginManager.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.PluginManager.__CreateInstance(__ret);
                return __result0;
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class UtINI : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 28)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal global::Std.BasicString.__Internalc__N_std_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C iniFilename;

                [FieldOffset(24)]
                internal global::System.IntPtr pImpl;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0UtINI@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0UtINI@utinni@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance, global::System.IntPtr filename);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0UtINI@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor_1(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??1UtINI@utinni@@QAE@XZ")]
                internal static extern void dtor(global::System.IntPtr __instance, int delete);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?load@UtINI@utinni@@QBEXXZ")]
                internal static extern void Load(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?load@UtINI@utinni@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")]
                internal static extern void Load(global::System.IntPtr __instance, global::System.IntPtr filename);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?save@UtINI@utinni@@QBEXXZ")]
                internal static extern void Save(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?createUtinniSettings@UtINI@utinni@@QBEXXZ")]
                internal static extern void CreateUtinniSettings(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?addSetting@UtINI@utinni@@QBEXABUValue@12@@Z")]
                internal static extern void AddSetting(global::System.IntPtr __instance, global::System.IntPtr value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?addSetting@UtINI@utinni@@QBEXPBD00W4Types@Value@12@@Z")]
                internal static extern void AddSetting(global::System.IntPtr __instance, [MarshalAs(UnmanagedType.LPUTF8Str)] string sectionName, [MarshalAs(UnmanagedType.LPUTF8Str)] string valueName, [MarshalAs(UnmanagedType.LPUTF8Str)] string value, global::UtinniCore.Utinni.UtINI.Value.Types type);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?DeleteSection@UtINI@utinni@@QAEXPBD@Z")]
                internal static extern void DeleteSection(global::System.IntPtr __instance, [MarshalAs(UnmanagedType.LPUTF8Str)] string sectionName);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getString@UtINI@utinni@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD0@Z")]
                internal static extern void GetString(global::System.IntPtr __instance, global::System.IntPtr @return, [MarshalAs(UnmanagedType.LPUTF8Str)] string sectionName, [MarshalAs(UnmanagedType.LPUTF8Str)] string valueName);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getBool@UtINI@utinni@@QBE_NPBD0@Z")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool GetBool(global::System.IntPtr __instance, [MarshalAs(UnmanagedType.LPUTF8Str)] string sectionName, [MarshalAs(UnmanagedType.LPUTF8Str)] string valueName);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getInt@UtINI@utinni@@QBEHPBD0@Z")]
                internal static extern int GetInt(global::System.IntPtr __instance, [MarshalAs(UnmanagedType.LPUTF8Str)] string sectionName, [MarshalAs(UnmanagedType.LPUTF8Str)] string valueName);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getFloat@UtINI@utinni@@QBEMPBD0@Z")]
                internal static extern float GetFloat(global::System.IntPtr __instance, [MarshalAs(UnmanagedType.LPUTF8Str)] string sectionName, [MarshalAs(UnmanagedType.LPUTF8Str)] string valueName);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setString@UtINI@utinni@@QBEXPBD00@Z")]
                internal static extern void SetString(global::System.IntPtr __instance, [MarshalAs(UnmanagedType.LPUTF8Str)] string sectionName, [MarshalAs(UnmanagedType.LPUTF8Str)] string valueName, [MarshalAs(UnmanagedType.LPUTF8Str)] string value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setBool@UtINI@utinni@@QBEXPBD0_N@Z")]
                internal static extern void SetBool(global::System.IntPtr __instance, [MarshalAs(UnmanagedType.LPUTF8Str)] string sectionName, [MarshalAs(UnmanagedType.LPUTF8Str)] string valueName, bool value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setInt@UtINI@utinni@@QBEXPBD0H@Z")]
                internal static extern void SetInt(global::System.IntPtr __instance, [MarshalAs(UnmanagedType.LPUTF8Str)] string sectionName, [MarshalAs(UnmanagedType.LPUTF8Str)] string valueName, int value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setFloat@UtINI@utinni@@QBEXPBD0M@Z")]
                internal static extern void SetFloat(global::System.IntPtr __instance, [MarshalAs(UnmanagedType.LPUTF8Str)] string sectionName, [MarshalAs(UnmanagedType.LPUTF8Str)] string valueName, float value);
            }

            public unsafe partial class Value : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 76)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal global::Std.BasicString.__Internalc__N_std_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C sectionName;

                    [FieldOffset(24)]
                    internal global::Std.BasicString.__Internalc__N_std_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C valueName;

                    [FieldOffset(48)]
                    internal global::Std.BasicString.__Internalc__N_std_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C value;

                    [FieldOffset(72)]
                    internal global::UtinniCore.Utinni.UtINI.Value.Types type;

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Value@UtINI@utinni@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Value@UtINI@utinni@@QAE@XZ")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??1Value@UtINI@utinni@@QAE@XZ")]
                    internal static extern void dtor(global::System.IntPtr __instance, int delete);
                }

                public enum Types
                {
                    VtIniValue = 0,
                    VtString = 1,
                    VtBool = 2,
                    VtInt = 3,
                    VtFloat = 4,
                    VtArray = 5,
                    VtMap = 6
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.UtINI.Value> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.UtINI.Value>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Utinni.UtINI.Value __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Utinni.UtINI.Value(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Utinni.UtINI.Value __CreateInstance(global::UtinniCore.Utinni.UtINI.Value.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Utinni.UtINI.Value(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Utinni.UtINI.Value.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UtINI.Value.__Internal));
                    global::UtinniCore.Utinni.UtINI.Value.__Internal.cctor(ret, new global::System.IntPtr(&native));
                    return ret.ToPointer();
                }

                private Value(global::UtinniCore.Utinni.UtINI.Value.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected Value(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public Value(global::UtinniCore.Utinni.UtINI.Value _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UtINI.Value.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    if (ReferenceEquals(_0, null))
                        throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = _0.__Instance;
                    __Internal.cctor(__Instance, __arg0);
                }

                public Value()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UtINI.Value.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Utinni.UtINI.Value __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (disposing)
                        __Internal.dtor(__Instance, 0);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public string SectionName
                {
                    get
                    {
                        var __basicStringRet0 = global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.UtINI.Value.__Internal*) __Instance)->sectionName));
                        return global::Std.BasicStringExtensions.Data(__basicStringRet0);
                    }

                    set
                    {
                        global::Std.BasicStringExtensions.__Internal.Assign(new global::System.IntPtr(&((global::UtinniCore.Utinni.UtINI.Value.__Internal*)__Instance)->sectionName), value);
                    }
                }

                public string ValueName
                {
                    get
                    {
                        var __basicStringRet0 = global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.UtINI.Value.__Internal*) __Instance)->valueName));
                        return global::Std.BasicStringExtensions.Data(__basicStringRet0);
                    }

                    set
                    {
                        global::Std.BasicStringExtensions.__Internal.Assign(new global::System.IntPtr(&((global::UtinniCore.Utinni.UtINI.Value.__Internal*)__Instance)->valueName), value);
                    }
                }

                public string value
                {
                    get
                    {
                        var __basicStringRet0 = global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.UtINI.Value.__Internal*) __Instance)->value));
                        return global::Std.BasicStringExtensions.Data(__basicStringRet0);
                    }

                    set
                    {
                        global::Std.BasicStringExtensions.__Internal.Assign(new global::System.IntPtr(&((global::UtinniCore.Utinni.UtINI.Value.__Internal*)__Instance)->value), value);
                    }
                }

                public global::UtinniCore.Utinni.UtINI.Value.Types Type
                {
                    get
                    {
                        return ((global::UtinniCore.Utinni.UtINI.Value.__Internal*) __Instance)->type;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.UtINI.Value.__Internal*)__Instance)->type = value;
                    }
                }
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.UtINI> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.UtINI>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.UtINI __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.UtINI(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.UtINI __CreateInstance(global::UtinniCore.Utinni.UtINI.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.UtINI(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.UtINI.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UtINI.__Internal));
                global::UtinniCore.Utinni.UtINI.__Internal.cctor_1(ret, new global::System.IntPtr(&native));
                return ret.ToPointer();
            }

            private UtINI(global::UtinniCore.Utinni.UtINI.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected UtINI(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public UtINI()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UtINI.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public UtINI(string filename)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UtINI.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                var __basicString0 = new global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>();
                global::Std.BasicStringExtensions.Assign(__basicString0, filename);
                var __arg0 = __basicString0.__Instance;
                __Internal.ctor(__Instance, __arg0);
                __basicString0.Dispose();
            }

            public UtINI(global::UtinniCore.Utinni.UtINI _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UtINI.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(_0, null))
                    throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = _0.__Instance;
                __Internal.cctor_1(__Instance, __arg0);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.UtINI __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (disposing)
                    __Internal.dtor(__Instance, 0);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public void Load()
            {
                __Internal.Load(__Instance);
            }

            public void Load(string filename)
            {
                var __basicString0 = new global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>();
                global::Std.BasicStringExtensions.Assign(__basicString0, filename);
                var __arg0 = __basicString0.__Instance;
                __Internal.Load(__Instance, __arg0);
                __basicString0.Dispose();
            }

            public void Save()
            {
                __Internal.Save(__Instance);
            }

            public void CreateUtinniSettings()
            {
                __Internal.CreateUtinniSettings(__Instance);
            }

            public void AddSetting(global::UtinniCore.Utinni.UtINI.Value value)
            {
                if (ReferenceEquals(value, null))
                    throw new global::System.ArgumentNullException("value", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = value.__Instance;
                __Internal.AddSetting(__Instance, __arg0);
            }

            public void AddSetting(string sectionName, string valueName, string value, global::UtinniCore.Utinni.UtINI.Value.Types type)
            {
                __Internal.AddSetting(__Instance, sectionName, valueName, value, type);
            }

            public void DeleteSection(string sectionName)
            {
                __Internal.DeleteSection(__Instance, sectionName);
            }

            public string GetString(string sectionName, string valueName)
            {
                var __ret = new global::Std.BasicString.__Internalc__N_std_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C();
                __Internal.GetString(__Instance, new IntPtr(&__ret), sectionName, valueName);
                var __basicStringRet0 = global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>.__CreateInstance(new global::System.IntPtr(&__ret));
                var __retString0 = global::Std.BasicStringExtensions.Data(__basicStringRet0);
                __basicStringRet0.Dispose();
                return __retString0;
            }

            public bool GetBool(string sectionName, string valueName)
            {
                var __ret = __Internal.GetBool(__Instance, sectionName, valueName);
                return __ret;
            }

            public int GetInt(string sectionName, string valueName)
            {
                var __ret = __Internal.GetInt(__Instance, sectionName, valueName);
                return __ret;
            }

            public float GetFloat(string sectionName, string valueName)
            {
                var __ret = __Internal.GetFloat(__Instance, sectionName, valueName);
                return __ret;
            }

            public void SetString(string sectionName, string valueName, string value)
            {
                __Internal.SetString(__Instance, sectionName, valueName, value);
            }

            public void SetBool(string sectionName, string valueName, bool value)
            {
                __Internal.SetBool(__Instance, sectionName, valueName, value);
            }

            public void SetInt(string sectionName, string valueName, int value)
            {
                __Internal.SetInt(__Instance, sectionName, valueName, value);
            }

            public void SetFloat(string sectionName, string valueName, float value)
            {
                __Internal.SetFloat(__Instance, sectionName, valueName, value);
            }

            public static implicit operator global::UtinniCore.Utinni.UtINI(string filename)
            {
                return new global::UtinniCore.Utinni.UtINI(filename);
            }
        }
    }

    namespace Utinni
    {
        namespace Log
        {
            public unsafe partial class log
            {
                public partial struct __Internal
                {
                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?create@log@utinni@@YAXXZ")]
                    internal static extern void Create();

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?critical@log@utinni@@YAXPBD@Z")]
                    internal static extern void Critical([MarshalAs(UnmanagedType.LPUTF8Str)] string text);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?debug@log@utinni@@YAXPBD@Z")]
                    internal static extern void Debug([MarshalAs(UnmanagedType.LPUTF8Str)] string text);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?error@log@utinni@@YAXPBD@Z")]
                    internal static extern void Error([MarshalAs(UnmanagedType.LPUTF8Str)] string text);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?info@log@utinni@@YAXPBD@Z")]
                    internal static extern void Info([MarshalAs(UnmanagedType.LPUTF8Str)] string text);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?warning@log@utinni@@YAXPBD@Z")]
                    internal static extern void Warning([MarshalAs(UnmanagedType.LPUTF8Str)] string text);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?addOutputSinkCallback@log@utinni@@YAXP6AXPBD@Z@Z")]
                    internal static extern void AddOutputSinkCallback(global::System.IntPtr func);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?getMessageBufferCount@log@utinni@@YAHXZ")]
                    internal static extern int GetMessageBufferCount();

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?getMessageAt@log@utinni@@YAPBDH@Z")]
                    internal static extern global::System.IntPtr GetMessageAt(int i);
                }

                public static void Create()
                {
                    __Internal.Create();
                }

                public static void Critical(string text)
                {
                    __Internal.Critical(text);
                }

                public static void Debug(string text)
                {
                    __Internal.Debug(text);
                }

                public static void Error(string text)
                {
                    __Internal.Error(text);
                }

                public static void Info(string text)
                {
                    __Internal.Info(text);
                }

                public static void Warning(string text)
                {
                    __Internal.Warning(text);
                }

                public static void AddOutputSinkCallback(global::UtinniCore.Delegates.Action_string func)
                {
                    var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                    __Internal.AddOutputSinkCallback(__arg0);
                }

                public static int GetMessageBufferCount()
                {
                    var __ret = __Internal.GetMessageBufferCount();
                    return __ret;
                }

                public static string GetMessageAt(int i)
                {
                    var __ret = __Internal.GetMessageAt(i);
                    if (__ret == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) __ret;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                }
            }
        }
    }

    namespace Memory
    {
        public unsafe partial class memory
        {
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?findPattern@memory@@YAIIIPBD0@Z")]
                internal static extern uint FindPattern(uint startAddress, uint length, [MarshalAs(UnmanagedType.LPUTF8Str)] string pattern, [MarshalAs(UnmanagedType.LPUTF8Str)] string mask);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?findPattern@memory@@YAIPBD00@Z")]
                internal static extern uint FindPattern([MarshalAs(UnmanagedType.LPUTF8Str)] string moduleName, [MarshalAs(UnmanagedType.LPUTF8Str)] string pattern, [MarshalAs(UnmanagedType.LPUTF8Str)] string mask);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?copy@memory@@YAXIII@Z")]
                internal static extern void Copy(uint pDest, uint pSource, uint length);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?write@memory@@YAXIIH@Z")]
                internal static extern void Write(uint address, uint value, int length);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?set@memory@@YAXIII@Z")]
                internal static extern void Set(uint pDest, uint value, uint length);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?patchAddress@memory@@YAXII@Z")]
                internal static extern void PatchAddress(uint address, uint value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?createJMP@memory@@YAXIII@Z")]
                internal static extern void CreateJMP(uint address, uint jumpToAddress, uint overrideLength);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getAddress@memory@@YAIIH@Z")]
                internal static extern uint GetAddress(uint baseAddress, int ptrDepth);
            }

            public static uint FindPattern(uint startAddress, uint length, string pattern, string mask)
            {
                var __ret = __Internal.FindPattern(startAddress, length, pattern, mask);
                return __ret;
            }

            public static uint FindPattern(string moduleName, string pattern, string mask)
            {
                var __ret = __Internal.FindPattern(moduleName, pattern, mask);
                return __ret;
            }

            public static void Copy(uint pDest, uint pSource, uint length)
            {
                __Internal.Copy(pDest, pSource, length);
            }

            public static void Write(uint address, uint value, int length)
            {
                __Internal.Write(address, value, length);
            }

            public static void Set(uint pDest, uint value, uint length)
            {
                __Internal.Set(pDest, value, length);
            }

            public static void PatchAddress(uint address, uint value)
            {
                __Internal.PatchAddress(address, value);
            }

            public static void CreateJMP(uint address, uint jumpToAddress, uint overrideLength)
            {
                __Internal.CreateJMP(address, jumpToAddress, overrideLength);
            }

            public static uint GetAddress(uint baseAddress, int ptrDepth)
            {
                var __ret = __Internal.GetAddress(baseAddress, ptrDepth);
                return __ret;
            }
        }
    }

    namespace Utility
    {
        public unsafe partial class utility
        {
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?showMessageBox@utility@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z")]
                internal static extern void ShowMessageBox(global::System.IntPtr title, global::System.IntPtr text);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?showMessageBox@utility@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")]
                internal static extern void ShowMessageBox(global::System.IntPtr text);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?showMessageBoxEmpty@utility@@YAXXZ")]
                internal static extern void ShowMessageBoxEmpty();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?showLastErrorMessageBox@utility@@YAXXZ")]
                internal static extern void ShowLastErrorMessageBox();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getWorkingDirectory@utility@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")]
                internal static extern void GetWorkingDirectory(global::System.IntPtr @return);
            }

            public static void ShowMessageBox(string title, string text)
            {
                var __basicString0 = new global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>();
                global::Std.BasicStringExtensions.Assign(__basicString0, title);
                var __arg0 = __basicString0.__Instance;
                var __basicString1 = new global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>();
                global::Std.BasicStringExtensions.Assign(__basicString1, text);
                var __arg1 = __basicString1.__Instance;
                __Internal.ShowMessageBox(__arg0, __arg1);
                __basicString0.Dispose();
                __basicString1.Dispose();
            }

            public static void ShowMessageBox(string text)
            {
                var __basicString0 = new global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>();
                global::Std.BasicStringExtensions.Assign(__basicString0, text);
                var __arg0 = __basicString0.__Instance;
                __Internal.ShowMessageBox(__arg0);
                __basicString0.Dispose();
            }

            public static void ShowMessageBoxEmpty()
            {
                __Internal.ShowMessageBoxEmpty();
            }

            public static void ShowLastErrorMessageBox()
            {
                __Internal.ShowLastErrorMessageBox();
            }

            public static string GetWorkingDirectory()
            {
                var __ret = new global::Std.BasicString.__Internalc__N_std_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C();
                __Internal.GetWorkingDirectory(new IntPtr(&__ret));
                var __basicStringRet0 = global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>.__CreateInstance(new global::System.IntPtr(&__ret));
                var __retString0 = global::Std.BasicStringExtensions.Data(__basicStringRet0);
                __basicStringRet0.Dispose();
                return __retString0;
            }
        }
    }

    namespace Utinni
    {
        public unsafe abstract partial class UtinniPlugin : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 4)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal global::System.IntPtr vfptr_UtinniPlugin;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0UtinniPlugin@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0UtinniPlugin@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            public unsafe partial class Information : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 12)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal global::System.IntPtr name;

                    [FieldOffset(4)]
                    internal global::System.IntPtr description;

                    [FieldOffset(8)]
                    internal global::System.IntPtr author;

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Information@UtinniPlugin@utinni@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.UtinniPlugin.Information> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.UtinniPlugin.Information>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Utinni.UtinniPlugin.Information __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Utinni.UtinniPlugin.Information(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Utinni.UtinniPlugin.Information __CreateInstance(global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Utinni.UtinniPlugin.Information(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal));
                    *(global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*) ret = native;
                    return ret.ToPointer();
                }

                private Information(global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected Information(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public Information()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                public Information(global::UtinniCore.Utinni.UtinniPlugin.Information _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    *((global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*) __Instance) = *((global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*) _0.__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Utinni.UtinniPlugin.Information __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public string Name
                {
                    get
                    {
                        if (((global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*) __Instance)->name == global::System.IntPtr.Zero)
                            return default(string);
                        var __retPtr = (byte*) ((global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*) __Instance)->name;
                        int __length = 0;
                        while (*(__retPtr++) != 0) __length += sizeof(byte);
                        return global::System.Text.Encoding.UTF8.GetString((byte*) ((global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*) __Instance)->name, __length);
                    }

                    set
                    {
                        byte[] __bytes0 = global::System.Text.Encoding.UTF8.GetBytes(value);
                        fixed (byte* __bytePtr0 = __bytes0)
                        {
                            ((global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*)__Instance)->name = (global::System.IntPtr) new global::System.IntPtr(__bytePtr0);
                        }
                    }
                }

                public string Description
                {
                    get
                    {
                        if (((global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*) __Instance)->description == global::System.IntPtr.Zero)
                            return default(string);
                        var __retPtr = (byte*) ((global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*) __Instance)->description;
                        int __length = 0;
                        while (*(__retPtr++) != 0) __length += sizeof(byte);
                        return global::System.Text.Encoding.UTF8.GetString((byte*) ((global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*) __Instance)->description, __length);
                    }

                    set
                    {
                        byte[] __bytes0 = global::System.Text.Encoding.UTF8.GetBytes(value);
                        fixed (byte* __bytePtr0 = __bytes0)
                        {
                            ((global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*)__Instance)->description = (global::System.IntPtr) new global::System.IntPtr(__bytePtr0);
                        }
                    }
                }

                public string Author
                {
                    get
                    {
                        if (((global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*) __Instance)->author == global::System.IntPtr.Zero)
                            return default(string);
                        var __retPtr = (byte*) ((global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*) __Instance)->author;
                        int __length = 0;
                        while (*(__retPtr++) != 0) __length += sizeof(byte);
                        return global::System.Text.Encoding.UTF8.GetString((byte*) ((global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*) __Instance)->author, __length);
                    }

                    set
                    {
                        byte[] __bytes0 = global::System.Text.Encoding.UTF8.GetBytes(value);
                        fixed (byte* __bytePtr0 = __bytes0)
                        {
                            ((global::UtinniCore.Utinni.UtinniPlugin.Information.__Internal*)__Instance)->author = (global::System.IntPtr) new global::System.IntPtr(__bytePtr0);
                        }
                    }
                }
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.UtinniPlugin> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.UtinniPlugin>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.UtinniPlugin __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.UtinniPluginInternal(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.UtinniPlugin __CreateInstance(global::UtinniCore.Utinni.UtinniPlugin.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.UtinniPluginInternal(native, skipVTables);
            }

            protected UtinniPlugin(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
                if (!skipVTables)
                    SetupVTables(true);
            }

            protected UtinniPlugin()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UtinniPlugin.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
                SetupVTables(GetType().FullName == "UtinniCore.Utinni.UtinniPlugin");
            }

            protected UtinniPlugin(global::UtinniCore.Utinni.UtinniPlugin _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UtinniPlugin.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(_0, null))
                    throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = _0.__Instance;
                __Internal.cctor(__Instance, __arg0);
                SetupVTables(GetType().FullName == "UtinniCore.Utinni.UtinniPlugin");
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.UtinniPlugin __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                ((global::UtinniCore.Utinni.UtinniPlugin.__Internal*) __Instance)->vfptr_UtinniPlugin = new global::System.IntPtr(__OriginalVTables[0]);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public virtual void Init()
            {
                var __slot = *(void**) ((IntPtr) __OriginalVTables[0] + 2 * 4);
                var ___InitDelegate = (global::UtinniCore.Delegates.Action_IntPtr) Marshal.GetDelegateForFunctionPointer(new IntPtr(__slot), typeof(global::UtinniCore.Delegates.Action_IntPtr));
                ___InitDelegate(__Instance);
            }

            public abstract global::UtinniCore.Utinni.UtinniPlugin.Information information
            {
                get;
            }

            #region Virtual table interop

            // virtual ~UtinniPlugin() {}
            private static global::UtinniCore.Delegates.Action_IntPtr_int _dtorDelegateInstance;

            private static void _dtorDelegateHook(global::System.IntPtr __instance, int delete)
            {
                if (!NativeToManagedMap.ContainsKey(__instance))
                    throw new global::System.Exception("No managed instance was found");

                var __target = (global::UtinniCore.Utinni.UtinniPlugin) NativeToManagedMap[__instance];
                if (__target.__ownsNativeInstance)
                    __target.SetupVTables();
                __target.Dispose(true);
            }

            // void init() {}
            private static global::UtinniCore.Delegates.Action_IntPtr _InitDelegateInstance;

            private static void _InitDelegateHook(global::System.IntPtr __instance)
            {
                if (!NativeToManagedMap.ContainsKey(__instance))
                    throw new global::System.Exception("No managed instance was found");

                var __target = (global::UtinniCore.Utinni.UtinniPlugin) NativeToManagedMap[__instance];
                if (__target.__ownsNativeInstance)
                    __target.SetupVTables();
                __target.Init();
            }

            // Information& getInformation() const = 0
            private static global::UtinniCore.Delegates.Func_IntPtr_IntPtr _GetInformationDelegateInstance;

            private static global::System.IntPtr _GetInformationDelegateHook(global::System.IntPtr __instance)
            {
                if (!NativeToManagedMap.ContainsKey(__instance))
                    throw new global::System.Exception("No managed instance was found");

                var __target = (global::UtinniCore.Utinni.UtinniPlugin) NativeToManagedMap[__instance];
                if (__target.__ownsNativeInstance)
                    __target.SetupVTables();
                var __ret = __target.information;
                if (ReferenceEquals(__ret, null))
                    throw new global::System.ArgumentNullException("__ret", "Cannot be null because it is a C++ reference (&).");
                return __ret.__Instance;
            }

            private static void*[] __ManagedVTables;
            private static void*[] __ManagedVTablesDtorOnly;
            private static void*[] _Thunks;
            private static void*[] __originalVTables;
            protected internal virtual void*[] __OriginalVTables => __originalVTables ?? new void*[] { *(void**) (__Instance + 0) };
            private void SetupVTables(bool destructorOnly = false)
            {
                if (_Thunks == null)
                {
                    _Thunks = new void*[3];
                    _dtorDelegateInstance += _dtorDelegateHook;
                    _Thunks[0] = Marshal.GetFunctionPointerForDelegate(_dtorDelegateInstance).ToPointer();
                    _InitDelegateInstance += _InitDelegateHook;
                    _Thunks[1] = Marshal.GetFunctionPointerForDelegate(_InitDelegateInstance).ToPointer();
                    _GetInformationDelegateInstance += _GetInformationDelegateHook;
                    _Thunks[2] = Marshal.GetFunctionPointerForDelegate(_GetInformationDelegateInstance).ToPointer();

                    __ManagedVTablesDtorOnly = new void*[1];
                    var vfptr_dtor0 = Marshal.AllocHGlobal(4 * 4);
                    __ManagedVTablesDtorOnly[0] = vfptr_dtor0.ToPointer();
                    *(void**) (vfptr_dtor0 + 0) = *(void**) (new IntPtr(*(void**) __Instance) + 0 + 0);
                    *(void**) (vfptr_dtor0 + 4) = _Thunks[0];
                    *(void**) (vfptr_dtor0 + 8) = *(void**) (new IntPtr(*(void**) __Instance) + 0 + 8);
                    *(void**) (vfptr_dtor0 + 12) = *(void**) (new IntPtr(*(void**) __Instance) + 0 + 12);

                    __ManagedVTables = new void*[1];
                    var vfptr0 = Marshal.AllocHGlobal(4 * 4);
                    __ManagedVTables[0] = vfptr0.ToPointer();
                    *(void**) (vfptr0 + 0) = *(void**) (new IntPtr(*(void**) __Instance) + 0 + 0);
                    *(void**) (vfptr0 + 4) = _Thunks[0];
                    *(void**) (vfptr0 + 8) = _Thunks[1];
                    *(void**) (vfptr0 + 12) = _Thunks[2];

                    __originalVTables = new void*[] { *(void**) (__Instance + 0) };}

                if (destructorOnly)
                {
                    *(void**) (__Instance + 0) = __ManagedVTablesDtorOnly[0];
                }
                else
                {
                    *(void**) (__Instance + 0) = __ManagedVTables[0];
                }
            }

            #endregion
        }

        public unsafe partial class UtinniPluginInternal : global::UtinniCore.Utinni.UtinniPlugin, IDisposable
        {
            private static void* __CopyValue(global::UtinniCore.Utinni.UtinniPlugin.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UtinniPlugin.__Internal));
                *(global::UtinniCore.Utinni.UtinniPlugin.__Internal*) ret = native;
                return ret.ToPointer();
            }

            internal UtinniPluginInternal(global::UtinniCore.Utinni.UtinniPlugin.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            internal UtinniPluginInternal(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public override global::UtinniCore.Utinni.UtinniPlugin.Information information
            {
                get
                {
                    var __slot = *(void**) ((IntPtr) __OriginalVTables[0] + 3 * 4);
                    var ___GetInformationDelegate = (global::UtinniCore.Delegates.Func_IntPtr_IntPtr) Marshal.GetDelegateForFunctionPointer(new IntPtr(__slot), typeof(global::UtinniCore.Delegates.Func_IntPtr_IntPtr));
                    var __ret = ___GetInformationDelegate(__Instance);
                    global::UtinniCore.Utinni.UtinniPlugin.Information __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.UtinniPlugin.Information.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.UtinniPlugin.Information) global::UtinniCore.Utinni.UtinniPlugin.Information.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.UtinniPlugin.Information.__CreateInstance(__ret);
                    return __result0;
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class PluginManager : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 4)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal global::System.IntPtr pImpl;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0PluginManager@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0PluginManager@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??1PluginManager@utinni@@QAE@XZ")]
                internal static extern void dtor(global::System.IntPtr __instance, int delete);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?loadPlugins@PluginManager@utinni@@QBEXXZ")]
                internal static extern void LoadPlugins(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getPluginConfigAt@PluginManager@utinni@@QAEABUPluginConfig@12@H@Z")]
                internal static extern global::System.IntPtr GetPluginConfigAt(global::System.IntPtr __instance, int i);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getPluginConfigCount@PluginManager@utinni@@QBEHXZ")]
                internal static extern int GetPluginConfigCount(global::System.IntPtr __instance);
            }

            public unsafe partial class PluginConfig : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 28)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal global::Std.BasicString.__Internalc__N_std_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C directoryName;

                    [FieldOffset(24)]
                    internal byte isEnabled;

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0PluginConfig@PluginManager@utinni@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0PluginConfig@PluginManager@utinni@@QAE@XZ")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??1PluginConfig@PluginManager@utinni@@QAE@XZ")]
                    internal static extern void dtor(global::System.IntPtr __instance, int delete);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.PluginManager.PluginConfig> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.PluginManager.PluginConfig>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Utinni.PluginManager.PluginConfig __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Utinni.PluginManager.PluginConfig(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Utinni.PluginManager.PluginConfig __CreateInstance(global::UtinniCore.Utinni.PluginManager.PluginConfig.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Utinni.PluginManager.PluginConfig(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Utinni.PluginManager.PluginConfig.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PluginManager.PluginConfig.__Internal));
                    global::UtinniCore.Utinni.PluginManager.PluginConfig.__Internal.cctor(ret, new global::System.IntPtr(&native));
                    return ret.ToPointer();
                }

                private PluginConfig(global::UtinniCore.Utinni.PluginManager.PluginConfig.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected PluginConfig(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public PluginConfig(global::UtinniCore.Utinni.PluginManager.PluginConfig _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PluginManager.PluginConfig.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    if (ReferenceEquals(_0, null))
                        throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = _0.__Instance;
                    __Internal.cctor(__Instance, __arg0);
                }

                public PluginConfig()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PluginManager.PluginConfig.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Utinni.PluginManager.PluginConfig __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (disposing)
                        __Internal.dtor(__Instance, 0);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public string DirectoryName
                {
                    get
                    {
                        var __basicStringRet0 = global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.PluginManager.PluginConfig.__Internal*) __Instance)->directoryName));
                        return global::Std.BasicStringExtensions.Data(__basicStringRet0);
                    }

                    set
                    {
                        global::Std.BasicStringExtensions.__Internal.Assign(new global::System.IntPtr(&((global::UtinniCore.Utinni.PluginManager.PluginConfig.__Internal*)__Instance)->directoryName), value);
                    }
                }

                public bool IsEnabled
                {
                    get
                    {
                        return ((global::UtinniCore.Utinni.PluginManager.PluginConfig.__Internal*) __Instance)->isEnabled != 0;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.PluginManager.PluginConfig.__Internal*)__Instance)->isEnabled = (byte) (value ? 1 : 0);
                    }
                }
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.PluginManager> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.PluginManager>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.PluginManager __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.PluginManager(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.PluginManager __CreateInstance(global::UtinniCore.Utinni.PluginManager.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.PluginManager(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.PluginManager.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PluginManager.__Internal));
                *(global::UtinniCore.Utinni.PluginManager.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private PluginManager(global::UtinniCore.Utinni.PluginManager.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected PluginManager(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public PluginManager()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PluginManager.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public PluginManager(global::UtinniCore.Utinni.PluginManager _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PluginManager.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.PluginManager.__Internal*) __Instance) = *((global::UtinniCore.Utinni.PluginManager.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.PluginManager __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (disposing)
                    __Internal.dtor(__Instance, 0);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public void LoadPlugins()
            {
                __Internal.LoadPlugins(__Instance);
            }

            public global::UtinniCore.Utinni.PluginManager.PluginConfig GetPluginConfigAt(int i)
            {
                var __ret = __Internal.GetPluginConfigAt(__Instance, i);
                global::UtinniCore.Utinni.PluginManager.PluginConfig __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.PluginManager.PluginConfig.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.PluginManager.PluginConfig) global::UtinniCore.Utinni.PluginManager.PluginConfig.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.PluginManager.PluginConfig.__CreateInstance(__ret);
                return __result0;
            }

            public int PluginConfigCount
            {
                get
                {
                    var __ret = __Internal.GetPluginConfigCount(__Instance);
                    return __ret;
                }
            }
        }
    }

    namespace Utinni
    {
        namespace SkeletalAppearance
        {
            public unsafe partial class skeleton
            {
                public partial struct __Internal
                {
                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?setRenderSkeleton@skeletalAppearance@utinni@@YAX_N@Z")]
                    internal static extern void SetRenderSkeleton(bool value);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?detour@skeletalAppearance@utinni@@YAXXZ")]
                    internal static extern void Detour();
                }

                public static void SetRenderSkeleton(bool value)
                {
                    __Internal.SetRenderSkeleton(value);
                }

                public static void Detour()
                {
                    __Internal.Detour();
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class StartupData : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 64)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal byte createOwnWindow;

                [FieldOffset(4)]
                internal global::System.IntPtr windowName;

                [FieldOffset(8)]
                internal global::System.IntPtr normalIcon;

                [FieldOffset(12)]
                internal global::System.IntPtr smallIcon;

                [FieldOffset(16)]
                internal global::System.IntPtr hInstance;

                [FieldOffset(20)]
                internal byte useNewWindowHandle;

                [FieldOffset(21)]
                internal byte processMessagePump;

                [FieldOffset(24)]
                internal global::System.IntPtr windowHandle;

                [FieldOffset(28)]
                internal byte writeMiniDumps;

                [FieldOffset(29)]
                internal byte unk1;

                [FieldOffset(30)]
                internal byte unk2;

                [FieldOffset(32)]
                internal global::System.IntPtr commandLine;

                [FieldOffset(36)]
                internal int argc;

                [FieldOffset(40)]
                internal global::System.IntPtr argv;

                [FieldOffset(44)]
                internal global::System.IntPtr configFile;

                [FieldOffset(48)]
                internal global::System.IntPtr unk3;

                [FieldOffset(52)]
                internal float frameRateLimit;

                [FieldOffset(56)]
                internal byte unk4;

                [FieldOffset(57)]
                internal byte unk5;

                [FieldOffset(60)]
                internal uint lostFocusCallback;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0StartupData@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.StartupData> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.StartupData>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.StartupData __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.StartupData(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.StartupData __CreateInstance(global::UtinniCore.Utinni.StartupData.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.StartupData(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.StartupData.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.StartupData.__Internal));
                *(global::UtinniCore.Utinni.StartupData.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private StartupData(global::UtinniCore.Utinni.StartupData.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected StartupData(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public StartupData()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.StartupData.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public StartupData(global::UtinniCore.Utinni.StartupData _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.StartupData.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance) = *((global::UtinniCore.Utinni.StartupData.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.StartupData __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public bool CreateOwnWindow
            {
                get
                {
                    return ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->createOwnWindow != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->createOwnWindow = (byte) (value ? 1 : 0);
                }
            }

            public string WindowName
            {
                get
                {
                    if (((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->windowName == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->windowName;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->windowName, __length);
                }

                set
                {
                    byte[] __bytes0 = global::System.Text.Encoding.UTF8.GetBytes(value);
                    fixed (byte* __bytePtr0 = __bytes0)
                    {
                        ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->windowName = (global::System.IntPtr) new global::System.IntPtr(__bytePtr0);
                    }
                }
            }

            public bool UseNewWindowHandle
            {
                get
                {
                    return ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->useNewWindowHandle != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->useNewWindowHandle = (byte) (value ? 1 : 0);
                }
            }

            public bool ProcessMessagePump
            {
                get
                {
                    return ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->processMessagePump != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->processMessagePump = (byte) (value ? 1 : 0);
                }
            }

            public bool WriteMiniDumps
            {
                get
                {
                    return ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->writeMiniDumps != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->writeMiniDumps = (byte) (value ? 1 : 0);
                }
            }

            public bool Unk1
            {
                get
                {
                    return ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->unk1 != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->unk1 = (byte) (value ? 1 : 0);
                }
            }

            public bool Unk2
            {
                get
                {
                    return ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->unk2 != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->unk2 = (byte) (value ? 1 : 0);
                }
            }

            public string CommandLine
            {
                get
                {
                    if (((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->commandLine == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->commandLine;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->commandLine, __length);
                }

                set
                {
                    byte[] __bytes0 = global::System.Text.Encoding.UTF8.GetBytes(value);
                    fixed (byte* __bytePtr0 = __bytes0)
                    {
                        ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->commandLine = (global::System.IntPtr) new global::System.IntPtr(__bytePtr0);
                    }
                }
            }

            public int Argc
            {
                get
                {
                    return ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->argc;
                }

                set
                {
                    ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->argc = value;
                }
            }

            public sbyte** Argv
            {
                get
                {
                    return (sbyte**) ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->argv;
                }

                set
                {
                    ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->argv = (global::System.IntPtr) value;
                }
            }

            public string ConfigFile
            {
                get
                {
                    if (((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->configFile == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->configFile;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->configFile, __length);
                }

                set
                {
                    byte[] __bytes0 = global::System.Text.Encoding.UTF8.GetBytes(value);
                    fixed (byte* __bytePtr0 = __bytes0)
                    {
                        ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->configFile = (global::System.IntPtr) new global::System.IntPtr(__bytePtr0);
                    }
                }
            }

            public string Unk3
            {
                get
                {
                    if (((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->unk3 == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->unk3;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->unk3, __length);
                }

                set
                {
                    byte[] __bytes0 = global::System.Text.Encoding.UTF8.GetBytes(value);
                    fixed (byte* __bytePtr0 = __bytes0)
                    {
                        ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->unk3 = (global::System.IntPtr) new global::System.IntPtr(__bytePtr0);
                    }
                }
            }

            public float FrameRateLimit
            {
                get
                {
                    return ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->frameRateLimit;
                }

                set
                {
                    ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->frameRateLimit = value;
                }
            }

            public bool Unk4
            {
                get
                {
                    return ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->unk4 != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->unk4 = (byte) (value ? 1 : 0);
                }
            }

            public bool Unk5
            {
                get
                {
                    return ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->unk5 != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->unk5 = (byte) (value ? 1 : 0);
                }
            }

            public uint LostFocusCallback
            {
                get
                {
                    return ((global::UtinniCore.Utinni.StartupData.__Internal*) __Instance)->lostFocusCallback;
                }

                set
                {
                    ((global::UtinniCore.Utinni.StartupData.__Internal*)__Instance)->lostFocusCallback = value;
                }
            }
        }

        public unsafe partial class Client : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Client@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setHwnd@Client@utinni@@SAXPAX@Z")]
                internal static extern void SetHwnd(global::System.IntPtr newHwnd);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setHInstance@Client@utinni@@SAXPAX@Z")]
                internal static extern void SetHInstance(global::System.IntPtr newHInstance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setSize@Client@utinni@@SAXHH@Z")]
                internal static extern void SetSize(int width, int height);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?suspendInput@Client@utinni@@SAXXZ")]
                internal static extern void SuspendInput();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?resumeInput@Client@utinni@@SAXXZ")]
                internal static extern void ResumeInput();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?detour@Client@utinni@@SAXXZ")]
                internal static extern void Detour();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getEditorMode@Client@utinni@@SA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool GetEditorMode();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setEditorMode@Client@utinni@@SAX_N@Z")]
                internal static extern void SetEditorMode(bool enable);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getWidth@Client@utinni@@SAHXZ")]
                internal static extern int GetWidth();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getHeight@Client@utinni@@SAHXZ")]
                internal static extern int GetHeight();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isInputAllowed@Client@utinni@@SA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsInputAllowed();
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Client> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Client>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.Client __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Client(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.Client __CreateInstance(global::UtinniCore.Utinni.Client.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Client(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.Client.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Client.__Internal));
                *(global::UtinniCore.Utinni.Client.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private Client(global::UtinniCore.Utinni.Client.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected Client(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public Client()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Client.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public Client(global::UtinniCore.Utinni.Client _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Client.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.Client.__Internal*) __Instance) = *((global::UtinniCore.Utinni.Client.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.Client __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public static void SetHwnd(global::System.IntPtr newHwnd)
            {
                __Internal.SetHwnd(newHwnd);
            }

            public static void SetHInstance(global::System.IntPtr newHInstance)
            {
                __Internal.SetHInstance(newHInstance);
            }

            public static void SetSize(int width, int height)
            {
                __Internal.SetSize(width, height);
            }

            public static void SuspendInput()
            {
                __Internal.SuspendInput();
            }

            public static void ResumeInput()
            {
                __Internal.ResumeInput();
            }

            public static void Detour()
            {
                __Internal.Detour();
            }

            public static bool EditorMode
            {
                get
                {
                    var __ret = __Internal.GetEditorMode();
                    return __ret;
                }

                set
                {
                    __Internal.SetEditorMode(value);
                }
            }

            public static int Width
            {
                get
                {
                    var __ret = __Internal.GetWidth();
                    return __ret;
                }
            }

            public static int Height
            {
                get
                {
                    var __ret = __Internal.GetHeight();
                    return __ret;
                }
            }

            public static bool IsInputAllowed
            {
                get
                {
                    var __ret = __Internal.IsInputAllowed();
                    return __ret;
                }
            }
        }
    }

    namespace Utinni
    {
        public enum VirtualKeys
        {
            VK_A = 65,
            VK_C = 67,
            VK_D = 68,
            VK_S = 83,
            VK_W = 87,
            VK_X = 88
        }

        public unsafe partial class IoWin : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 12)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal global::System.IntPtr name;

                [FieldOffset(8)]
                internal global::System.IntPtr ioWin;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0IoWin@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?detour@IoWin@utinni@@SAXXZ")]
                internal static extern void Detour();
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.IoWin> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.IoWin>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.IoWin __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.IoWin(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.IoWin __CreateInstance(global::UtinniCore.Utinni.IoWin.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.IoWin(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.IoWin.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.IoWin.__Internal));
                *(global::UtinniCore.Utinni.IoWin.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private IoWin(global::UtinniCore.Utinni.IoWin.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected IoWin(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public IoWin()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.IoWin.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public IoWin(global::UtinniCore.Utinni.IoWin _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.IoWin.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.IoWin.__Internal*) __Instance) = *((global::UtinniCore.Utinni.IoWin.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.IoWin __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public static void Detour()
            {
                __Internal.Detour();
            }

            public uint Vtbl
            {
                get
                {
                    return ((global::UtinniCore.Utinni.IoWin.__Internal*) __Instance)->vtbl;
                }

                set
                {
                    ((global::UtinniCore.Utinni.IoWin.__Internal*)__Instance)->vtbl = value;
                }
            }

            public sbyte* Name
            {
                get
                {
                    return (sbyte*) ((global::UtinniCore.Utinni.IoWin.__Internal*) __Instance)->name;
                }

                set
                {
                    ((global::UtinniCore.Utinni.IoWin.__Internal*)__Instance)->name = (global::System.IntPtr) value;
                }
            }

            public global::UtinniCore.Utinni.IoWin ioWin
            {
                get
                {
                    global::UtinniCore.Utinni.IoWin __result0;
                    if (((global::UtinniCore.Utinni.IoWin.__Internal*) __Instance)->ioWin == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.IoWin.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.IoWin.__Internal*) __Instance)->ioWin))
                        __result0 = (global::UtinniCore.Utinni.IoWin) global::UtinniCore.Utinni.IoWin.NativeToManagedMap[((global::UtinniCore.Utinni.IoWin.__Internal*) __Instance)->ioWin];
                    else __result0 = global::UtinniCore.Utinni.IoWin.__CreateInstance(((global::UtinniCore.Utinni.IoWin.__Internal*) __Instance)->ioWin);
                    return __result0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.IoWin.__Internal*)__Instance)->ioWin = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                }
            }
        }

        public unsafe partial class MouseCursor : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 28)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint style;

                [FieldOffset(4)]
                internal byte unk01;

                [FieldOffset(8)]
                internal int unk02;

                [FieldOffset(12)]
                internal int localX;

                [FieldOffset(16)]
                internal int localY;

                [FieldOffset(20)]
                internal global::System.IntPtr x;

                [FieldOffset(24)]
                internal global::System.IntPtr y;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0MouseCursor@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.MouseCursor> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.MouseCursor>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.MouseCursor __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.MouseCursor(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.MouseCursor __CreateInstance(global::UtinniCore.Utinni.MouseCursor.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.MouseCursor(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.MouseCursor.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.MouseCursor.__Internal));
                *(global::UtinniCore.Utinni.MouseCursor.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private MouseCursor(global::UtinniCore.Utinni.MouseCursor.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected MouseCursor(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public MouseCursor()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.MouseCursor.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public MouseCursor(global::UtinniCore.Utinni.MouseCursor _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.MouseCursor.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.MouseCursor.__Internal*) __Instance) = *((global::UtinniCore.Utinni.MouseCursor.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.MouseCursor __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public uint Style
            {
                get
                {
                    return ((global::UtinniCore.Utinni.MouseCursor.__Internal*) __Instance)->style;
                }

                set
                {
                    ((global::UtinniCore.Utinni.MouseCursor.__Internal*)__Instance)->style = value;
                }
            }

            public bool Unk01
            {
                get
                {
                    return ((global::UtinniCore.Utinni.MouseCursor.__Internal*) __Instance)->unk01 != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.MouseCursor.__Internal*)__Instance)->unk01 = (byte) (value ? 1 : 0);
                }
            }

            public int Unk02
            {
                get
                {
                    return ((global::UtinniCore.Utinni.MouseCursor.__Internal*) __Instance)->unk02;
                }

                set
                {
                    ((global::UtinniCore.Utinni.MouseCursor.__Internal*)__Instance)->unk02 = value;
                }
            }

            public int LocalX
            {
                get
                {
                    return ((global::UtinniCore.Utinni.MouseCursor.__Internal*) __Instance)->localX;
                }

                set
                {
                    ((global::UtinniCore.Utinni.MouseCursor.__Internal*)__Instance)->localX = value;
                }
            }

            public int LocalY
            {
                get
                {
                    return ((global::UtinniCore.Utinni.MouseCursor.__Internal*) __Instance)->localY;
                }

                set
                {
                    ((global::UtinniCore.Utinni.MouseCursor.__Internal*)__Instance)->localY = value;
                }
            }

            public int* X
            {
                get
                {
                    return (int*) ((global::UtinniCore.Utinni.MouseCursor.__Internal*) __Instance)->x;
                }

                set
                {
                    ((global::UtinniCore.Utinni.MouseCursor.__Internal*)__Instance)->x = (global::System.IntPtr) value;
                }
            }

            public int* Y
            {
                get
                {
                    return (int*) ((global::UtinniCore.Utinni.MouseCursor.__Internal*) __Instance)->y;
                }

                set
                {
                    ((global::UtinniCore.Utinni.MouseCursor.__Internal*)__Instance)->y = (global::System.IntPtr) value;
                }
            }
        }

        public unsafe partial class IoEvent : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 20)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint unk;

                [FieldOffset(4)]
                internal int type;

                [FieldOffset(8)]
                internal int arg1;

                [FieldOffset(12)]
                internal int arg2;

                [FieldOffset(16)]
                internal float arg3;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0IoEvent@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            public enum Type
            {
                tUpdate = 4,
                tInputReset = 5,
                tCharacter = 6,
                tKeyDown = 7,
                tKeyUp = 8,
                tMouseButtonDown = 15,
                tMouseButtonUp = 16
            }

            public enum Keys
            {
                KcQ = 16,
                KcW = 17,
                KcE = 18,
                KcR = 19,
                KcT = 20,
                KcY = 21,
                KcU = 22,
                KcI = 23,
                KcO = 24,
                KcP = 25,
                KcA = 30,
                KcS = 31,
                KcD = 32,
                KcF = 33,
                KcG = 34,
                KcH = 35,
                KcJ = 36,
                KcK = 37,
                KcL = 38,
                KcZ = 44,
                KcX = 45,
                KcC = 46,
                KcV = 47,
                KcB = 48,
                KcN = 49,
                KcM = 50,
                KcLShift = 42,
                KcLCtrl = 29,
                KcLAlt = 56,
                KcRShift = 54,
                KcRCtrl = 157,
                KcRAlt = 184,
                KcEnter = 28,
                KcSpace = 57
            }

            public enum MouseButtons
            {
                MbLeft = 0,
                MbRight = 1,
                MbMiddle = 2,
                MbSide = 3
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.IoEvent> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.IoEvent>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.IoEvent __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.IoEvent(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.IoEvent __CreateInstance(global::UtinniCore.Utinni.IoEvent.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.IoEvent(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.IoEvent.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.IoEvent.__Internal));
                *(global::UtinniCore.Utinni.IoEvent.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private IoEvent(global::UtinniCore.Utinni.IoEvent.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected IoEvent(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public IoEvent()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.IoEvent.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public IoEvent(global::UtinniCore.Utinni.IoEvent _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.IoEvent.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.IoEvent.__Internal*) __Instance) = *((global::UtinniCore.Utinni.IoEvent.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.IoEvent __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public uint Unk
            {
                get
                {
                    return ((global::UtinniCore.Utinni.IoEvent.__Internal*) __Instance)->unk;
                }

                set
                {
                    ((global::UtinniCore.Utinni.IoEvent.__Internal*)__Instance)->unk = value;
                }
            }

            public int type
            {
                get
                {
                    return ((global::UtinniCore.Utinni.IoEvent.__Internal*) __Instance)->type;
                }

                set
                {
                    ((global::UtinniCore.Utinni.IoEvent.__Internal*)__Instance)->type = value;
                }
            }

            public int Arg1
            {
                get
                {
                    return ((global::UtinniCore.Utinni.IoEvent.__Internal*) __Instance)->arg1;
                }

                set
                {
                    ((global::UtinniCore.Utinni.IoEvent.__Internal*)__Instance)->arg1 = value;
                }
            }

            public int Arg2
            {
                get
                {
                    return ((global::UtinniCore.Utinni.IoEvent.__Internal*) __Instance)->arg2;
                }

                set
                {
                    ((global::UtinniCore.Utinni.IoEvent.__Internal*)__Instance)->arg2 = value;
                }
            }

            public float Arg3
            {
                get
                {
                    return ((global::UtinniCore.Utinni.IoEvent.__Internal*) __Instance)->arg3;
                }

                set
                {
                    ((global::UtinniCore.Utinni.IoEvent.__Internal*)__Instance)->arg3 = value;
                }
            }
        }

        public unsafe partial class MessageQueue : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0MessageQueue@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getMessage@MessageQueue@utinni@@QAEXHPAHPAM@Z")]
                internal static extern void GetMessage(global::System.IntPtr __instance, int index, int* msg, float* value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?appendMessage@MessageQueue@utinni@@QAEXHM@Z")]
                internal static extern void AppendMessage(global::System.IntPtr __instance, int msg, float value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?appendMessage@MessageQueue@utinni@@QAEXHMI@Z")]
                internal static extern void AppendMessage(global::System.IntPtr __instance, int msg, float value, uint data);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getCount@MessageQueue@utinni@@QAEHXZ")]
                internal static extern int GetCount(global::System.IntPtr __instance);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.MessageQueue> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.MessageQueue>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.MessageQueue __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.MessageQueue(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.MessageQueue __CreateInstance(global::UtinniCore.Utinni.MessageQueue.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.MessageQueue(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.MessageQueue.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.MessageQueue.__Internal));
                *(global::UtinniCore.Utinni.MessageQueue.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private MessageQueue(global::UtinniCore.Utinni.MessageQueue.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected MessageQueue(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public MessageQueue()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.MessageQueue.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public MessageQueue(global::UtinniCore.Utinni.MessageQueue _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.MessageQueue.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.MessageQueue.__Internal*) __Instance) = *((global::UtinniCore.Utinni.MessageQueue.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.MessageQueue __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public void GetMessage(int index, ref int msg, ref float value)
            {
                fixed (int* __msg1 = &msg)
                {
                    var __arg1 = __msg1;
                    fixed (float* __value2 = &value)
                    {
                        var __arg2 = __value2;
                        __Internal.GetMessage(__Instance, index, __arg1, __arg2);
                    }
                }
            }

            public void AppendMessage(int msg, float value)
            {
                __Internal.AppendMessage(__Instance, msg, value);
            }

            public void AppendMessage(int msg, float value, uint data)
            {
                __Internal.AppendMessage(__Instance, msg, value, data);
            }

            public int Count
            {
                get
                {
                    var __ret = __Internal.GetCount(__Instance);
                    return __ret;
                }
            }
        }
    }

    namespace Utinni
    {
        namespace DebugCamera
        {
            public enum Commands
            {
                CmdUp = 3332,
                CmdDown = 3333,
                CmdForward = 3334,
                CmdBackward = 3335,
                CmdRight = 3336,
                CmdLeft = 3337,
                CmdSpeedBoost = 3338,
                CmdMouseMovePosition = 3339
            }

            public unsafe partial class debug_camera
            {
                public partial struct __Internal
                {
                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?setSpeed@debugCamera@utinni@@YAXM@Z")]
                    internal static extern void SetSpeed(float value);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?getSpeed@debugCamera@utinni@@YAMXZ")]
                    internal static extern float GetSpeed();

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?setFastSpeedMulti@debugCamera@utinni@@YAXM@Z")]
                    internal static extern void SetFastSpeedMulti(float value);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?setMouseWheelSpeed@debugCamera@utinni@@YAXM@Z")]
                    internal static extern void SetMouseWheelSpeed(float value);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?enableDragPlayer@debugCamera@utinni@@YAX_N@Z")]
                    internal static extern void EnableDragPlayer(bool value);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?processIoEvent@debugCamera@utinni@@YAXPAUIoEvent@2@@Z")]
                    internal static extern void ProcessIoEvent(global::System.IntPtr ioEvent);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?detour@debugCamera@utinni@@YAXXZ")]
                    internal static extern void Detour();

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?patch@debugCamera@utinni@@YAXXZ")]
                    internal static extern void Patch();
                }

                public static void SetSpeed(float value)
                {
                    __Internal.SetSpeed(value);
                }

                public static float GetSpeed()
                {
                    var __ret = __Internal.GetSpeed();
                    return __ret;
                }

                public static void SetFastSpeedMulti(float value)
                {
                    __Internal.SetFastSpeedMulti(value);
                }

                public static void SetMouseWheelSpeed(float value)
                {
                    __Internal.SetMouseWheelSpeed(value);
                }

                public static void EnableDragPlayer(bool value)
                {
                    __Internal.EnableDragPlayer(value);
                }

                public static void ProcessIoEvent(global::UtinniCore.Utinni.IoEvent ioEvent)
                {
                    var __arg0 = ReferenceEquals(ioEvent, null) ? global::System.IntPtr.Zero : ioEvent.__Instance;
                    __Internal.ProcessIoEvent(__arg0);
                }

                public static void Detour()
                {
                    __Internal.Detour();
                }

                public static void Patch()
                {
                    __Internal.Patch();
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class Repository : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Repository@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Repository@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getFilenameAt@Repository@utinni@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")]
                internal static extern void GetFilenameAt(global::System.IntPtr __instance, global::System.IntPtr @return, int index);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getDirectoryInfo@Repository@utinni@@QAEPAUDirectoryInfo@12@PBD@Z")]
                internal static extern global::System.IntPtr GetDirectoryInfo(global::System.IntPtr __instance, [MarshalAs(UnmanagedType.LPUTF8Str)] string directoryName);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getFilenameCount@Repository@utinni@@QAEHXZ")]
                internal static extern int GetFilenameCount(global::System.IntPtr __instance);
            }

            public unsafe partial class DirectoryInfo : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 8)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal int startIndex;

                    [FieldOffset(4)]
                    internal int size;

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0DirectoryInfo@Repository@utinni@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Repository.DirectoryInfo> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Repository.DirectoryInfo>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Utinni.Repository.DirectoryInfo __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Utinni.Repository.DirectoryInfo(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Utinni.Repository.DirectoryInfo __CreateInstance(global::UtinniCore.Utinni.Repository.DirectoryInfo.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Utinni.Repository.DirectoryInfo(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Utinni.Repository.DirectoryInfo.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Repository.DirectoryInfo.__Internal));
                    *(global::UtinniCore.Utinni.Repository.DirectoryInfo.__Internal*) ret = native;
                    return ret.ToPointer();
                }

                private DirectoryInfo(global::UtinniCore.Utinni.Repository.DirectoryInfo.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected DirectoryInfo(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public DirectoryInfo()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Repository.DirectoryInfo.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                public DirectoryInfo(global::UtinniCore.Utinni.Repository.DirectoryInfo _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Repository.DirectoryInfo.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    *((global::UtinniCore.Utinni.Repository.DirectoryInfo.__Internal*) __Instance) = *((global::UtinniCore.Utinni.Repository.DirectoryInfo.__Internal*) _0.__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Utinni.Repository.DirectoryInfo __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public int StartIndex
                {
                    get
                    {
                        return ((global::UtinniCore.Utinni.Repository.DirectoryInfo.__Internal*) __Instance)->startIndex;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.Repository.DirectoryInfo.__Internal*)__Instance)->startIndex = value;
                    }
                }

                public int Size
                {
                    get
                    {
                        return ((global::UtinniCore.Utinni.Repository.DirectoryInfo.__Internal*) __Instance)->size;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.Repository.DirectoryInfo.__Internal*)__Instance)->size = value;
                    }
                }
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Repository> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Repository>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.Repository __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Repository(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.Repository __CreateInstance(global::UtinniCore.Utinni.Repository.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Repository(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.Repository.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Repository.__Internal));
                *(global::UtinniCore.Utinni.Repository.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private Repository(global::UtinniCore.Utinni.Repository.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected Repository(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public Repository()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Repository.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public Repository(global::UtinniCore.Utinni.Repository _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Repository.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.Repository.__Internal*) __Instance) = *((global::UtinniCore.Utinni.Repository.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.Repository __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public string GetFilenameAt(int index)
            {
                var __ret = new global::Std.BasicString.__Internalc__N_std_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C();
                __Internal.GetFilenameAt(__Instance, new IntPtr(&__ret), index);
                var __basicStringRet0 = global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>.__CreateInstance(new global::System.IntPtr(&__ret));
                var __retString0 = global::Std.BasicStringExtensions.Data(__basicStringRet0);
                __basicStringRet0.Dispose();
                return __retString0;
            }

            public global::UtinniCore.Utinni.Repository.DirectoryInfo GetDirectoryInfo(string directoryName)
            {
                var __ret = __Internal.GetDirectoryInfo(__Instance, directoryName);
                global::UtinniCore.Utinni.Repository.DirectoryInfo __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.Repository.DirectoryInfo.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.Repository.DirectoryInfo) global::UtinniCore.Utinni.Repository.DirectoryInfo.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.Repository.DirectoryInfo.__CreateInstance(__ret);
                return __result0;
            }

            public int FilenameCount
            {
                get
                {
                    var __ret = __Internal.GetFilenameCount(__Instance);
                    return __ret;
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class Game : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Game@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addInstallCallback@Game@utinni@@SAXP6AXXZ@Z")]
                internal static extern void AddInstallCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addPreMainLoopCallback@Game@utinni@@SAXP6AXXZ@Z")]
                internal static extern void AddPreMainLoopCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addMainLoopCallback@Game@utinni@@SAXP6AXXZ@Z")]
                internal static extern void AddMainLoopCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addSetSceneCallback@Game@utinni@@SAXP6AXXZ@Z")]
                internal static extern void AddSetSceneCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addCleanupSceneCallback@Game@utinni@@SAXP6AXXZ@Z")]
                internal static extern void AddCleanupSceneCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?detour@Game@utinni@@SAXXZ")]
                internal static extern void Detour();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?quit@Game@utinni@@SAXXZ")]
                internal static extern void Quit();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?loadScene@Game@utinni@@SAXXZ")]
                internal static extern void LoadScene();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?loadScene@Game@utinni@@SAXPBD0@Z")]
                internal static extern void LoadScene([MarshalAs(UnmanagedType.LPUTF8Str)] string terrainFilename, [MarshalAs(UnmanagedType.LPUTF8Str)] string avatarObjectFilename);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?cleanupScene@Game@utinni@@SAXXZ")]
                internal static extern void CleanupScene();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isRunning@Game@utinni@@SA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsRunning();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getRepository@Game@utinni@@SAPAVRepository@2@XZ")]
                internal static extern global::System.IntPtr GetRepository();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getPlayer@Game@utinni@@SAPAVObject@2@XZ")]
                internal static extern global::System.IntPtr GetPlayer();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getPlayerCreatureObject@Game@utinni@@SAPAVObject@2@XZ")]
                internal static extern global::System.IntPtr GetPlayerCreatureObject();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getPlayerLookAtTargetObjectNetworkId@Game@utinni@@SAIXZ")]
                internal static extern uint GetPlayerLookAtTargetObjectNetworkId();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getPlayerLookAtTargetObject@Game@utinni@@SAPAVObject@2@XZ")]
                internal static extern global::System.IntPtr GetPlayerLookAtTargetObject();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getCamera@Game@utinni@@SAPAVCamera@2@XZ")]
                internal static extern global::System.IntPtr GetCamera();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getConstCamera@Game@utinni@@SAPBVCamera@2@XZ")]
                internal static extern global::System.IntPtr GetConstCamera();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isSafeToUse@Game@utinni@@SA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsSafeToUse();
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Game> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Game>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.Game __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Game(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.Game __CreateInstance(global::UtinniCore.Utinni.Game.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Game(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.Game.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Game.__Internal));
                *(global::UtinniCore.Utinni.Game.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private Game(global::UtinniCore.Utinni.Game.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected Game(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public Game()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Game.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public Game(global::UtinniCore.Utinni.Game _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Game.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.Game.__Internal*) __Instance) = *((global::UtinniCore.Utinni.Game.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.Game __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public static void AddInstallCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddInstallCallback(__arg0);
            }

            public static void AddPreMainLoopCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddPreMainLoopCallback(__arg0);
            }

            public static void AddMainLoopCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddMainLoopCallback(__arg0);
            }

            public static void AddSetSceneCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddSetSceneCallback(__arg0);
            }

            public static void AddCleanupSceneCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddCleanupSceneCallback(__arg0);
            }

            public static void Detour()
            {
                __Internal.Detour();
            }

            public static void Quit()
            {
                __Internal.Quit();
            }

            public static void LoadScene()
            {
                __Internal.LoadScene();
            }

            public static void LoadScene(string terrainFilename, string avatarObjectFilename)
            {
                __Internal.LoadScene(terrainFilename, avatarObjectFilename);
            }

            public static void CleanupScene()
            {
                __Internal.CleanupScene();
            }

            public static bool IsRunning
            {
                get
                {
                    var __ret = __Internal.IsRunning();
                    return __ret;
                }
            }

            public static global::UtinniCore.Utinni.Repository Repository
            {
                get
                {
                    var __ret = __Internal.GetRepository();
                    global::UtinniCore.Utinni.Repository __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Repository.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.Repository) global::UtinniCore.Utinni.Repository.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.Repository.__CreateInstance(__ret);
                    return __result0;
                }
            }

            public static global::UtinniCore.Utinni.Object Player
            {
                get
                {
                    var __ret = __Internal.GetPlayer();
                    global::UtinniCore.Utinni.Object __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(__ret);
                    return __result0;
                }
            }

            public static global::UtinniCore.Utinni.Object PlayerCreatureObject
            {
                get
                {
                    var __ret = __Internal.GetPlayerCreatureObject();
                    global::UtinniCore.Utinni.Object __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(__ret);
                    return __result0;
                }
            }

            public static uint PlayerLookAtTargetObjectNetworkId
            {
                get
                {
                    var __ret = __Internal.GetPlayerLookAtTargetObjectNetworkId();
                    return __ret;
                }
            }

            public static global::UtinniCore.Utinni.Object PlayerLookAtTargetObject
            {
                get
                {
                    var __ret = __Internal.GetPlayerLookAtTargetObject();
                    global::UtinniCore.Utinni.Object __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(__ret);
                    return __result0;
                }
            }

            public static global::UtinniCore.Utinni.Camera Camera
            {
                get
                {
                    var __ret = __Internal.GetCamera();
                    global::UtinniCore.Utinni.Camera __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Camera.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.Camera) global::UtinniCore.Utinni.Camera.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.Camera.__CreateInstance(__ret);
                    return __result0;
                }
            }

            public static global::UtinniCore.Utinni.Camera ConstCamera
            {
                get
                {
                    var __ret = __Internal.GetConstCamera();
                    global::UtinniCore.Utinni.Camera __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Camera.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.Camera) global::UtinniCore.Utinni.Camera.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.Camera.__CreateInstance(__ret);
                    return __result0;
                }
            }

            public static bool IsSafeToUse
            {
                get
                {
                    var __ret = __Internal.IsSafeToUse();
                    return __ret;
                }
            }
        }
    }

    namespace DirectX
    {
        public unsafe partial class DepthTexture : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 24)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal global::System.IntPtr pTextureDepth;

                [FieldOffset(4)]
                internal global::System.IntPtr pTextureColor;

                [FieldOffset(8)]
                internal byte m_isRESZ;

                [FieldOffset(9)]
                internal byte m_isINTZ;

                [FieldOffset(10)]
                internal byte m_isNVAPI;

                [FieldOffset(11)]
                internal byte m_isSupported;

                [FieldOffset(12)]
                internal global::System.IntPtr pRegisteredDSS;

                [FieldOffset(16)]
                internal global::System.IntPtr _pDevice;

                [FieldOffset(20)]
                internal int stage;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0DepthTexture@directX@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0DepthTexture@directX@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??1DepthTexture@directX@@QAE@XZ")]
                internal static extern void dtor(global::System.IntPtr __instance, int delete);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?release@DepthTexture@directX@@QAEXXZ")]
                internal static extern void Release(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?resolveDepth@DepthTexture@directX@@QAEXXZ")]
                internal static extern void ResolveDepth(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addDepthResolveCallback@DepthTexture@directX@@SAXP6AXXZ@Z")]
                internal static extern void AddDepthResolveCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?isINTZ@DepthTexture@directX@@QAE_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsINTZ(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?isSupported@DepthTexture@directX@@QAE_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsSupported(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?isNvidia@DepthTexture@directX@@QAE_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsNvidia(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getStage@DepthTexture@directX@@QAEHXZ")]
                internal static extern int GetStage(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setStage@DepthTexture@directX@@QAEXH@Z")]
                internal static extern void SetStage(global::System.IntPtr __instance, int value);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.DirectX.DepthTexture> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.DirectX.DepthTexture>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.DirectX.DepthTexture __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.DirectX.DepthTexture(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.DirectX.DepthTexture __CreateInstance(global::UtinniCore.DirectX.DepthTexture.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.DirectX.DepthTexture(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.DirectX.DepthTexture.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.DirectX.DepthTexture.__Internal));
                *(global::UtinniCore.DirectX.DepthTexture.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private DepthTexture(global::UtinniCore.DirectX.DepthTexture.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected DepthTexture(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public DepthTexture()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.DirectX.DepthTexture.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public DepthTexture(global::UtinniCore.DirectX.DepthTexture _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.DirectX.DepthTexture.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.DirectX.DepthTexture.__Internal*) __Instance) = *((global::UtinniCore.DirectX.DepthTexture.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.DirectX.DepthTexture __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (disposing)
                    __Internal.dtor(__Instance, 0);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public void Release()
            {
                __Internal.Release(__Instance);
            }

            public void ResolveDepth()
            {
                __Internal.ResolveDepth(__Instance);
            }

            public static void AddDepthResolveCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddDepthResolveCallback(__arg0);
            }

            public bool IsINTZ
            {
                get
                {
                    var __ret = __Internal.IsINTZ(__Instance);
                    return __ret;
                }
            }

            public bool IsSupported
            {
                get
                {
                    var __ret = __Internal.IsSupported(__Instance);
                    return __ret;
                }
            }

            public bool IsNvidia
            {
                get
                {
                    var __ret = __Internal.IsNvidia(__Instance);
                    return __ret;
                }
            }

            public int Stage
            {
                get
                {
                    var __ret = __Internal.GetStage(__Instance);
                    return __ret;
                }

                set
                {
                    __Internal.SetStage(__Instance, value);
                }
            }
        }
    }

    namespace DirectX
    {
        public unsafe partial class directx9
        {
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?detour@directX@@YAXXZ")]
                internal static extern void Detour();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?cleanup@directX@@YAXXZ")]
                internal static extern void Cleanup();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getDepthTexture@directX@@YAPAVDepthTexture@1@XZ")]
                internal static extern global::System.IntPtr GetDepthTexture();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?toggleWireframe@directX@@YAXXZ")]
                internal static extern void ToggleWireframe();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?blockPresent@directX@@YAX_N@Z")]
                internal static extern void BlockPresent(bool value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isPresentBlocked@directX@@YA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsPresentBlocked();
            }

            public static void Detour()
            {
                __Internal.Detour();
            }

            public static void Cleanup()
            {
                __Internal.Cleanup();
            }

            public static global::UtinniCore.DirectX.DepthTexture GetDepthTexture()
            {
                var __ret = __Internal.GetDepthTexture();
                global::UtinniCore.DirectX.DepthTexture __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.DirectX.DepthTexture.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.DirectX.DepthTexture) global::UtinniCore.DirectX.DepthTexture.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.DirectX.DepthTexture.__CreateInstance(__ret);
                return __result0;
            }

            public static void ToggleWireframe()
            {
                __Internal.ToggleWireframe();
            }

            public static void BlockPresent(bool value)
            {
                __Internal.BlockPresent(value);
            }

            public static bool IsPresentBlocked()
            {
                var __ret = __Internal.IsPresentBlocked();
                return __ret;
            }
        }
    }

    namespace Swg
    {
        namespace Math
        {
            public unsafe partial class Vector2d : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 8)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal float X;

                    [FieldOffset(4)]
                    internal float Y;

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Vector2d@math@swg@@QAE@XZ")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Vector2d@math@swg@@QAE@MM@Z")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance, float x, float y);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Vector2d@math@swg@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??HVector2d@math@swg@@QBE?AU012@ABU012@@Z")]
                    internal static extern void OperatorPlus(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr vector);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??GVector2d@math@swg@@QBE?AU012@ABU012@@Z")]
                    internal static extern void OperatorMinus(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr vector);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??DVector2d@math@swg@@QBE?AU012@M@Z")]
                    internal static extern void OperatorStar(global::System.IntPtr __instance, global::System.IntPtr @return, float scalar);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??KVector2d@math@swg@@QBE?AU012@M@Z")]
                    internal static extern void OperatorSlash(global::System.IntPtr __instance, global::System.IntPtr @return, float scalar);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Vector2d> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Vector2d>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Swg.Math.Vector2d __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Vector2d(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Swg.Math.Vector2d __CreateInstance(global::UtinniCore.Swg.Math.Vector2d.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Vector2d(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Swg.Math.Vector2d.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Vector2d.__Internal));
                    *(global::UtinniCore.Swg.Math.Vector2d.__Internal*) ret = native;
                    return ret.ToPointer();
                }

                private Vector2d(global::UtinniCore.Swg.Math.Vector2d.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected Vector2d(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public Vector2d()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Vector2d.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance);
                }

                public Vector2d(float x, float y)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Vector2d.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance, x, y);
                }

                public Vector2d(global::UtinniCore.Swg.Math.Vector2d _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Vector2d.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    *((global::UtinniCore.Swg.Math.Vector2d.__Internal*) __Instance) = *((global::UtinniCore.Swg.Math.Vector2d.__Internal*) _0.__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Swg.Math.Vector2d __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public static global::UtinniCore.Swg.Math.Vector2d operator +(global::UtinniCore.Swg.Math.Vector2d __op, global::UtinniCore.Swg.Math.Vector2d vector)
                {
                    if (ReferenceEquals(__op, null))
                        throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = __op.__Instance;
                    if (ReferenceEquals(vector, null))
                        throw new global::System.ArgumentNullException("vector", "Cannot be null because it is a C++ reference (&).");
                    var __arg1 = vector.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Vector2d.__Internal();
                    __Internal.OperatorPlus(__arg0, new IntPtr(&__ret), __arg1);
                    return global::UtinniCore.Swg.Math.Vector2d.__CreateInstance(__ret);
                }

                public static global::UtinniCore.Swg.Math.Vector2d operator -(global::UtinniCore.Swg.Math.Vector2d __op, global::UtinniCore.Swg.Math.Vector2d vector)
                {
                    if (ReferenceEquals(__op, null))
                        throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = __op.__Instance;
                    if (ReferenceEquals(vector, null))
                        throw new global::System.ArgumentNullException("vector", "Cannot be null because it is a C++ reference (&).");
                    var __arg1 = vector.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Vector2d.__Internal();
                    __Internal.OperatorMinus(__arg0, new IntPtr(&__ret), __arg1);
                    return global::UtinniCore.Swg.Math.Vector2d.__CreateInstance(__ret);
                }

                public static global::UtinniCore.Swg.Math.Vector2d operator *(global::UtinniCore.Swg.Math.Vector2d __op, float scalar)
                {
                    if (ReferenceEquals(__op, null))
                        throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = __op.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Vector2d.__Internal();
                    __Internal.OperatorStar(__arg0, new IntPtr(&__ret), scalar);
                    return global::UtinniCore.Swg.Math.Vector2d.__CreateInstance(__ret);
                }

                public static global::UtinniCore.Swg.Math.Vector2d operator /(global::UtinniCore.Swg.Math.Vector2d __op, float scalar)
                {
                    if (ReferenceEquals(__op, null))
                        throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = __op.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Vector2d.__Internal();
                    __Internal.OperatorSlash(__arg0, new IntPtr(&__ret), scalar);
                    return global::UtinniCore.Swg.Math.Vector2d.__CreateInstance(__ret);
                }

                public float X
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Vector2d.__Internal*) __Instance)->X;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Vector2d.__Internal*)__Instance)->X = value;
                    }
                }

                public float Y
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Vector2d.__Internal*) __Instance)->Y;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Vector2d.__Internal*)__Instance)->Y = value;
                    }
                }
            }

            public unsafe partial class Vector : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 12)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal float X;

                    [FieldOffset(4)]
                    internal float Y;

                    [FieldOffset(8)]
                    internal float Z;

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Vector@math@swg@@QAE@XZ")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Vector@math@swg@@QAE@MMM@Z")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance, float x, float y, float z);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Vector@math@swg@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??HVector@math@swg@@QBE?AU012@ABU012@@Z")]
                    internal static extern void OperatorPlus(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr vector);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??GVector@math@swg@@QBE?AU012@ABU012@@Z")]
                    internal static extern void OperatorMinus(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr vector);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??DVector@math@swg@@QBE?AU012@M@Z")]
                    internal static extern void OperatorStar(global::System.IntPtr __instance, global::System.IntPtr @return, float scalar);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??KVector@math@swg@@QBE?AU012@M@Z")]
                    internal static extern void OperatorSlash(global::System.IntPtr __instance, global::System.IntPtr @return, float scalar);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??8Vector@math@swg@@QBE_NABU012@@Z")]
                    [return: MarshalAs(UnmanagedType.I1)]
                    internal static extern bool OperatorEqualEqual(global::System.IntPtr __instance, global::System.IntPtr vector);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??9Vector@math@swg@@QBE_NABU012@@Z")]
                    [return: MarshalAs(UnmanagedType.I1)]
                    internal static extern bool OperatorExclaimEqual(global::System.IntPtr __instance, global::System.IntPtr vector);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?normalize@Vector@math@swg@@QAE_NXZ")]
                    [return: MarshalAs(UnmanagedType.I1)]
                    internal static extern bool Normalize(global::System.IntPtr __instance);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Vector> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Vector>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Swg.Math.Vector __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Vector(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Swg.Math.Vector __CreateInstance(global::UtinniCore.Swg.Math.Vector.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Vector(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Swg.Math.Vector.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Vector.__Internal));
                    *(global::UtinniCore.Swg.Math.Vector.__Internal*) ret = native;
                    return ret.ToPointer();
                }

                private Vector(global::UtinniCore.Swg.Math.Vector.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected Vector(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public Vector()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Vector.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance);
                }

                public Vector(float x, float y, float z)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Vector.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance, x, y, z);
                }

                public Vector(global::UtinniCore.Swg.Math.Vector _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Vector.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    *((global::UtinniCore.Swg.Math.Vector.__Internal*) __Instance) = *((global::UtinniCore.Swg.Math.Vector.__Internal*) _0.__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Swg.Math.Vector __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public static global::UtinniCore.Swg.Math.Vector operator +(global::UtinniCore.Swg.Math.Vector __op, global::UtinniCore.Swg.Math.Vector vector)
                {
                    if (ReferenceEquals(__op, null))
                        throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = __op.__Instance;
                    if (ReferenceEquals(vector, null))
                        throw new global::System.ArgumentNullException("vector", "Cannot be null because it is a C++ reference (&).");
                    var __arg1 = vector.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Vector.__Internal();
                    __Internal.OperatorPlus(__arg0, new IntPtr(&__ret), __arg1);
                    return global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
                }

                public static global::UtinniCore.Swg.Math.Vector operator -(global::UtinniCore.Swg.Math.Vector __op, global::UtinniCore.Swg.Math.Vector vector)
                {
                    if (ReferenceEquals(__op, null))
                        throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = __op.__Instance;
                    if (ReferenceEquals(vector, null))
                        throw new global::System.ArgumentNullException("vector", "Cannot be null because it is a C++ reference (&).");
                    var __arg1 = vector.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Vector.__Internal();
                    __Internal.OperatorMinus(__arg0, new IntPtr(&__ret), __arg1);
                    return global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
                }

                public static global::UtinniCore.Swg.Math.Vector operator *(global::UtinniCore.Swg.Math.Vector __op, float scalar)
                {
                    if (ReferenceEquals(__op, null))
                        throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = __op.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Vector.__Internal();
                    __Internal.OperatorStar(__arg0, new IntPtr(&__ret), scalar);
                    return global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
                }

                public static global::UtinniCore.Swg.Math.Vector operator /(global::UtinniCore.Swg.Math.Vector __op, float scalar)
                {
                    if (ReferenceEquals(__op, null))
                        throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = __op.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Vector.__Internal();
                    __Internal.OperatorSlash(__arg0, new IntPtr(&__ret), scalar);
                    return global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
                }

                public static bool operator ==(global::UtinniCore.Swg.Math.Vector __op, global::UtinniCore.Swg.Math.Vector vector)
                {
                    bool __opNull = ReferenceEquals(__op, null);
                    bool vectorNull = ReferenceEquals(vector, null);
                    if (__opNull || vectorNull)
                        return __opNull && vectorNull;
                    var __arg0 = __op.__Instance;
                    var __arg1 = vector.__Instance;
                    var __ret = __Internal.OperatorEqualEqual(__arg0, __arg1);
                    return __ret;
                }

                public override bool Equals(object obj)
                {
                    return this == obj as global::UtinniCore.Swg.Math.Vector;
                }

                public override int GetHashCode()
                {
                    if (__Instance == global::System.IntPtr.Zero)
                        return global::System.IntPtr.Zero.GetHashCode();
                    return (*(global::UtinniCore.Swg.Math.Vector.__Internal*) __Instance).GetHashCode();
                }

                public static bool operator !=(global::UtinniCore.Swg.Math.Vector __op, global::UtinniCore.Swg.Math.Vector vector)
                {
                    bool __opNull = ReferenceEquals(__op, null);
                    bool vectorNull = ReferenceEquals(vector, null);
                    if (__opNull || vectorNull)
                        return !(__opNull && vectorNull);
                    var __arg0 = __op.__Instance;
                    var __arg1 = vector.__Instance;
                    var __ret = __Internal.OperatorExclaimEqual(__arg0, __arg1);
                    return __ret;
                }

                public bool Normalize()
                {
                    var __ret = __Internal.Normalize(__Instance);
                    return __ret;
                }

                public float X
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Vector.__Internal*) __Instance)->X;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Vector.__Internal*)__Instance)->X = value;
                    }
                }

                public float Y
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Vector.__Internal*) __Instance)->Y;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Vector.__Internal*)__Instance)->Y = value;
                    }
                }

                public float Z
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Vector.__Internal*) __Instance)->Z;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Vector.__Internal*)__Instance)->Z = value;
                    }
                }
            }

            public unsafe partial class Transform : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 48)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal fixed float matrix[12];

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Transform@math@swg@@QAE@XZ")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Transform@math@swg@@QAE@MMM@Z")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance, float x, float y, float z);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Transform@math@swg@@QAE@AAUVector@12@@Z")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance, global::System.IntPtr position);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Transform@math@swg@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor_1(global::System.IntPtr __instance, global::System.IntPtr _0);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?setPosition@Transform@math@swg@@QAEXMMM@Z")]
                    internal static extern void SetPosition(global::System.IntPtr __instance, float x, float y, float z);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?addPosition@Transform@math@swg@@QAE?AU123@ABU123@@Z")]
                    internal static extern void AddPosition(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr transform);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?addPosition@Transform@math@swg@@QAE?AU123@ABUVector@23@@Z")]
                    internal static extern void AddPosition_1(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr vector);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?subtractPosition@Transform@math@swg@@QAE?AU123@ABU123@@Z")]
                    internal static extern void SubtractPosition(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr transform);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?subtractPosition@Transform@math@swg@@QAE?AU123@ABUVector@23@@Z")]
                    internal static extern void SubtractPosition_1(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr vector);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?multiply@Transform@math@swg@@QAEXABU123@@Z")]
                    internal static extern void Multiply(global::System.IntPtr __instance, global::System.IntPtr transform);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?multiply@Transform@math@swg@@QAEXABU123@0@Z")]
                    internal static extern void Multiply(global::System.IntPtr __instance, global::System.IntPtr left, global::System.IntPtr right);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?invert@Transform@math@swg@@QAEXABU123@@Z")]
                    internal static extern void Invert(global::System.IntPtr __instance, global::System.IntPtr transform);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?yaw@Transform@math@swg@@QAEXM@Z")]
                    internal static extern void Yaw(global::System.IntPtr __instance, float degrees);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?pitch@Transform@math@swg@@QAEXM@Z")]
                    internal static extern void Pitch(global::System.IntPtr __instance, float degrees);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?roll@Transform@math@swg@@QAEXM@Z")]
                    internal static extern void Roll(global::System.IntPtr __instance, float degrees);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?setRotationAxis@Transform@math@swg@@QAEXMMM@Z")]
                    internal static extern void SetRotationAxis(global::System.IntPtr __instance, float x, float y, float z);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?setRotationAxis@Transform@math@swg@@QAEXABUVector@23@@Z")]
                    internal static extern void SetRotationAxis(global::System.IntPtr __instance, global::System.IntPtr vector);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?rotate_o2w@Transform@math@swg@@QAE?AUVector@23@ABU423@@Z")]
                    internal static extern void RotateO2w(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr vector);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?rotate_p2w@Transform@math@swg@@QAE?AUVector@23@ABU423@@Z")]
                    internal static extern void RotateP2w(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr vector);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?rotate_l2p@Transform@math@swg@@QAE?AUVector@23@ABU423@@Z")]
                    internal static extern void RotateL2p(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr vector);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?rotateTranslate_l2p@Transform@math@swg@@QAE?AUVector@23@ABU423@@Z")]
                    internal static extern void RotateTranslateL2p(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr vector);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?copyRotation@Transform@math@swg@@QAEXABU123@@Z")]
                    internal static extern void CopyRotation(global::System.IntPtr __instance, global::System.IntPtr transform);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?isRotationEqual@Transform@math@swg@@QAE_NABU123@@Z")]
                    [return: MarshalAs(UnmanagedType.I1)]
                    internal static extern bool IsRotationEqual(global::System.IntPtr __instance, global::System.IntPtr transform);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?getPosition@Transform@math@swg@@QAE?AUVector@23@XZ")]
                    internal static extern void GetPosition(global::System.IntPtr __instance, global::System.IntPtr @return);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?setPosition@Transform@math@swg@@QAEXABUVector@23@@Z")]
                    internal static extern void SetPosition(global::System.IntPtr __instance, global::System.IntPtr vector);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?getYaw_p2l@Transform@math@swg@@QAEMXZ")]
                    internal static extern float GetYawP2l(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?getPitch_p2l@Transform@math@swg@@QAEMXZ")]
                    internal static extern float GetPitchP2l(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?getIdentity@Transform@math@swg@@SA?AU123@XZ")]
                    internal static extern void GetIdentity(global::System.IntPtr @return);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Transform> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Transform>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Swg.Math.Transform __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Transform(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Swg.Math.Transform __CreateInstance(global::UtinniCore.Swg.Math.Transform.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Transform(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Swg.Math.Transform.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Transform.__Internal));
                    *(global::UtinniCore.Swg.Math.Transform.__Internal*) ret = native;
                    return ret.ToPointer();
                }

                private Transform(global::UtinniCore.Swg.Math.Transform.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected Transform(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public Transform()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Transform.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance);
                }

                public Transform(float x, float y, float z)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Transform.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance, x, y, z);
                }

                public Transform(global::UtinniCore.Swg.Math.Vector position)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Transform.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    if (ReferenceEquals(position, null))
                        throw new global::System.ArgumentNullException("position", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = position.__Instance;
                    __Internal.ctor(__Instance, __arg0);
                }

                public Transform(global::UtinniCore.Swg.Math.Transform _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Transform.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    *((global::UtinniCore.Swg.Math.Transform.__Internal*) __Instance) = *((global::UtinniCore.Swg.Math.Transform.__Internal*) _0.__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Swg.Math.Transform __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public void SetPosition(float x, float y, float z)
                {
                    __Internal.SetPosition(__Instance, x, y, z);
                }

                public global::UtinniCore.Swg.Math.Transform AddPosition(global::UtinniCore.Swg.Math.Transform transform)
                {
                    if (ReferenceEquals(transform, null))
                        throw new global::System.ArgumentNullException("transform", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = transform.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Transform.__Internal();
                    __Internal.AddPosition(__Instance, new IntPtr(&__ret), __arg0);
                    return global::UtinniCore.Swg.Math.Transform.__CreateInstance(__ret);
                }

                public global::UtinniCore.Swg.Math.Transform AddPosition(global::UtinniCore.Swg.Math.Vector vector)
                {
                    if (ReferenceEquals(vector, null))
                        throw new global::System.ArgumentNullException("vector", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = vector.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Transform.__Internal();
                    __Internal.AddPosition_1(__Instance, new IntPtr(&__ret), __arg0);
                    return global::UtinniCore.Swg.Math.Transform.__CreateInstance(__ret);
                }

                public global::UtinniCore.Swg.Math.Transform SubtractPosition(global::UtinniCore.Swg.Math.Transform transform)
                {
                    if (ReferenceEquals(transform, null))
                        throw new global::System.ArgumentNullException("transform", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = transform.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Transform.__Internal();
                    __Internal.SubtractPosition(__Instance, new IntPtr(&__ret), __arg0);
                    return global::UtinniCore.Swg.Math.Transform.__CreateInstance(__ret);
                }

                public global::UtinniCore.Swg.Math.Transform SubtractPosition(global::UtinniCore.Swg.Math.Vector vector)
                {
                    if (ReferenceEquals(vector, null))
                        throw new global::System.ArgumentNullException("vector", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = vector.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Transform.__Internal();
                    __Internal.SubtractPosition_1(__Instance, new IntPtr(&__ret), __arg0);
                    return global::UtinniCore.Swg.Math.Transform.__CreateInstance(__ret);
                }

                public void Multiply(global::UtinniCore.Swg.Math.Transform transform)
                {
                    if (ReferenceEquals(transform, null))
                        throw new global::System.ArgumentNullException("transform", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = transform.__Instance;
                    __Internal.Multiply(__Instance, __arg0);
                }

                public void Multiply(global::UtinniCore.Swg.Math.Transform left, global::UtinniCore.Swg.Math.Transform right)
                {
                    if (ReferenceEquals(left, null))
                        throw new global::System.ArgumentNullException("left", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = left.__Instance;
                    if (ReferenceEquals(right, null))
                        throw new global::System.ArgumentNullException("right", "Cannot be null because it is a C++ reference (&).");
                    var __arg1 = right.__Instance;
                    __Internal.Multiply(__Instance, __arg0, __arg1);
                }

                public void Invert(global::UtinniCore.Swg.Math.Transform transform)
                {
                    if (ReferenceEquals(transform, null))
                        throw new global::System.ArgumentNullException("transform", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = transform.__Instance;
                    __Internal.Invert(__Instance, __arg0);
                }

                public void Yaw(float degrees)
                {
                    __Internal.Yaw(__Instance, degrees);
                }

                public void Pitch(float degrees)
                {
                    __Internal.Pitch(__Instance, degrees);
                }

                public void Roll(float degrees)
                {
                    __Internal.Roll(__Instance, degrees);
                }

                public void SetRotationAxis(float x, float y, float z)
                {
                    __Internal.SetRotationAxis(__Instance, x, y, z);
                }

                public void SetRotationAxis(global::UtinniCore.Swg.Math.Vector vector)
                {
                    if (ReferenceEquals(vector, null))
                        throw new global::System.ArgumentNullException("vector", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = vector.__Instance;
                    __Internal.SetRotationAxis(__Instance, __arg0);
                }

                public global::UtinniCore.Swg.Math.Vector RotateO2w(global::UtinniCore.Swg.Math.Vector vector)
                {
                    if (ReferenceEquals(vector, null))
                        throw new global::System.ArgumentNullException("vector", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = vector.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Vector.__Internal();
                    __Internal.RotateO2w(__Instance, new IntPtr(&__ret), __arg0);
                    return global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
                }

                public global::UtinniCore.Swg.Math.Vector RotateP2w(global::UtinniCore.Swg.Math.Vector vector)
                {
                    if (ReferenceEquals(vector, null))
                        throw new global::System.ArgumentNullException("vector", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = vector.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Vector.__Internal();
                    __Internal.RotateP2w(__Instance, new IntPtr(&__ret), __arg0);
                    return global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
                }

                public global::UtinniCore.Swg.Math.Vector RotateL2p(global::UtinniCore.Swg.Math.Vector vector)
                {
                    if (ReferenceEquals(vector, null))
                        throw new global::System.ArgumentNullException("vector", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = vector.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Vector.__Internal();
                    __Internal.RotateL2p(__Instance, new IntPtr(&__ret), __arg0);
                    return global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
                }

                public global::UtinniCore.Swg.Math.Vector RotateTranslateL2p(global::UtinniCore.Swg.Math.Vector vector)
                {
                    if (ReferenceEquals(vector, null))
                        throw new global::System.ArgumentNullException("vector", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = vector.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Vector.__Internal();
                    __Internal.RotateTranslateL2p(__Instance, new IntPtr(&__ret), __arg0);
                    return global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
                }

                public void CopyRotation(global::UtinniCore.Swg.Math.Transform transform)
                {
                    if (ReferenceEquals(transform, null))
                        throw new global::System.ArgumentNullException("transform", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = transform.__Instance;
                    __Internal.CopyRotation(__Instance, __arg0);
                }

                public bool IsRotationEqual(global::UtinniCore.Swg.Math.Transform transform)
                {
                    if (ReferenceEquals(transform, null))
                        throw new global::System.ArgumentNullException("transform", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = transform.__Instance;
                    var __ret = __Internal.IsRotationEqual(__Instance, __arg0);
                    return __ret;
                }

                public static implicit operator global::UtinniCore.Swg.Math.Transform(global::UtinniCore.Swg.Math.Vector position)
                {
                    return new global::UtinniCore.Swg.Math.Transform(position);
                }

                public global::UtinniCore.Swg.Math.Vector Position
                {
                    get
                    {
                        var __ret = new global::UtinniCore.Swg.Math.Vector.__Internal();
                        __Internal.GetPosition(__Instance, new IntPtr(&__ret));
                        return global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
                    }

                    set
                    {
                        if (ReferenceEquals(value, null))
                            throw new global::System.ArgumentNullException("value", "Cannot be null because it is a C++ reference (&).");
                        var __arg0 = value.__Instance;
                        __Internal.SetPosition(__Instance, __arg0);
                    }
                }

                public float YawP2l
                {
                    get
                    {
                        var __ret = __Internal.GetYawP2l(__Instance);
                        return __ret;
                    }
                }

                public float PitchP2l
                {
                    get
                    {
                        var __ret = __Internal.GetPitchP2l(__Instance);
                        return __ret;
                    }
                }

                public static global::UtinniCore.Swg.Math.Transform Identity
                {
                    get
                    {
                        var __ret = new global::UtinniCore.Swg.Math.Transform.__Internal();
                        __Internal.GetIdentity(new IntPtr(&__ret));
                        return global::UtinniCore.Swg.Math.Transform.__CreateInstance(__ret);
                    }
                }
            }

            public unsafe partial class Matrix4x4 : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 64)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal fixed float matrix[16];

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Matrix4x4@math@swg@@QAE@XZ")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Matrix4x4@math@swg@@QAE@ABUTransform@12@@Z")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance, global::System.IntPtr Transform);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Matrix4x4@math@swg@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor_1(global::System.IntPtr __instance, global::System.IntPtr matrix4x4);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?addPosition@Matrix4x4@math@swg@@QAE?AU123@ABU123@@Z")]
                    internal static extern void AddPosition(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr matrix4x4);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?subtractPosition@Matrix4x4@math@swg@@QAE?AU123@ABU123@@Z")]
                    internal static extern void SubtractPosition(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr matrix4x4);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?transpose@Matrix4x4@math@swg@@SAXPBMPAM@Z")]
                    internal static extern void Transpose(float* source, float* destination);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??HMatrix4x4@math@swg@@QBE?AU012@ABU012@@Z")]
                    internal static extern void OperatorPlus(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr matrix);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??GMatrix4x4@math@swg@@QBE?AU012@ABU012@@Z")]
                    internal static extern void OperatorMinus(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr matrix);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Matrix4x4> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Matrix4x4>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Swg.Math.Matrix4x4 __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Matrix4x4(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Swg.Math.Matrix4x4 __CreateInstance(global::UtinniCore.Swg.Math.Matrix4x4.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Matrix4x4(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Swg.Math.Matrix4x4.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Matrix4x4.__Internal));
                    global::UtinniCore.Swg.Math.Matrix4x4.__Internal.cctor_1(ret, new global::System.IntPtr(&native));
                    return ret.ToPointer();
                }

                private Matrix4x4(global::UtinniCore.Swg.Math.Matrix4x4.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected Matrix4x4(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public Matrix4x4()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Matrix4x4.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance);
                }

                public Matrix4x4(global::UtinniCore.Swg.Math.Transform Transform)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Matrix4x4.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    if (ReferenceEquals(Transform, null))
                        throw new global::System.ArgumentNullException("Transform", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = Transform.__Instance;
                    __Internal.ctor(__Instance, __arg0);
                }

                public Matrix4x4(global::UtinniCore.Swg.Math.Matrix4x4 matrix4x4)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Matrix4x4.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    if (ReferenceEquals(matrix4x4, null))
                        throw new global::System.ArgumentNullException("matrix4x4", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = matrix4x4.__Instance;
                    __Internal.cctor_1(__Instance, __arg0);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Swg.Math.Matrix4x4 __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public global::UtinniCore.Swg.Math.Matrix4x4 AddPosition(global::UtinniCore.Swg.Math.Matrix4x4 matrix4x4)
                {
                    if (ReferenceEquals(matrix4x4, null))
                        throw new global::System.ArgumentNullException("matrix4x4", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = matrix4x4.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Matrix4x4.__Internal();
                    __Internal.AddPosition(__Instance, new IntPtr(&__ret), __arg0);
                    return global::UtinniCore.Swg.Math.Matrix4x4.__CreateInstance(__ret);
                }

                public global::UtinniCore.Swg.Math.Matrix4x4 SubtractPosition(global::UtinniCore.Swg.Math.Matrix4x4 matrix4x4)
                {
                    if (ReferenceEquals(matrix4x4, null))
                        throw new global::System.ArgumentNullException("matrix4x4", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = matrix4x4.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Matrix4x4.__Internal();
                    __Internal.SubtractPosition(__Instance, new IntPtr(&__ret), __arg0);
                    return global::UtinniCore.Swg.Math.Matrix4x4.__CreateInstance(__ret);
                }

                public static global::UtinniCore.Swg.Math.Matrix4x4 operator +(global::UtinniCore.Swg.Math.Matrix4x4 __op, global::UtinniCore.Swg.Math.Matrix4x4 matrix)
                {
                    if (ReferenceEquals(__op, null))
                        throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = __op.__Instance;
                    if (ReferenceEquals(matrix, null))
                        throw new global::System.ArgumentNullException("matrix", "Cannot be null because it is a C++ reference (&).");
                    var __arg1 = matrix.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Matrix4x4.__Internal();
                    __Internal.OperatorPlus(__arg0, new IntPtr(&__ret), __arg1);
                    return global::UtinniCore.Swg.Math.Matrix4x4.__CreateInstance(__ret);
                }

                public static global::UtinniCore.Swg.Math.Matrix4x4 operator -(global::UtinniCore.Swg.Math.Matrix4x4 __op, global::UtinniCore.Swg.Math.Matrix4x4 matrix)
                {
                    if (ReferenceEquals(__op, null))
                        throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = __op.__Instance;
                    if (ReferenceEquals(matrix, null))
                        throw new global::System.ArgumentNullException("matrix", "Cannot be null because it is a C++ reference (&).");
                    var __arg1 = matrix.__Instance;
                    var __ret = new global::UtinniCore.Swg.Math.Matrix4x4.__Internal();
                    __Internal.OperatorMinus(__arg0, new IntPtr(&__ret), __arg1);
                    return global::UtinniCore.Swg.Math.Matrix4x4.__CreateInstance(__ret);
                }

                public static implicit operator global::UtinniCore.Swg.Math.Matrix4x4(global::UtinniCore.Swg.Math.Transform Transform)
                {
                    return new global::UtinniCore.Swg.Math.Matrix4x4(Transform);
                }

                public static void Transpose(ref float source, ref float destination)
                {
                    fixed (float* __source0 = &source)
                    {
                        var __arg0 = __source0;
                        fixed (float* __destination1 = &destination)
                        {
                            var __arg1 = __destination1;
                            __Internal.Transpose(__arg0, __arg1);
                        }
                    }
                }
            }

            public unsafe partial class Plane : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 16)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal global::UtinniCore.Swg.Math.Vector.__Internal normal;

                    [FieldOffset(12)]
                    internal float d;

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Plane@math@swg@@QAE@XZ")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Plane@math@swg@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Plane> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Plane>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Swg.Math.Plane __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Plane(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Swg.Math.Plane __CreateInstance(global::UtinniCore.Swg.Math.Plane.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Plane(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Swg.Math.Plane.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Plane.__Internal));
                    *(global::UtinniCore.Swg.Math.Plane.__Internal*) ret = native;
                    return ret.ToPointer();
                }

                private Plane(global::UtinniCore.Swg.Math.Plane.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected Plane(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public Plane()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Plane.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance);
                }

                public Plane(global::UtinniCore.Swg.Math.Plane _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Plane.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    *((global::UtinniCore.Swg.Math.Plane.__Internal*) __Instance) = *((global::UtinniCore.Swg.Math.Plane.__Internal*) _0.__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Swg.Math.Plane __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public global::UtinniCore.Swg.Math.Vector Normal
                {
                    get
                    {
                        return global::UtinniCore.Swg.Math.Vector.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Swg.Math.Plane.__Internal*) __Instance)->normal));
                    }

                    set
                    {
                        if (ReferenceEquals(value, null))
                            throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                        ((global::UtinniCore.Swg.Math.Plane.__Internal*)__Instance)->normal = *(global::UtinniCore.Swg.Math.Vector.__Internal*) value.__Instance;
                    }
                }

                public float D
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Plane.__Internal*) __Instance)->d;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Plane.__Internal*)__Instance)->d = value;
                    }
                }
            }

            public unsafe partial class Volume : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 8)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal int numberOfPlanes;

                    [FieldOffset(4)]
                    internal global::System.IntPtr plane;

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Volume@math@swg@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Volume> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Volume>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Swg.Math.Volume __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Volume(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Swg.Math.Volume __CreateInstance(global::UtinniCore.Swg.Math.Volume.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Volume(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Swg.Math.Volume.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Volume.__Internal));
                    *(global::UtinniCore.Swg.Math.Volume.__Internal*) ret = native;
                    return ret.ToPointer();
                }

                private Volume(global::UtinniCore.Swg.Math.Volume.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected Volume(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public Volume()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Volume.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                public Volume(global::UtinniCore.Swg.Math.Volume _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Volume.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    *((global::UtinniCore.Swg.Math.Volume.__Internal*) __Instance) = *((global::UtinniCore.Swg.Math.Volume.__Internal*) _0.__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Swg.Math.Volume __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public int NumberOfPlanes
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Volume.__Internal*) __Instance)->numberOfPlanes;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Volume.__Internal*)__Instance)->numberOfPlanes = value;
                    }
                }

                public global::UtinniCore.Swg.Math.Plane Plane
                {
                    get
                    {
                        global::UtinniCore.Swg.Math.Plane __result0;
                        if (((global::UtinniCore.Swg.Math.Volume.__Internal*) __Instance)->plane == IntPtr.Zero) __result0 = null;
                        else if (global::UtinniCore.Swg.Math.Plane.NativeToManagedMap.ContainsKey(((global::UtinniCore.Swg.Math.Volume.__Internal*) __Instance)->plane))
                            __result0 = (global::UtinniCore.Swg.Math.Plane) global::UtinniCore.Swg.Math.Plane.NativeToManagedMap[((global::UtinniCore.Swg.Math.Volume.__Internal*) __Instance)->plane];
                        else __result0 = global::UtinniCore.Swg.Math.Plane.__CreateInstance(((global::UtinniCore.Swg.Math.Volume.__Internal*) __Instance)->plane);
                        return __result0;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Volume.__Internal*)__Instance)->plane = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                    }
                }
            }

            public unsafe partial class Quaternion : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 16)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal float W;

                    [FieldOffset(4)]
                    internal float X;

                    [FieldOffset(8)]
                    internal float Y;

                    [FieldOffset(12)]
                    internal float Z;

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Quaternion@math@swg@@QAE@XZ")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Quaternion@math@swg@@QAE@ABUTransform@12@@Z")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance, global::System.IntPtr Transform);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Quaternion@math@swg@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor_1(global::System.IntPtr __instance, global::System.IntPtr _0);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Quaternion> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Quaternion>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Swg.Math.Quaternion __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Quaternion(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Swg.Math.Quaternion __CreateInstance(global::UtinniCore.Swg.Math.Quaternion.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Quaternion(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Swg.Math.Quaternion.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Quaternion.__Internal));
                    *(global::UtinniCore.Swg.Math.Quaternion.__Internal*) ret = native;
                    return ret.ToPointer();
                }

                private Quaternion(global::UtinniCore.Swg.Math.Quaternion.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected Quaternion(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public Quaternion()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Quaternion.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance);
                }

                public Quaternion(global::UtinniCore.Swg.Math.Transform Transform)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Quaternion.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    if (ReferenceEquals(Transform, null))
                        throw new global::System.ArgumentNullException("Transform", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = Transform.__Instance;
                    __Internal.ctor(__Instance, __arg0);
                }

                public Quaternion(global::UtinniCore.Swg.Math.Quaternion _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Quaternion.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    *((global::UtinniCore.Swg.Math.Quaternion.__Internal*) __Instance) = *((global::UtinniCore.Swg.Math.Quaternion.__Internal*) _0.__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Swg.Math.Quaternion __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public static implicit operator global::UtinniCore.Swg.Math.Quaternion(global::UtinniCore.Swg.Math.Transform Transform)
                {
                    return new global::UtinniCore.Swg.Math.Quaternion(Transform);
                }

                public float W
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Quaternion.__Internal*) __Instance)->W;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Quaternion.__Internal*)__Instance)->W = value;
                    }
                }

                public float X
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Quaternion.__Internal*) __Instance)->X;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Quaternion.__Internal*)__Instance)->X = value;
                    }
                }

                public float Y
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Quaternion.__Internal*) __Instance)->Y;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Quaternion.__Internal*)__Instance)->Y = value;
                    }
                }

                public float Z
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Quaternion.__Internal*) __Instance)->Z;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Quaternion.__Internal*)__Instance)->Z = value;
                    }
                }
            }

            public unsafe partial class Point : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 8)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal float X;

                    [FieldOffset(4)]
                    internal float Y;

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Point@math@swg@@QAE@XZ")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Point@math@swg@@QAE@MM@Z")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance, float x, float y);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Point@math@swg@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Point> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Point>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Swg.Math.Point __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Point(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Swg.Math.Point __CreateInstance(global::UtinniCore.Swg.Math.Point.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Point(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Swg.Math.Point.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Point.__Internal));
                    *(global::UtinniCore.Swg.Math.Point.__Internal*) ret = native;
                    return ret.ToPointer();
                }

                private Point(global::UtinniCore.Swg.Math.Point.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected Point(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public Point()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Point.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance);
                }

                public Point(float x, float y)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Point.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance, x, y);
                }

                public Point(global::UtinniCore.Swg.Math.Point _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Point.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    *((global::UtinniCore.Swg.Math.Point.__Internal*) __Instance) = *((global::UtinniCore.Swg.Math.Point.__Internal*) _0.__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Swg.Math.Point __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public float X
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Point.__Internal*) __Instance)->X;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Point.__Internal*)__Instance)->X = value;
                    }
                }

                public float Y
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Point.__Internal*) __Instance)->Y;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Point.__Internal*)__Instance)->Y = value;
                    }
                }
            }

            public unsafe partial class UiPoint : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 8)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal int X;

                    [FieldOffset(4)]
                    internal int Y;

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0UiPoint@math@swg@@QAE@XZ")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0UiPoint@math@swg@@QAE@HH@Z")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance, int x, int y);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0UiPoint@math@swg@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.UiPoint> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.UiPoint>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Swg.Math.UiPoint __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.UiPoint(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Swg.Math.UiPoint __CreateInstance(global::UtinniCore.Swg.Math.UiPoint.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.UiPoint(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Swg.Math.UiPoint.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.UiPoint.__Internal));
                    *(global::UtinniCore.Swg.Math.UiPoint.__Internal*) ret = native;
                    return ret.ToPointer();
                }

                private UiPoint(global::UtinniCore.Swg.Math.UiPoint.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected UiPoint(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public UiPoint()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.UiPoint.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance);
                }

                public UiPoint(int x, int y)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.UiPoint.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance, x, y);
                }

                public UiPoint(global::UtinniCore.Swg.Math.UiPoint _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.UiPoint.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    *((global::UtinniCore.Swg.Math.UiPoint.__Internal*) __Instance) = *((global::UtinniCore.Swg.Math.UiPoint.__Internal*) _0.__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Swg.Math.UiPoint __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public int X
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.UiPoint.__Internal*) __Instance)->X;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.UiPoint.__Internal*)__Instance)->X = value;
                    }
                }

                public int Y
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.UiPoint.__Internal*) __Instance)->Y;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.UiPoint.__Internal*)__Instance)->Y = value;
                    }
                }
            }

            public unsafe partial class Rect2d : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 16)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal float X0;

                    [FieldOffset(4)]
                    internal float Y0;

                    [FieldOffset(8)]
                    internal float X1;

                    [FieldOffset(12)]
                    internal float Y1;

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Rect2d@math@swg@@QAE@XZ")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Rect2d@math@swg@@QAE@MMMM@Z")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance, float x0, float y0, float x1, float y1);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Rect2d@math@swg@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?getWidth@Rect2d@math@swg@@QBEMXZ")]
                    internal static extern float GetWidth(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?getHeight@Rect2d@math@swg@@QBEMXZ")]
                    internal static extern float GetHeight(global::System.IntPtr __instance);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Rect2d> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.Rect2d>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Swg.Math.Rect2d __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Rect2d(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Swg.Math.Rect2d __CreateInstance(global::UtinniCore.Swg.Math.Rect2d.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.Rect2d(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Swg.Math.Rect2d.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Rect2d.__Internal));
                    *(global::UtinniCore.Swg.Math.Rect2d.__Internal*) ret = native;
                    return ret.ToPointer();
                }

                private Rect2d(global::UtinniCore.Swg.Math.Rect2d.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected Rect2d(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public Rect2d()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Rect2d.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance);
                }

                public Rect2d(float x0, float y0, float x1, float y1)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Rect2d.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance, x0, y0, x1, y1);
                }

                public Rect2d(global::UtinniCore.Swg.Math.Rect2d _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.Rect2d.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    *((global::UtinniCore.Swg.Math.Rect2d.__Internal*) __Instance) = *((global::UtinniCore.Swg.Math.Rect2d.__Internal*) _0.__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Swg.Math.Rect2d __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public float X0
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Rect2d.__Internal*) __Instance)->X0;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Rect2d.__Internal*)__Instance)->X0 = value;
                    }
                }

                public float Y0
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Rect2d.__Internal*) __Instance)->Y0;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Rect2d.__Internal*)__Instance)->Y0 = value;
                    }
                }

                public float X1
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Rect2d.__Internal*) __Instance)->X1;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Rect2d.__Internal*)__Instance)->X1 = value;
                    }
                }

                public float Y1
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.Rect2d.__Internal*) __Instance)->Y1;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.Rect2d.__Internal*)__Instance)->Y1 = value;
                    }
                }

                public float Width
                {
                    get
                    {
                        var __ret = __Internal.GetWidth(__Instance);
                        return __ret;
                    }
                }

                public float Height
                {
                    get
                    {
                        var __ret = __Internal.GetHeight(__Instance);
                        return __ret;
                    }
                }
            }

            public unsafe partial class UiRect : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 16)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal int Left;

                    [FieldOffset(4)]
                    internal int Top;

                    [FieldOffset(8)]
                    internal int Right;

                    [FieldOffset(12)]
                    internal int Bottom;

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0UiRect@math@swg@@QAE@XZ")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0UiRect@math@swg@@QAE@HHHH@Z")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance, int left, int top, int right, int bottom);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0UiRect@math@swg@@QAE@ABU012@@Z")]
                    internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?getWidth@UiRect@math@swg@@QBEHXZ")]
                    internal static extern int GetWidth(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?getHeight@UiRect@math@swg@@QBEHXZ")]
                    internal static extern int GetHeight(global::System.IntPtr __instance);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.UiRect> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Swg.Math.UiRect>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Swg.Math.UiRect __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.UiRect(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Swg.Math.UiRect __CreateInstance(global::UtinniCore.Swg.Math.UiRect.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Swg.Math.UiRect(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Swg.Math.UiRect.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.UiRect.__Internal));
                    *(global::UtinniCore.Swg.Math.UiRect.__Internal*) ret = native;
                    return ret.ToPointer();
                }

                private UiRect(global::UtinniCore.Swg.Math.UiRect.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected UiRect(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public UiRect()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.UiRect.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance);
                }

                public UiRect(int left, int top, int right, int bottom)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.UiRect.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance, left, top, right, bottom);
                }

                public UiRect(global::UtinniCore.Swg.Math.UiRect _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Swg.Math.UiRect.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    *((global::UtinniCore.Swg.Math.UiRect.__Internal*) __Instance) = *((global::UtinniCore.Swg.Math.UiRect.__Internal*) _0.__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Swg.Math.UiRect __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public int Left
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.UiRect.__Internal*) __Instance)->Left;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.UiRect.__Internal*)__Instance)->Left = value;
                    }
                }

                public int Top
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.UiRect.__Internal*) __Instance)->Top;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.UiRect.__Internal*)__Instance)->Top = value;
                    }
                }

                public int Right
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.UiRect.__Internal*) __Instance)->Right;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.UiRect.__Internal*)__Instance)->Right = value;
                    }
                }

                public int Bottom
                {
                    get
                    {
                        return ((global::UtinniCore.Swg.Math.UiRect.__Internal*) __Instance)->Bottom;
                    }

                    set
                    {
                        ((global::UtinniCore.Swg.Math.UiRect.__Internal*)__Instance)->Bottom = value;
                    }
                }

                public int Width
                {
                    get
                    {
                        var __ret = __Internal.GetWidth(__Instance);
                        return __ret;
                    }
                }

                public int Height
                {
                    get
                    {
                        var __ret = __Internal.GetHeight(__Instance);
                        return __ret;
                    }
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class ExtentBase : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 4)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal int type;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0ExtentBase@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?intersect@ExtentBase@utinni@@QAE_NPAUVector@math@swg@@00PAM@Z")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool Intersect(global::System.IntPtr __instance, global::System.IntPtr worldStart, global::System.IntPtr worldEnd, global::System.IntPtr normal, float* time);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.ExtentBase> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.ExtentBase>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.ExtentBase __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.ExtentBase(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.ExtentBase __CreateInstance(global::UtinniCore.Utinni.ExtentBase.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.ExtentBase(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.ExtentBase.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ExtentBase.__Internal));
                *(global::UtinniCore.Utinni.ExtentBase.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private ExtentBase(global::UtinniCore.Utinni.ExtentBase.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected ExtentBase(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public ExtentBase()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ExtentBase.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public ExtentBase(global::UtinniCore.Utinni.ExtentBase _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ExtentBase.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.ExtentBase.__Internal*) __Instance) = *((global::UtinniCore.Utinni.ExtentBase.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.ExtentBase __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public bool Intersect(global::UtinniCore.Swg.Math.Vector worldStart, global::UtinniCore.Swg.Math.Vector worldEnd, global::UtinniCore.Swg.Math.Vector normal, ref float time)
            {
                var __arg0 = ReferenceEquals(worldStart, null) ? global::System.IntPtr.Zero : worldStart.__Instance;
                var __arg1 = ReferenceEquals(worldEnd, null) ? global::System.IntPtr.Zero : worldEnd.__Instance;
                var __arg2 = ReferenceEquals(normal, null) ? global::System.IntPtr.Zero : normal.__Instance;
                fixed (float* __time3 = &time)
                {
                    var __arg3 = __time3;
                    var __ret = __Internal.Intersect(__Instance, __arg0, __arg1, __arg2, __arg3);
                    return __ret;
                }
            }
        }

        public unsafe partial class Extent : global::UtinniCore.Utinni.ExtentBase, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 12)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal int type;

                [FieldOffset(4)]
                internal uint sphere;

                [FieldOffset(8)]
                internal int refCount;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Extent@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            internal static new global::UtinniCore.Utinni.Extent __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Extent(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.Extent __CreateInstance(global::UtinniCore.Utinni.Extent.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Extent(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.Extent.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Extent.__Internal));
                *(global::UtinniCore.Utinni.Extent.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private Extent(global::UtinniCore.Utinni.Extent.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected Extent(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public Extent()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Extent.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public Extent(global::UtinniCore.Utinni.Extent _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Extent.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.Extent.__Internal*) __Instance) = *((global::UtinniCore.Utinni.Extent.__Internal*) _0.__Instance);
            }
        }

        public unsafe partial class BoxExtent : global::UtinniCore.Utinni.Extent, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 36)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal int type;

                [FieldOffset(4)]
                internal uint sphere;

                [FieldOffset(8)]
                internal int refCount;

                [FieldOffset(12)]
                internal global::UtinniCore.Swg.Math.Vector.__Internal min;

                [FieldOffset(24)]
                internal global::UtinniCore.Swg.Math.Vector.__Internal max;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0BoxExtent@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0BoxExtent@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?realIntersect@BoxExtent@utinni@@QAE_NPAUVector@math@swg@@00PAM@Z")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool RealIntersect(global::System.IntPtr __instance, global::System.IntPtr worldStart, global::System.IntPtr worldEnd, global::System.IntPtr surfaceNormal, float* time);
            }

            internal static new global::UtinniCore.Utinni.BoxExtent __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.BoxExtent(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.BoxExtent __CreateInstance(global::UtinniCore.Utinni.BoxExtent.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.BoxExtent(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.BoxExtent.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.BoxExtent.__Internal));
                *(global::UtinniCore.Utinni.BoxExtent.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private BoxExtent(global::UtinniCore.Utinni.BoxExtent.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected BoxExtent(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public BoxExtent()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.BoxExtent.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public BoxExtent(global::UtinniCore.Utinni.BoxExtent _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.BoxExtent.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.BoxExtent.__Internal*) __Instance) = *((global::UtinniCore.Utinni.BoxExtent.__Internal*) _0.__Instance);
            }

            public bool RealIntersect(global::UtinniCore.Swg.Math.Vector worldStart, global::UtinniCore.Swg.Math.Vector worldEnd, global::UtinniCore.Swg.Math.Vector surfaceNormal, ref float time)
            {
                var __arg0 = ReferenceEquals(worldStart, null) ? global::System.IntPtr.Zero : worldStart.__Instance;
                var __arg1 = ReferenceEquals(worldEnd, null) ? global::System.IntPtr.Zero : worldEnd.__Instance;
                var __arg2 = ReferenceEquals(surfaceNormal, null) ? global::System.IntPtr.Zero : surfaceNormal.__Instance;
                fixed (float* __time3 = &time)
                {
                    var __arg3 = __time3;
                    var __ret = __Internal.RealIntersect(__Instance, __arg0, __arg1, __arg2, __arg3);
                    return __ret;
                }
            }

            public global::UtinniCore.Swg.Math.Vector Min
            {
                get
                {
                    return global::UtinniCore.Swg.Math.Vector.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.BoxExtent.__Internal*) __Instance)->min));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.BoxExtent.__Internal*)__Instance)->min = *(global::UtinniCore.Swg.Math.Vector.__Internal*) value.__Instance;
                }
            }

            public global::UtinniCore.Swg.Math.Vector Max
            {
                get
                {
                    return global::UtinniCore.Swg.Math.Vector.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.BoxExtent.__Internal*) __Instance)->max));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.BoxExtent.__Internal*)__Instance)->max = *(global::UtinniCore.Swg.Math.Vector.__Internal*) value.__Instance;
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class Graphics : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Graphics@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addPreUpdateLoopCallback@Graphics@utinni@@SAXP6AXM@Z@Z")]
                internal static extern void AddPreUpdateLoopCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addPostUpdateLoopCallback@Graphics@utinni@@SAXP6AXM@Z@Z")]
                internal static extern void AddPostUpdateLoopCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addPreBeginSceneCallback@Graphics@utinni@@SAXP6AXXZ@Z")]
                internal static extern void AddPreBeginSceneCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addPostBeginSceneCallback@Graphics@utinni@@SAXP6AXXZ@Z")]
                internal static extern void AddPostBeginSceneCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addPreEndSceneCallback@Graphics@utinni@@SAXP6AXXZ@Z")]
                internal static extern void AddPreEndSceneCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addPostEndSceneCallback@Graphics@utinni@@SAXP6AXXZ@Z")]
                internal static extern void AddPostEndSceneCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addPrePresentCallback@Graphics@utinni@@SAXP6AXXZ@Z")]
                internal static extern void AddPrePresentCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addPostPresentCallback@Graphics@utinni@@SAXP6AXXZ@Z")]
                internal static extern void AddPostPresentCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?useHardwareCursor@Graphics@utinni@@SAX_N@Z")]
                internal static extern void UseHardwareCursor(bool value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?showMouseCursor@Graphics@utinni@@SAX_N@Z")]
                internal static extern void ShowMouseCursor(bool isShown);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setSystemMouseCursorPosition@Graphics@utinni@@SAXHH@Z")]
                internal static extern void SetSystemMouseCursorPosition(int X, int Y);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?flushResources@Graphics@utinni@@SAX_N@Z")]
                internal static extern void FlushResources(bool fullFlush);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?reloadTextures@Graphics@utinni@@SAXXZ")]
                internal static extern void ReloadTextures();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setStaticShader@Graphics@utinni@@SAXIH@Z")]
                internal static extern void SetStaticShader(uint staticShader, int pass);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setObjectToWorldTransformAndScale@Graphics@utinni@@SAXPAUTransform@math@swg@@PAUVector@45@@Z")]
                internal static extern void SetObjectToWorldTransformAndScale(global::System.IntPtr objecToWorld, global::System.IntPtr scale);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?drawExtent@Graphics@utinni@@SAXPAVExtent@2@I@Z")]
                internal static extern void DrawExtent(global::System.IntPtr extent, uint vecArgbColor);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?detour@Graphics@utinni@@SAXXZ")]
                internal static extern void Detour();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getCurrentRenderTargetWidth@Graphics@utinni@@SAHXZ")]
                internal static extern int GetCurrentRenderTargetWidth();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getCurrentRenderTargetHeight@Graphics@utinni@@SAHXZ")]
                internal static extern int GetCurrentRenderTargetHeight();
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Graphics> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Graphics>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.Graphics __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Graphics(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.Graphics __CreateInstance(global::UtinniCore.Utinni.Graphics.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Graphics(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.Graphics.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Graphics.__Internal));
                *(global::UtinniCore.Utinni.Graphics.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private Graphics(global::UtinniCore.Utinni.Graphics.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected Graphics(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public Graphics()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Graphics.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public Graphics(global::UtinniCore.Utinni.Graphics _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Graphics.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.Graphics.__Internal*) __Instance) = *((global::UtinniCore.Utinni.Graphics.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.Graphics __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public static void AddPreUpdateLoopCallback(global::UtinniCore.Delegates.Action_float func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddPreUpdateLoopCallback(__arg0);
            }

            public static void AddPostUpdateLoopCallback(global::UtinniCore.Delegates.Action_float func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddPostUpdateLoopCallback(__arg0);
            }

            public static void AddPreBeginSceneCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddPreBeginSceneCallback(__arg0);
            }

            public static void AddPostBeginSceneCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddPostBeginSceneCallback(__arg0);
            }

            public static void AddPreEndSceneCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddPreEndSceneCallback(__arg0);
            }

            public static void AddPostEndSceneCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddPostEndSceneCallback(__arg0);
            }

            public static void AddPrePresentCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddPrePresentCallback(__arg0);
            }

            public static void AddPostPresentCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddPostPresentCallback(__arg0);
            }

            public static void UseHardwareCursor(bool value)
            {
                __Internal.UseHardwareCursor(value);
            }

            public static void ShowMouseCursor(bool isShown)
            {
                __Internal.ShowMouseCursor(isShown);
            }

            public static void SetSystemMouseCursorPosition(int X, int Y)
            {
                __Internal.SetSystemMouseCursorPosition(X, Y);
            }

            public static void FlushResources(bool fullFlush)
            {
                __Internal.FlushResources(fullFlush);
            }

            public static void ReloadTextures()
            {
                __Internal.ReloadTextures();
            }

            public static void SetStaticShader(uint staticShader, int pass)
            {
                __Internal.SetStaticShader(staticShader, pass);
            }

            public static void SetObjectToWorldTransformAndScale(global::UtinniCore.Swg.Math.Transform objecToWorld, global::UtinniCore.Swg.Math.Vector scale)
            {
                var __arg0 = ReferenceEquals(objecToWorld, null) ? global::System.IntPtr.Zero : objecToWorld.__Instance;
                var __arg1 = ReferenceEquals(scale, null) ? global::System.IntPtr.Zero : scale.__Instance;
                __Internal.SetObjectToWorldTransformAndScale(__arg0, __arg1);
            }

            public static void DrawExtent(global::UtinniCore.Utinni.Extent extent, uint vecArgbColor)
            {
                var __arg0 = ReferenceEquals(extent, null) ? global::System.IntPtr.Zero : extent.__Instance;
                __Internal.DrawExtent(__arg0, vecArgbColor);
            }

            public static void Detour()
            {
                __Internal.Detour();
            }

            public static int CurrentRenderTargetWidth
            {
                get
                {
                    var __ret = __Internal.GetCurrentRenderTargetWidth();
                    return __ret;
                }
            }

            public static int CurrentRenderTargetHeight
            {
                get
                {
                    var __ret = __Internal.GetCurrentRenderTargetHeight();
                    return __ret;
                }
            }
        }
    }

    namespace Swg
    {
        namespace Config
        {
            public unsafe partial class config
            {
                public partial struct __Internal
                {
                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?loadConfigFile@config@swg@@YA_NPAEH@Z")]
                    [return: MarshalAs(UnmanagedType.I1)]
                    internal static extern bool LoadConfigFile(byte* buffer, int bufferLength);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?loadConfigFile@config@swg@@YA_NPBD@Z")]
                    [return: MarshalAs(UnmanagedType.I1)]
                    internal static extern bool LoadConfigFile([MarshalAs(UnmanagedType.LPUTF8Str)] string fileName);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?enableModalChat@config@swg@@YAX_N@Z")]
                    internal static extern void EnableModalChat(bool value);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?detour@config@swg@@YAXXZ")]
                    internal static extern void Detour();
                }

                public static bool LoadConfigFile(byte* buffer, int bufferLength)
                {
                    var __ret = __Internal.LoadConfigFile(buffer, bufferLength);
                    return __ret;
                }

                public static bool LoadConfigFile(string fileName)
                {
                    var __ret = __Internal.LoadConfigFile(fileName);
                    return __ret;
                }

                public static void EnableModalChat(bool value)
                {
                    __Internal.EnableModalChat(value);
                }

                public static void Detour()
                {
                    __Internal.Detour();
                }
            }

            namespace ClientGame
            {
                public unsafe partial class config
                {
                    public partial struct __Internal
                    {
                        [SuppressUnmanagedCodeSecurity]
                        [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                            EntryPoint="?getSceneAvatarFilename@clientGame@config@swg@@YAPBDXZ")]
                        internal static extern global::System.IntPtr GetSceneAvatarFilename();

                        [SuppressUnmanagedCodeSecurity]
                        [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                            EntryPoint="?getSceneTerrainFilename@clientGame@config@swg@@YAPBDXZ")]
                        internal static extern global::System.IntPtr GetSceneTerrainFilename();
                    }

                    public static string GetSceneAvatarFilename()
                    {
                        var __ret = __Internal.GetSceneAvatarFilename();
                        if (__ret == global::System.IntPtr.Zero)
                            return default(string);
                        var __retPtr = (byte*) __ret;
                        int __length = 0;
                        while (*(__retPtr++) != 0) __length += sizeof(byte);
                        return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                    }

                    public static string GetSceneTerrainFilename()
                    {
                        var __ret = __Internal.GetSceneTerrainFilename();
                        if (__ret == global::System.IntPtr.Zero)
                            return default(string);
                        var __retPtr = (byte*) __ret;
                        int __length = 0;
                        while (*(__retPtr++) != 0) __length += sizeof(byte);
                        return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                    }
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class CrcString : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 8)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal uint crc;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0CrcString@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.CrcString> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.CrcString>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.CrcString __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.CrcString(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.CrcString __CreateInstance(global::UtinniCore.Utinni.CrcString.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.CrcString(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.CrcString.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CrcString.__Internal));
                *(global::UtinniCore.Utinni.CrcString.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private CrcString(global::UtinniCore.Utinni.CrcString.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected CrcString(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public CrcString()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CrcString.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public CrcString(global::UtinniCore.Utinni.CrcString _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CrcString.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.CrcString.__Internal*) __Instance) = *((global::UtinniCore.Utinni.CrcString.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.CrcString __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public uint Vtbl
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CrcString.__Internal*) __Instance)->vtbl;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CrcString.__Internal*)__Instance)->vtbl = value;
                }
            }

            public uint Crc
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CrcString.__Internal*) __Instance)->crc;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CrcString.__Internal*)__Instance)->crc = value;
                }
            }
        }

        public unsafe partial class PersistentCrcString : global::UtinniCore.Utinni.CrcString, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 16)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal uint crc;

                [FieldOffset(8)]
                internal uint unk01;

                [FieldOffset(12)]
                internal global::System.IntPtr buffer;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0PersistentCrcString@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?ctor@PersistentCrcString@utinni@@SAPAU12@PBD@Z")]
                internal static extern global::System.IntPtr Ctor([MarshalAs(UnmanagedType.LPUTF8Str)] string str);
            }

            internal static new global::UtinniCore.Utinni.PersistentCrcString __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.PersistentCrcString(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.PersistentCrcString __CreateInstance(global::UtinniCore.Utinni.PersistentCrcString.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.PersistentCrcString(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.PersistentCrcString.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PersistentCrcString.__Internal));
                *(global::UtinniCore.Utinni.PersistentCrcString.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private PersistentCrcString(global::UtinniCore.Utinni.PersistentCrcString.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected PersistentCrcString(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public PersistentCrcString()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PersistentCrcString.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public PersistentCrcString(global::UtinniCore.Utinni.PersistentCrcString _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PersistentCrcString.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.PersistentCrcString.__Internal*) __Instance) = *((global::UtinniCore.Utinni.PersistentCrcString.__Internal*) _0.__Instance);
            }

            public static global::UtinniCore.Utinni.PersistentCrcString Ctor(string str)
            {
                var __ret = __Internal.Ctor(str);
                global::UtinniCore.Utinni.PersistentCrcString __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.PersistentCrcString.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.PersistentCrcString) global::UtinniCore.Utinni.PersistentCrcString.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.PersistentCrcString.__CreateInstance(__ret);
                return __result0;
            }

            public uint Unk01
            {
                get
                {
                    return ((global::UtinniCore.Utinni.PersistentCrcString.__Internal*) __Instance)->unk01;
                }

                set
                {
                    ((global::UtinniCore.Utinni.PersistentCrcString.__Internal*)__Instance)->unk01 = value;
                }
            }

            public sbyte* Buffer
            {
                get
                {
                    return (sbyte*) ((global::UtinniCore.Utinni.PersistentCrcString.__Internal*) __Instance)->buffer;
                }

                set
                {
                    ((global::UtinniCore.Utinni.PersistentCrcString.__Internal*)__Instance)->buffer = (global::System.IntPtr) value;
                }
            }
        }

        public unsafe partial class TemporaryCrcString : global::UtinniCore.Utinni.CrcString, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 12)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal uint crc;

                [FieldOffset(8)]
                internal global::System.IntPtr buffer;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0TemporaryCrcString@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            internal static new global::UtinniCore.Utinni.TemporaryCrcString __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.TemporaryCrcString(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.TemporaryCrcString __CreateInstance(global::UtinniCore.Utinni.TemporaryCrcString.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.TemporaryCrcString(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.TemporaryCrcString.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.TemporaryCrcString.__Internal));
                *(global::UtinniCore.Utinni.TemporaryCrcString.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private TemporaryCrcString(global::UtinniCore.Utinni.TemporaryCrcString.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected TemporaryCrcString(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public TemporaryCrcString()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.TemporaryCrcString.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public TemporaryCrcString(global::UtinniCore.Utinni.TemporaryCrcString _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.TemporaryCrcString.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.TemporaryCrcString.__Internal*) __Instance) = *((global::UtinniCore.Utinni.TemporaryCrcString.__Internal*) _0.__Instance);
            }

            public sbyte* Buffer
            {
                get
                {
                    return (sbyte*) ((global::UtinniCore.Utinni.TemporaryCrcString.__Internal*) __Instance)->buffer;
                }

                set
                {
                    ((global::UtinniCore.Utinni.TemporaryCrcString.__Internal*)__Instance)->buffer = (global::System.IntPtr) value;
                }
            }
        }

        public unsafe partial class ConstCharCrcString : global::UtinniCore.Utinni.CrcString, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 12)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal uint crc;

                [FieldOffset(8)]
                internal global::System.IntPtr buffer;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0ConstCharCrcString@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?ctor@ConstCharCrcString@utinni@@SAPAU12@PBD@Z")]
                internal static extern global::System.IntPtr Ctor([MarshalAs(UnmanagedType.LPUTF8Str)] string str);
            }

            internal static new global::UtinniCore.Utinni.ConstCharCrcString __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.ConstCharCrcString(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.ConstCharCrcString __CreateInstance(global::UtinniCore.Utinni.ConstCharCrcString.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.ConstCharCrcString(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.ConstCharCrcString.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ConstCharCrcString.__Internal));
                *(global::UtinniCore.Utinni.ConstCharCrcString.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private ConstCharCrcString(global::UtinniCore.Utinni.ConstCharCrcString.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected ConstCharCrcString(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public ConstCharCrcString()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ConstCharCrcString.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public ConstCharCrcString(global::UtinniCore.Utinni.ConstCharCrcString _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ConstCharCrcString.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.ConstCharCrcString.__Internal*) __Instance) = *((global::UtinniCore.Utinni.ConstCharCrcString.__Internal*) _0.__Instance);
            }

            public static global::UtinniCore.Utinni.ConstCharCrcString Ctor(string str)
            {
                var __ret = __Internal.Ctor(str);
                global::UtinniCore.Utinni.ConstCharCrcString __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.ConstCharCrcString.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.ConstCharCrcString) global::UtinniCore.Utinni.ConstCharCrcString.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.ConstCharCrcString.__CreateInstance(__ret);
                return __result0;
            }

            public string Buffer
            {
                get
                {
                    if (((global::UtinniCore.Utinni.ConstCharCrcString.__Internal*) __Instance)->buffer == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) ((global::UtinniCore.Utinni.ConstCharCrcString.__Internal*) __Instance)->buffer;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) ((global::UtinniCore.Utinni.ConstCharCrcString.__Internal*) __Instance)->buffer, __length);
                }

                set
                {
                    byte[] __bytes0 = global::System.Text.Encoding.UTF8.GetBytes(value);
                    fixed (byte* __bytePtr0 = __bytes0)
                    {
                        ((global::UtinniCore.Utinni.ConstCharCrcString.__Internal*)__Instance)->buffer = (global::System.IntPtr) new global::System.IntPtr(__bytePtr0);
                    }
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class Hardpoint : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 64)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal global::UtinniCore.Utinni.PersistentCrcString.__Internal name;

                [FieldOffset(16)]
                internal global::UtinniCore.Swg.Math.Transform.__Internal Transform;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Hardpoint@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Hardpoint@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Hardpoint> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Hardpoint>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.Hardpoint __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Hardpoint(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.Hardpoint __CreateInstance(global::UtinniCore.Utinni.Hardpoint.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Hardpoint(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.Hardpoint.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Hardpoint.__Internal));
                *(global::UtinniCore.Utinni.Hardpoint.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private Hardpoint(global::UtinniCore.Utinni.Hardpoint.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected Hardpoint(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public Hardpoint()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Hardpoint.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public Hardpoint(global::UtinniCore.Utinni.Hardpoint _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Hardpoint.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.Hardpoint.__Internal*) __Instance) = *((global::UtinniCore.Utinni.Hardpoint.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.Hardpoint __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public global::UtinniCore.Utinni.PersistentCrcString Name
            {
                get
                {
                    return global::UtinniCore.Utinni.PersistentCrcString.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.Hardpoint.__Internal*) __Instance)->name));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.Hardpoint.__Internal*)__Instance)->name = *(global::UtinniCore.Utinni.PersistentCrcString.__Internal*) value.__Instance;
                }
            }

            public global::UtinniCore.Swg.Math.Transform Transform
            {
                get
                {
                    return global::UtinniCore.Swg.Math.Transform.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.Hardpoint.__Internal*) __Instance)->Transform));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.Hardpoint.__Internal*)__Instance)->Transform = *(global::UtinniCore.Swg.Math.Transform.__Internal*) value.__Instance;
                }
            }
        }

        public unsafe partial class AppearanceTemplate : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 32)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal int referenceCount;

                [FieldOffset(8)]
                internal global::System.IntPtr m_crcName;

                [FieldOffset(12)]
                internal uint unk01;

                [FieldOffset(16)]
                internal uint unk02;

                [FieldOffset(20)]
                internal global::System.IntPtr hardpoints;

                [FieldOffset(24)]
                internal global::System.IntPtr floorName;

                [FieldOffset(28)]
                internal uint unk03;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0AppearanceTemplate@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.AppearanceTemplate> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.AppearanceTemplate>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.AppearanceTemplate __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.AppearanceTemplate(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.AppearanceTemplate __CreateInstance(global::UtinniCore.Utinni.AppearanceTemplate.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.AppearanceTemplate(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.AppearanceTemplate.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.AppearanceTemplate.__Internal));
                *(global::UtinniCore.Utinni.AppearanceTemplate.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private AppearanceTemplate(global::UtinniCore.Utinni.AppearanceTemplate.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected AppearanceTemplate(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public AppearanceTemplate()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.AppearanceTemplate.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public AppearanceTemplate(global::UtinniCore.Utinni.AppearanceTemplate _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.AppearanceTemplate.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*) __Instance) = *((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.AppearanceTemplate __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public uint Vtbl
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*) __Instance)->vtbl;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*)__Instance)->vtbl = value;
                }
            }

            public int ReferenceCount
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*) __Instance)->referenceCount;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*)__Instance)->referenceCount = value;
                }
            }

            public global::UtinniCore.Utinni.PersistentCrcString MCrcName
            {
                get
                {
                    global::UtinniCore.Utinni.PersistentCrcString __result0;
                    if (((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*) __Instance)->m_crcName == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.PersistentCrcString.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*) __Instance)->m_crcName))
                        __result0 = (global::UtinniCore.Utinni.PersistentCrcString) global::UtinniCore.Utinni.PersistentCrcString.NativeToManagedMap[((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*) __Instance)->m_crcName];
                    else __result0 = global::UtinniCore.Utinni.PersistentCrcString.__CreateInstance(((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*) __Instance)->m_crcName);
                    return __result0;
                }
            }

            public uint Unk01
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*) __Instance)->unk01;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*)__Instance)->unk01 = value;
                }
            }

            public uint Unk02
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*) __Instance)->unk02;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*)__Instance)->unk02 = value;
                }
            }

            public sbyte* FloorName
            {
                get
                {
                    return (sbyte*) ((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*) __Instance)->floorName;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*)__Instance)->floorName = (global::System.IntPtr) value;
                }
            }

            public uint Unk03
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*) __Instance)->unk03;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AppearanceTemplate.__Internal*)__Instance)->unk03 = value;
                }
            }
        }

        public unsafe partial class Appearance : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 84)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal global::System.IntPtr appearanceTemplate;

                [FieldOffset(8)]
                internal uint unk;

                [FieldOffset(12)]
                internal global::System.IntPtr ownerObject;

                [FieldOffset(16)]
                internal int renderedFrameCount;

                [FieldOffset(20)]
                internal global::UtinniCore.Swg.Math.Vector.__Internal scale;

                [FieldOffset(32)]
                internal byte keepAlive;

                [FieldOffset(33)]
                internal byte useRenderEffectsFlag;

                [FieldOffset(34)]
                internal byte allowShadowBlob;

                [FieldOffset(36)]
                internal global::UtinniCore.Swg.Math.Transform.__Internal appearanceToWorld;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Appearance@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Appearance@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?create@Appearance@utinni@@SAPAV12@PBD@Z")]
                internal static extern global::System.IntPtr Create([MarshalAs(UnmanagedType.LPUTF8Str)] string filename);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getExtent@Appearance@utinni@@QAEPAVBoxExtent@2@XZ")]
                internal static extern global::System.IntPtr GetExtent(global::System.IntPtr __instance);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Appearance> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Appearance>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.Appearance __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Appearance(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.Appearance __CreateInstance(global::UtinniCore.Utinni.Appearance.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Appearance(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.Appearance.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Appearance.__Internal));
                *(global::UtinniCore.Utinni.Appearance.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private Appearance(global::UtinniCore.Utinni.Appearance.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected Appearance(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public Appearance()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Appearance.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public Appearance(global::UtinniCore.Utinni.Appearance _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Appearance.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance) = *((global::UtinniCore.Utinni.Appearance.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.Appearance __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public static global::UtinniCore.Utinni.Appearance Create(string filename)
            {
                var __ret = __Internal.Create(filename);
                global::UtinniCore.Utinni.Appearance __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.Appearance.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.Appearance) global::UtinniCore.Utinni.Appearance.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.Appearance.__CreateInstance(__ret);
                return __result0;
            }

            public uint Vtbl
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->vtbl;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Appearance.__Internal*)__Instance)->vtbl = value;
                }
            }

            public global::UtinniCore.Utinni.AppearanceTemplate AppearanceTemplate
            {
                get
                {
                    global::UtinniCore.Utinni.AppearanceTemplate __result0;
                    if (((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->appearanceTemplate == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.AppearanceTemplate.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->appearanceTemplate))
                        __result0 = (global::UtinniCore.Utinni.AppearanceTemplate) global::UtinniCore.Utinni.AppearanceTemplate.NativeToManagedMap[((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->appearanceTemplate];
                    else __result0 = global::UtinniCore.Utinni.AppearanceTemplate.__CreateInstance(((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->appearanceTemplate);
                    return __result0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Appearance.__Internal*)__Instance)->appearanceTemplate = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                }
            }

            public uint Unk
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->unk;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Appearance.__Internal*)__Instance)->unk = value;
                }
            }

            public global::UtinniCore.Utinni.Object OwnerObject
            {
                get
                {
                    global::UtinniCore.Utinni.Object __result0;
                    if (((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->ownerObject == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->ownerObject))
                        __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->ownerObject];
                    else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->ownerObject);
                    return __result0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Appearance.__Internal*)__Instance)->ownerObject = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                }
            }

            public int RenderedFrameCount
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->renderedFrameCount;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Appearance.__Internal*)__Instance)->renderedFrameCount = value;
                }
            }

            public global::UtinniCore.Swg.Math.Vector Scale
            {
                get
                {
                    return global::UtinniCore.Swg.Math.Vector.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->scale));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.Appearance.__Internal*)__Instance)->scale = *(global::UtinniCore.Swg.Math.Vector.__Internal*) value.__Instance;
                }
            }

            public bool KeepAlive
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->keepAlive != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Appearance.__Internal*)__Instance)->keepAlive = (byte) (value ? 1 : 0);
                }
            }

            public bool UseRenderEffectsFlag
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->useRenderEffectsFlag != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Appearance.__Internal*)__Instance)->useRenderEffectsFlag = (byte) (value ? 1 : 0);
                }
            }

            public bool AllowShadowBlob
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->allowShadowBlob != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Appearance.__Internal*)__Instance)->allowShadowBlob = (byte) (value ? 1 : 0);
                }
            }

            public global::UtinniCore.Swg.Math.Transform AppearanceToWorld
            {
                get
                {
                    return global::UtinniCore.Swg.Math.Transform.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.Appearance.__Internal*) __Instance)->appearanceToWorld));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.Appearance.__Internal*)__Instance)->appearanceToWorld = *(global::UtinniCore.Swg.Math.Transform.__Internal*) value.__Instance;
                }
            }

            public global::UtinniCore.Utinni.BoxExtent Extent
            {
                get
                {
                    var __ret = __Internal.GetExtent(__Instance);
                    global::UtinniCore.Utinni.BoxExtent __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.BoxExtent.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.BoxExtent) global::UtinniCore.Utinni.BoxExtent.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.BoxExtent.__CreateInstance(__ret);
                    return __result0;
                }
            }
        }

        public unsafe partial class ParticleEffectAppearance : global::UtinniCore.Utinni.Appearance, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 84)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal global::System.IntPtr appearanceTemplate;

                [FieldOffset(8)]
                internal uint unk;

                [FieldOffset(12)]
                internal global::System.IntPtr ownerObject;

                [FieldOffset(16)]
                internal int renderedFrameCount;

                [FieldOffset(20)]
                internal global::UtinniCore.Swg.Math.Vector.__Internal scale;

                [FieldOffset(32)]
                internal byte keepAlive;

                [FieldOffset(33)]
                internal byte useRenderEffectsFlag;

                [FieldOffset(34)]
                internal byte allowShadowBlob;

                [FieldOffset(36)]
                internal global::UtinniCore.Swg.Math.Transform.__Internal appearanceToWorld;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0ParticleEffectAppearance@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0ParticleEffectAppearance@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?collide@ParticleEffectAppearance@utinni@@QAE_NPAUVector@math@swg@@0IAAUCollisionInfo@2@@Z")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool Collide(global::System.IntPtr __instance, global::System.IntPtr worldStart, global::System.IntPtr worldEnd, uint unk, global::System.IntPtr collisionResults);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?detour@ParticleEffectAppearance@utinni@@SAXXZ")]
                internal static extern void Detour();
            }

            internal static new global::UtinniCore.Utinni.ParticleEffectAppearance __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.ParticleEffectAppearance(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.ParticleEffectAppearance __CreateInstance(global::UtinniCore.Utinni.ParticleEffectAppearance.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.ParticleEffectAppearance(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.ParticleEffectAppearance.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ParticleEffectAppearance.__Internal));
                *(global::UtinniCore.Utinni.ParticleEffectAppearance.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private ParticleEffectAppearance(global::UtinniCore.Utinni.ParticleEffectAppearance.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected ParticleEffectAppearance(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public ParticleEffectAppearance()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ParticleEffectAppearance.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public ParticleEffectAppearance(global::UtinniCore.Utinni.ParticleEffectAppearance _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ParticleEffectAppearance.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.ParticleEffectAppearance.__Internal*) __Instance) = *((global::UtinniCore.Utinni.ParticleEffectAppearance.__Internal*) _0.__Instance);
            }

            public bool Collide(global::UtinniCore.Swg.Math.Vector worldStart, global::UtinniCore.Swg.Math.Vector worldEnd, uint unk, global::UtinniCore.Utinni.CollisionInfo collisionResults)
            {
                var __arg0 = ReferenceEquals(worldStart, null) ? global::System.IntPtr.Zero : worldStart.__Instance;
                var __arg1 = ReferenceEquals(worldEnd, null) ? global::System.IntPtr.Zero : worldEnd.__Instance;
                if (ReferenceEquals(collisionResults, null))
                    throw new global::System.ArgumentNullException("collisionResults", "Cannot be null because it is a C++ reference (&).");
                var __arg3 = collisionResults.__Instance;
                var __ret = __Internal.Collide(__Instance, __arg0, __arg1, unk, __arg3);
                return __ret;
            }

            public static void Detour()
            {
                __Internal.Detour();
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class PortalPropertyTemplate : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0PortalPropertyTemplate@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getCrc@PortalPropertyTemplate@utinni@@QAEHXZ")]
                internal static extern int GetCrc(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getCellCount@PortalPropertyTemplate@utinni@@QAEHXZ")]
                internal static extern int GetCellCount(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getExteriorAppearanceName@PortalPropertyTemplate@utinni@@QAEPBDXZ")]
                internal static extern global::System.IntPtr GetExteriorAppearanceName(global::System.IntPtr __instance);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.PortalPropertyTemplate> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.PortalPropertyTemplate>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.PortalPropertyTemplate __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.PortalPropertyTemplate(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.PortalPropertyTemplate __CreateInstance(global::UtinniCore.Utinni.PortalPropertyTemplate.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.PortalPropertyTemplate(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.PortalPropertyTemplate.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PortalPropertyTemplate.__Internal));
                *(global::UtinniCore.Utinni.PortalPropertyTemplate.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private PortalPropertyTemplate(global::UtinniCore.Utinni.PortalPropertyTemplate.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected PortalPropertyTemplate(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public PortalPropertyTemplate()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PortalPropertyTemplate.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public PortalPropertyTemplate(global::UtinniCore.Utinni.PortalPropertyTemplate _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PortalPropertyTemplate.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.PortalPropertyTemplate.__Internal*) __Instance) = *((global::UtinniCore.Utinni.PortalPropertyTemplate.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.PortalPropertyTemplate __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public int Crc
            {
                get
                {
                    var __ret = __Internal.GetCrc(__Instance);
                    return __ret;
                }
            }

            public int CellCount
            {
                get
                {
                    var __ret = __Internal.GetCellCount(__Instance);
                    return __ret;
                }
            }

            public string ExteriorAppearanceName
            {
                get
                {
                    var __ret = __Internal.GetExteriorAppearanceName(__Instance);
                    if (__ret == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) __ret;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                }
            }
        }

        public unsafe partial class PortalPropertyTemplateList : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0PortalPropertyTemplateList@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getPobByCrcString@PortalPropertyTemplateList@utinni@@SAPAVPortalPropertyTemplate@2@PAUPersistentCrcString@2@@Z")]
                internal static extern global::System.IntPtr GetPobByCrcString(global::System.IntPtr pobCrcString);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.PortalPropertyTemplateList> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.PortalPropertyTemplateList>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.PortalPropertyTemplateList __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.PortalPropertyTemplateList(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.PortalPropertyTemplateList __CreateInstance(global::UtinniCore.Utinni.PortalPropertyTemplateList.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.PortalPropertyTemplateList(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.PortalPropertyTemplateList.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PortalPropertyTemplateList.__Internal));
                *(global::UtinniCore.Utinni.PortalPropertyTemplateList.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private PortalPropertyTemplateList(global::UtinniCore.Utinni.PortalPropertyTemplateList.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected PortalPropertyTemplateList(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public PortalPropertyTemplateList()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PortalPropertyTemplateList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public PortalPropertyTemplateList(global::UtinniCore.Utinni.PortalPropertyTemplateList _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.PortalPropertyTemplateList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.PortalPropertyTemplateList.__Internal*) __Instance) = *((global::UtinniCore.Utinni.PortalPropertyTemplateList.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.PortalPropertyTemplateList __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public static global::UtinniCore.Utinni.PortalPropertyTemplate GetPobByCrcString(global::UtinniCore.Utinni.PersistentCrcString pobCrcString)
            {
                var __arg0 = ReferenceEquals(pobCrcString, null) ? global::System.IntPtr.Zero : pobCrcString.__Instance;
                var __ret = __Internal.GetPobByCrcString(__arg0);
                global::UtinniCore.Utinni.PortalPropertyTemplate __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.PortalPropertyTemplate.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.PortalPropertyTemplate) global::UtinniCore.Utinni.PortalPropertyTemplate.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.PortalPropertyTemplate.__CreateInstance(__ret);
                return __result0;
            }
        }

        public unsafe partial class CellProperty : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 100)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal global::System.IntPtr parentObject;

                [FieldOffset(8)]
                internal uint unk_08;

                [FieldOffset(12)]
                internal uint unk_0C;

                [FieldOffset(16)]
                internal uint unk_10;

                [FieldOffset(20)]
                internal uint unk_14;

                [FieldOffset(24)]
                internal uint unk_18;

                [FieldOffset(28)]
                internal uint unk_1C;

                [FieldOffset(32)]
                internal uint portalProperty;

                [FieldOffset(36)]
                internal int index;

                [FieldOffset(40)]
                internal global::System.IntPtr appearanceObject;

                [FieldOffset(44)]
                internal uint unk_2C;

                [FieldOffset(48)]
                internal uint unk_30;

                [FieldOffset(52)]
                internal uint floor;

                [FieldOffset(56)]
                internal global::System.IntPtr name;

                [FieldOffset(60)]
                internal uint dpvsObject;

                [FieldOffset(64)]
                internal uint unk_40;

                [FieldOffset(68)]
                internal uint unk_44;

                [FieldOffset(72)]
                internal uint unk_48;

                [FieldOffset(76)]
                internal uint unk_4C;

                [FieldOffset(80)]
                internal uint unk_50;

                [FieldOffset(84)]
                internal uint unk_54;

                [FieldOffset(88)]
                internal uint unk_58;

                [FieldOffset(92)]
                internal uint unk_5C;

                [FieldOffset(96)]
                internal uint unk_60;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0CellProperty@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setPortalTransitions@CellProperty@utinni@@SAX_N@Z")]
                internal static extern void SetPortalTransitions(bool enabled);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getParentObject@CellProperty@utinni@@QBEPAVClientObject@2@XZ")]
                internal static extern global::System.IntPtr GetParentObject(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getAppearanceObject@CellProperty@utinni@@QBEPAVObject@2@XZ")]
                internal static extern global::System.IntPtr GetAppearanceObject(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getIndex@CellProperty@utinni@@QBEHXZ")]
                internal static extern int GetIndex(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getName@CellProperty@utinni@@QBEPBDXZ")]
                internal static extern global::System.IntPtr GetName(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getParentCell@CellProperty@utinni@@QAEIXZ")]
                internal static extern uint GetParentCell(global::System.IntPtr __instance);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.CellProperty> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.CellProperty>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.CellProperty __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.CellProperty(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.CellProperty __CreateInstance(global::UtinniCore.Utinni.CellProperty.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.CellProperty(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.CellProperty.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CellProperty.__Internal));
                *(global::UtinniCore.Utinni.CellProperty.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private CellProperty(global::UtinniCore.Utinni.CellProperty.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected CellProperty(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public CellProperty()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CellProperty.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public CellProperty(global::UtinniCore.Utinni.CellProperty _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CellProperty.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance) = *((global::UtinniCore.Utinni.CellProperty.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.CellProperty __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public static void SetPortalTransitions(bool enabled)
            {
                __Internal.SetPortalTransitions(enabled);
            }

            public uint Vtbl
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->vtbl;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->vtbl = value;
                }
            }

            public global::UtinniCore.Utinni.ClientObject ParentObject
            {
                get
                {
                    global::UtinniCore.Utinni.ClientObject __result0;
                    if (((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->parentObject == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.ClientObject.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->parentObject))
                        __result0 = (global::UtinniCore.Utinni.ClientObject) global::UtinniCore.Utinni.ClientObject.NativeToManagedMap[((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->parentObject];
                    else __result0 = global::UtinniCore.Utinni.ClientObject.__CreateInstance(((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->parentObject);
                    return __result0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->parentObject = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                }
            }

            public uint Unk08
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_08;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_08 = value;
                }
            }

            public uint Unk0C
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_0C;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_0C = value;
                }
            }

            public uint Unk10
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_10;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_10 = value;
                }
            }

            public uint Unk14
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_14;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_14 = value;
                }
            }

            public uint Unk18
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_18;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_18 = value;
                }
            }

            public uint Unk1C
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_1C;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_1C = value;
                }
            }

            public uint PortalProperty
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->portalProperty;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->portalProperty = value;
                }
            }

            public int Index
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->index;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->index = value;
                }
            }

            public global::UtinniCore.Utinni.Object AppearanceObject
            {
                get
                {
                    global::UtinniCore.Utinni.Object __result0;
                    if (((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->appearanceObject == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->appearanceObject))
                        __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->appearanceObject];
                    else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->appearanceObject);
                    return __result0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->appearanceObject = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                }
            }

            public uint Unk2C
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_2C;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_2C = value;
                }
            }

            public uint Unk30
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_30;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_30 = value;
                }
            }

            public uint Floor
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->floor;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->floor = value;
                }
            }

            public string Name
            {
                get
                {
                    if (((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->name == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->name;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->name, __length);
                }

                set
                {
                    byte[] __bytes0 = global::System.Text.Encoding.UTF8.GetBytes(value);
                    fixed (byte* __bytePtr0 = __bytes0)
                    {
                        ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->name = (global::System.IntPtr) new global::System.IntPtr(__bytePtr0);
                    }
                }
            }

            public uint DpvsObject
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->dpvsObject;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->dpvsObject = value;
                }
            }

            public uint Unk40
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_40;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_40 = value;
                }
            }

            public uint Unk44
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_44;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_44 = value;
                }
            }

            public uint Unk48
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_48;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_48 = value;
                }
            }

            public uint Unk4C
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_4C;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_4C = value;
                }
            }

            public uint Unk50
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_50;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_50 = value;
                }
            }

            public uint Unk54
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_54;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_54 = value;
                }
            }

            public uint Unk58
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_58;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_58 = value;
                }
            }

            public uint Unk5C
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_5C;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_5C = value;
                }
            }

            public uint Unk60
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CellProperty.__Internal*) __Instance)->unk_60;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CellProperty.__Internal*)__Instance)->unk_60 = value;
                }
            }

            public global::UtinniCore.Utinni.ClientObject ParentObject1
            {
                get
                {
                    var __ret = __Internal.GetParentObject(__Instance);
                    global::UtinniCore.Utinni.ClientObject __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.ClientObject.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.ClientObject) global::UtinniCore.Utinni.ClientObject.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.ClientObject.__CreateInstance(__ret);
                    return __result0;
                }
            }

            public global::UtinniCore.Utinni.Object AppearanceObject1
            {
                get
                {
                    var __ret = __Internal.GetAppearanceObject(__Instance);
                    global::UtinniCore.Utinni.Object __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(__ret);
                    return __result0;
                }
            }

            public int Index1
            {
                get
                {
                    var __ret = __Internal.GetIndex(__Instance);
                    return __ret;
                }
            }

            public string Name1
            {
                get
                {
                    var __ret = __Internal.GetName(__Instance);
                    if (__ret == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) __ret;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                }
            }

            public uint ParentCell
            {
                get
                {
                    var __ret = __Internal.GetParentCell(__Instance);
                    return __ret;
                }
            }
        }
    }

    namespace Utinni
    {
        namespace AutoDeltaVariable
        {
            [StructLayout(LayoutKind.Explicit, Size = 20)]
            public unsafe partial struct __Internalc__N_utinni_S_AutoDeltaVariable__I
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal ushort index;

                [FieldOffset(8)]
                internal uint parent;

                [FieldOffset(12)]
                internal int value;

                [FieldOffset(16)]
                internal int previousValue;
            }

            [StructLayout(LayoutKind.Explicit, Size = 116)]
            public unsafe partial struct __Internalc__N_utinni_S_AutoDeltaVariable____N_utinni_S_StringId
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal ushort index;

                [FieldOffset(8)]
                internal uint parent;

                [FieldOffset(12)]
                internal global::UtinniCore.Utinni.StringId.__Internal value;

                [FieldOffset(64)]
                internal global::UtinniCore.Utinni.StringId.__Internal previousValue;
            }
        }

        namespace AutoDeltaVariableCallback
        {
            [StructLayout(LayoutKind.Explicit, Size = 28)]
            public unsafe partial struct __Internal_Ptr
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal ushort index;

                [FieldOffset(8)]
                internal uint parent;

                [FieldOffset(12)]
                internal global::System.IntPtr value;

                [FieldOffset(16)]
                internal global::System.IntPtr previousValue;

                [FieldOffset(20)]
                internal uint callback;

                [FieldOffset(24)]
                internal global::System.IntPtr sourceObject;
            }

            [StructLayout(LayoutKind.Explicit, Size = 28)]
            public unsafe partial struct __Internalc__N_utinni_S_AutoDeltaVariableCallback__f
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal ushort index;

                [FieldOffset(8)]
                internal uint parent;

                [FieldOffset(12)]
                internal float value;

                [FieldOffset(16)]
                internal float previousValue;

                [FieldOffset(20)]
                internal uint callback;

                [FieldOffset(24)]
                internal global::System.IntPtr sourceObject;
            }

            [StructLayout(LayoutKind.Explicit, Size = 28)]
            public unsafe partial struct __Internalc__N_utinni_S_AutoDeltaVariableCallback__I
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal ushort index;

                [FieldOffset(8)]
                internal uint parent;

                [FieldOffset(12)]
                internal int value;

                [FieldOffset(16)]
                internal int previousValue;

                [FieldOffset(20)]
                internal uint callback;

                [FieldOffset(24)]
                internal global::System.IntPtr sourceObject;
            }
        }

        public unsafe partial class ObjectTemplate : global::UtinniCore.Utinni.DataResource, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 28)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal global::UtinniCore.Utinni.PersistentCrcString.__Internal name;

                [FieldOffset(20)]
                internal int referenceCount;

                [FieldOffset(24)]
                internal global::System.IntPtr baseData;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0ObjectTemplate@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?createObject@ObjectTemplate@utinni@@SAPAVObject@2@PBD@Z")]
                internal static extern global::System.IntPtr CreateObject([MarshalAs(UnmanagedType.LPUTF8Str)] string filename);
            }

            internal static new global::UtinniCore.Utinni.ObjectTemplate __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.ObjectTemplate(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.ObjectTemplate __CreateInstance(global::UtinniCore.Utinni.ObjectTemplate.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.ObjectTemplate(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.ObjectTemplate.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ObjectTemplate.__Internal));
                *(global::UtinniCore.Utinni.ObjectTemplate.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private ObjectTemplate(global::UtinniCore.Utinni.ObjectTemplate.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected ObjectTemplate(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public ObjectTemplate()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ObjectTemplate.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public ObjectTemplate(global::UtinniCore.Utinni.ObjectTemplate _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ObjectTemplate.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.ObjectTemplate.__Internal*) __Instance) = *((global::UtinniCore.Utinni.ObjectTemplate.__Internal*) _0.__Instance);
            }

            public static global::UtinniCore.Utinni.Object CreateObject(string filename)
            {
                var __ret = __Internal.CreateObject(filename);
                global::UtinniCore.Utinni.Object __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(__ret);
                return __result0;
            }

            public global::UtinniCore.Utinni.ObjectTemplate BaseData
            {
                get
                {
                    global::UtinniCore.Utinni.ObjectTemplate __result0;
                    if (((global::UtinniCore.Utinni.ObjectTemplate.__Internal*) __Instance)->baseData == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.ObjectTemplate.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.ObjectTemplate.__Internal*) __Instance)->baseData))
                        __result0 = (global::UtinniCore.Utinni.ObjectTemplate) global::UtinniCore.Utinni.ObjectTemplate.NativeToManagedMap[((global::UtinniCore.Utinni.ObjectTemplate.__Internal*) __Instance)->baseData];
                    else __result0 = global::UtinniCore.Utinni.ObjectTemplate.__CreateInstance(((global::UtinniCore.Utinni.ObjectTemplate.__Internal*) __Instance)->baseData);
                    return __result0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ObjectTemplate.__Internal*)__Instance)->baseData = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                }
            }
        }

        public unsafe partial class SharedObjectTemplate : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0SharedObjectTemplate@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getAppearanceFilename@SharedObjectTemplate@utinni@@QAEPBDXZ")]
                internal static extern global::System.IntPtr GetAppearanceFilename(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getPortalLayoutFilename@SharedObjectTemplate@utinni@@QAEPBDXZ")]
                internal static extern global::System.IntPtr GetPortalLayoutFilename(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getClientDataFilename@SharedObjectTemplate@utinni@@QAEPBDXZ")]
                internal static extern global::System.IntPtr GetClientDataFilename(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getGameObjectType@SharedObjectTemplate@utinni@@QAEHXZ")]
                internal static extern int GetGameObjectType(global::System.IntPtr __instance);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.SharedObjectTemplate> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.SharedObjectTemplate>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.SharedObjectTemplate __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.SharedObjectTemplate(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.SharedObjectTemplate __CreateInstance(global::UtinniCore.Utinni.SharedObjectTemplate.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.SharedObjectTemplate(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.SharedObjectTemplate.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.SharedObjectTemplate.__Internal));
                *(global::UtinniCore.Utinni.SharedObjectTemplate.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private SharedObjectTemplate(global::UtinniCore.Utinni.SharedObjectTemplate.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected SharedObjectTemplate(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public SharedObjectTemplate()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.SharedObjectTemplate.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public SharedObjectTemplate(global::UtinniCore.Utinni.SharedObjectTemplate _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.SharedObjectTemplate.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.SharedObjectTemplate.__Internal*) __Instance) = *((global::UtinniCore.Utinni.SharedObjectTemplate.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.SharedObjectTemplate __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public string AppearanceFilename
            {
                get
                {
                    var __ret = __Internal.GetAppearanceFilename(__Instance);
                    if (__ret == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) __ret;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                }
            }

            public string PortalLayoutFilename
            {
                get
                {
                    var __ret = __Internal.GetPortalLayoutFilename(__Instance);
                    if (__ret == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) __ret;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                }
            }

            public string ClientDataFilename
            {
                get
                {
                    var __ret = __Internal.GetClientDataFilename(__Instance);
                    if (__ret == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) __ret;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                }
            }

            public int GameObjectType
            {
                get
                {
                    var __ret = __Internal.GetGameObjectType(__Instance);
                    return __ret;
                }
            }
        }

        public unsafe partial class SharedBuildingObjectTemplate : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0SharedBuildingObjectTemplate@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getTerrainLayerFilename@SharedBuildingObjectTemplate@utinni@@QAEPBDXZ")]
                internal static extern global::System.IntPtr GetTerrainLayerFilename(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getInteriorLayoutFilename@SharedBuildingObjectTemplate@utinni@@QAEPBDXZ")]
                internal static extern global::System.IntPtr GetInteriorLayoutFilename(global::System.IntPtr __instance);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.SharedBuildingObjectTemplate> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.SharedBuildingObjectTemplate>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.SharedBuildingObjectTemplate __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.SharedBuildingObjectTemplate(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.SharedBuildingObjectTemplate __CreateInstance(global::UtinniCore.Utinni.SharedBuildingObjectTemplate.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.SharedBuildingObjectTemplate(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.SharedBuildingObjectTemplate.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.SharedBuildingObjectTemplate.__Internal));
                *(global::UtinniCore.Utinni.SharedBuildingObjectTemplate.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private SharedBuildingObjectTemplate(global::UtinniCore.Utinni.SharedBuildingObjectTemplate.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected SharedBuildingObjectTemplate(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public SharedBuildingObjectTemplate()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.SharedBuildingObjectTemplate.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public SharedBuildingObjectTemplate(global::UtinniCore.Utinni.SharedBuildingObjectTemplate _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.SharedBuildingObjectTemplate.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.SharedBuildingObjectTemplate.__Internal*) __Instance) = *((global::UtinniCore.Utinni.SharedBuildingObjectTemplate.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.SharedBuildingObjectTemplate __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public string TerrainLayerFilename
            {
                get
                {
                    var __ret = __Internal.GetTerrainLayerFilename(__Instance);
                    if (__ret == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) __ret;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                }
            }

            public string InteriorLayoutFilename
            {
                get
                {
                    var __ret = __Internal.GetInteriorLayoutFilename(__Instance);
                    if (__ret == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) __ret;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                }
            }
        }

        public unsafe partial class ObjectTemplateList : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0ObjectTemplateList@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getObjectTemplateByFilename@ObjectTemplateList@utinni@@SAPAVSharedObjectTemplate@2@PBD@Z")]
                internal static extern global::System.IntPtr GetObjectTemplateByFilename([MarshalAs(UnmanagedType.LPUTF8Str)] string filename);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getObjectTemplateByIff@ObjectTemplateList@utinni@@SAPAVSharedObjectTemplate@2@I@Z")]
                internal static extern global::System.IntPtr GetObjectTemplateByIff(uint iff);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getCrcStringByCrc@ObjectTemplateList@utinni@@SA?BUConstCharCrcString@2@I@Z")]
                internal static extern void GetCrcStringByCrc(global::System.IntPtr @return, uint crc);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getCrcStringByName@ObjectTemplateList@utinni@@SA?AUConstCharCrcString@2@PBD@Z")]
                internal static extern void GetCrcStringByName(global::System.IntPtr @return, [MarshalAs(UnmanagedType.LPUTF8Str)] string name);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getCrcStringByNameAsPtr@ObjectTemplateList@utinni@@SAIPBD@Z")]
                internal static extern uint GetCrcStringByNameAsPtr([MarshalAs(UnmanagedType.LPUTF8Str)] string name);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.ObjectTemplateList> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.ObjectTemplateList>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.ObjectTemplateList __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.ObjectTemplateList(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.ObjectTemplateList __CreateInstance(global::UtinniCore.Utinni.ObjectTemplateList.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.ObjectTemplateList(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.ObjectTemplateList.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ObjectTemplateList.__Internal));
                *(global::UtinniCore.Utinni.ObjectTemplateList.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private ObjectTemplateList(global::UtinniCore.Utinni.ObjectTemplateList.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected ObjectTemplateList(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public ObjectTemplateList()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ObjectTemplateList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public ObjectTemplateList(global::UtinniCore.Utinni.ObjectTemplateList _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ObjectTemplateList.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.ObjectTemplateList.__Internal*) __Instance) = *((global::UtinniCore.Utinni.ObjectTemplateList.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.ObjectTemplateList __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public static global::UtinniCore.Utinni.SharedObjectTemplate GetObjectTemplateByFilename(string filename)
            {
                var __ret = __Internal.GetObjectTemplateByFilename(filename);
                global::UtinniCore.Utinni.SharedObjectTemplate __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.SharedObjectTemplate.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.SharedObjectTemplate) global::UtinniCore.Utinni.SharedObjectTemplate.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.SharedObjectTemplate.__CreateInstance(__ret);
                return __result0;
            }

            public static global::UtinniCore.Utinni.SharedObjectTemplate GetObjectTemplateByIff(uint iff)
            {
                var __ret = __Internal.GetObjectTemplateByIff(iff);
                global::UtinniCore.Utinni.SharedObjectTemplate __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.SharedObjectTemplate.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.SharedObjectTemplate) global::UtinniCore.Utinni.SharedObjectTemplate.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.SharedObjectTemplate.__CreateInstance(__ret);
                return __result0;
            }

            public static global::UtinniCore.Utinni.ConstCharCrcString GetCrcStringByCrc(uint crc)
            {
                var __ret = new global::UtinniCore.Utinni.ConstCharCrcString.__Internal();
                __Internal.GetCrcStringByCrc(new IntPtr(&__ret), crc);
                return global::UtinniCore.Utinni.ConstCharCrcString.__CreateInstance(__ret);
            }

            public static global::UtinniCore.Utinni.ConstCharCrcString GetCrcStringByName(string name)
            {
                var __ret = new global::UtinniCore.Utinni.ConstCharCrcString.__Internal();
                __Internal.GetCrcStringByName(new IntPtr(&__ret), name);
                return global::UtinniCore.Utinni.ConstCharCrcString.__CreateInstance(__ret);
            }

            public static uint GetCrcStringByNameAsPtr(string name)
            {
                var __ret = __Internal.GetCrcStringByNameAsPtr(name);
                return __ret;
            }
        }

        public unsafe partial class Object : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 160)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal uint unk01;

                [FieldOffset(8)]
                internal uint unk02;

                [FieldOffset(12)]
                internal uint unk03;

                [FieldOffset(16)]
                internal global::System.IntPtr objectTemplate;

                [FieldOffset(20)]
                internal uint unk04;

                [FieldOffset(24)]
                internal global::System.IntPtr name;

                [FieldOffset(32)]
                internal long networkId;

                [FieldOffset(40)]
                internal global::System.IntPtr appearance;

                [FieldOffset(44)]
                internal global::System.IntPtr controller;

                [FieldOffset(48)]
                internal uint unk07;

                [FieldOffset(52)]
                internal global::System.IntPtr parentObject;

                [FieldOffset(56)]
                internal uint unk08;

                [FieldOffset(60)]
                internal uint dpvsObjects;

                [FieldOffset(64)]
                internal int rotations;

                [FieldOffset(68)]
                internal global::UtinniCore.Swg.Math.Vector.__Internal scale;

                [FieldOffset(80)]
                internal global::UtinniCore.Swg.Math.Transform.__Internal objectToParent;

                [FieldOffset(128)]
                internal global::System.IntPtr objectToWorld;

                [FieldOffset(132)]
                internal uint unk09;

                [FieldOffset(136)]
                internal uint container;

                [FieldOffset(140)]
                internal uint CollisionProperty;

                [FieldOffset(144)]
                internal uint SpatialSubdivisionHandle;

                [FieldOffset(148)]
                internal byte unk10;

                [FieldOffset(149)]
                internal byte unk11;

                [FieldOffset(150)]
                internal byte unk12;

                [FieldOffset(151)]
                internal byte unk13;

                [FieldOffset(152)]
                internal uint unk14;

                [FieldOffset(156)]
                internal uint containedBy;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Object@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Object@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getObjectById@Object@utinni@@SAPAV12@I@Z")]
                internal static extern global::System.IntPtr GetObjectById(uint networkIdPointer);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?remove@Object@utinni@@QAEXXZ")]
                internal static extern void Remove(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?rotate_o2w@Object@utinni@@QAE?BUVector@math@swg@@PBU345@0@Z")]
                internal static extern void RotateO2w(global::System.IntPtr __instance, global::System.IntPtr @return, global::System.IntPtr o2w, global::System.IntPtr pointInSpace);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?move@Object@utinni@@QAEXABUVector@math@swg@@@Z")]
                internal static extern void Move(global::System.IntPtr __instance, global::System.IntPtr vector);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?addToWorld@Object@utinni@@QAEXXZ")]
                internal static extern void AddToWorld(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?removeFromWorld@Object@utinni@@QAEXXZ")]
                internal static extern void RemoveFromWorld(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setAppearance@Object@utinni@@QAEXPAVAppearance@2@@Z")]
                internal static extern void SetAppearance(global::System.IntPtr __instance, global::System.IntPtr appearance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?addNotification@Object@utinni@@QAEXI_N@Z")]
                internal static extern void AddNotification(global::System.IntPtr __instance, uint notification, bool allowWhenInWorld);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?removeNotification@Object@utinni@@QAEXI_N@Z")]
                internal static extern void RemoveNotification(global::System.IntPtr __instance, uint notification, bool allowWhenInWorld);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setObjectToWorldDirty@Object@utinni@@QAEX_N@Z")]
                internal static extern void SetObjectToWorldDirty(global::System.IntPtr __instance, bool isDirty);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?positionAndRotationChanged@Object@utinni@@QAEX_NAAUVector@math@swg@@@Z")]
                internal static extern void PositionAndRotationChanged(global::System.IntPtr __instance, bool dueToParentChange, global::System.IntPtr oldPosition);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?ctor@Object@utinni@@SAPAV12@XZ")]
                internal static extern global::System.IntPtr Ctor();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?isActive@Object@utinni@@QAE_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsActive(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getTransform@Object@utinni@@QAEPAUTransform@math@swg@@XZ")]
                internal static extern global::System.IntPtr GetTransform(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getTransform_o2w@Object@utinni@@QAEPAUTransform@math@swg@@XZ")]
                internal static extern global::System.IntPtr GetTransformO2w(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setTransform_o2w@Object@utinni@@QAEXAAUTransform@math@swg@@@Z")]
                internal static extern void SetTransformO2w(global::System.IntPtr __instance, global::System.IntPtr object2world);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getParentCell@Object@utinni@@QAEPAVCellProperty@2@XZ")]
                internal static extern global::System.IntPtr GetParentCell(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getClientObject@Object@utinni@@QAEPAVClientObject@2@XZ")]
                internal static extern global::System.IntPtr GetClientObject(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getTemplateFilename@Object@utinni@@QAEPBDXZ")]
                internal static extern global::System.IntPtr GetTemplateFilename(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getAppearanceFilename@Object@utinni@@QAEPBDXZ")]
                internal static extern global::System.IntPtr GetAppearanceFilename(global::System.IntPtr __instance);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Object> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Object>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.Object __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Object(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.Object __CreateInstance(global::UtinniCore.Utinni.Object.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Object(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.Object.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Object.__Internal));
                *(global::UtinniCore.Utinni.Object.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private Object(global::UtinniCore.Utinni.Object.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected Object(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public Object()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Object.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public Object(global::UtinniCore.Utinni.Object _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Object.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.Object.__Internal*) __Instance) = *((global::UtinniCore.Utinni.Object.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.Object __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public void Remove()
            {
                __Internal.Remove(__Instance);
            }

            public global::UtinniCore.Swg.Math.Vector RotateO2w(global::UtinniCore.Swg.Math.Vector o2w, global::UtinniCore.Swg.Math.Vector pointInSpace)
            {
                var __arg0 = ReferenceEquals(o2w, null) ? global::System.IntPtr.Zero : o2w.__Instance;
                var __arg1 = ReferenceEquals(pointInSpace, null) ? global::System.IntPtr.Zero : pointInSpace.__Instance;
                var __ret = new global::UtinniCore.Swg.Math.Vector.__Internal();
                __Internal.RotateO2w(__Instance, new IntPtr(&__ret), __arg0, __arg1);
                return global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
            }

            public void Move(global::UtinniCore.Swg.Math.Vector vector)
            {
                if (ReferenceEquals(vector, null))
                    throw new global::System.ArgumentNullException("vector", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = vector.__Instance;
                __Internal.Move(__Instance, __arg0);
            }

            public void AddToWorld()
            {
                __Internal.AddToWorld(__Instance);
            }

            public void RemoveFromWorld()
            {
                __Internal.RemoveFromWorld(__Instance);
            }

            public void SetAppearance(global::UtinniCore.Utinni.Appearance appearance)
            {
                var __arg0 = ReferenceEquals(appearance, null) ? global::System.IntPtr.Zero : appearance.__Instance;
                __Internal.SetAppearance(__Instance, __arg0);
            }

            public void AddNotification(uint notification, bool allowWhenInWorld)
            {
                __Internal.AddNotification(__Instance, notification, allowWhenInWorld);
            }

            public void RemoveNotification(uint notification, bool allowWhenInWorld)
            {
                __Internal.RemoveNotification(__Instance, notification, allowWhenInWorld);
            }

            public void SetObjectToWorldDirty(bool isDirty)
            {
                __Internal.SetObjectToWorldDirty(__Instance, isDirty);
            }

            public void PositionAndRotationChanged(bool dueToParentChange, global::UtinniCore.Swg.Math.Vector oldPosition)
            {
                if (ReferenceEquals(oldPosition, null))
                    throw new global::System.ArgumentNullException("oldPosition", "Cannot be null because it is a C++ reference (&).");
                var __arg1 = oldPosition.__Instance;
                __Internal.PositionAndRotationChanged(__Instance, dueToParentChange, __arg1);
            }

            public static global::UtinniCore.Utinni.Object GetObjectById(uint networkIdPointer)
            {
                var __ret = __Internal.GetObjectById(networkIdPointer);
                global::UtinniCore.Utinni.Object __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(__ret);
                return __result0;
            }

            public uint Vtbl
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->vtbl;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->vtbl = value;
                }
            }

            public uint Unk01
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->unk01;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->unk01 = value;
                }
            }

            public uint Unk02
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->unk02;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->unk02 = value;
                }
            }

            public uint Unk03
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->unk03;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->unk03 = value;
                }
            }

            public global::UtinniCore.Utinni.ObjectTemplate ObjectTemplate
            {
                get
                {
                    global::UtinniCore.Utinni.ObjectTemplate __result0;
                    if (((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->objectTemplate == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.ObjectTemplate.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->objectTemplate))
                        __result0 = (global::UtinniCore.Utinni.ObjectTemplate) global::UtinniCore.Utinni.ObjectTemplate.NativeToManagedMap[((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->objectTemplate];
                    else __result0 = global::UtinniCore.Utinni.ObjectTemplate.__CreateInstance(((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->objectTemplate);
                    return __result0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->objectTemplate = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                }
            }

            public uint Unk04
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->unk04;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->unk04 = value;
                }
            }

            public sbyte* Name
            {
                get
                {
                    return (sbyte*) ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->name;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->name = (global::System.IntPtr) value;
                }
            }

            public long NetworkId
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->networkId;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->networkId = value;
                }
            }

            public global::UtinniCore.Utinni.Appearance Appearance
            {
                get
                {
                    global::UtinniCore.Utinni.Appearance __result0;
                    if (((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->appearance == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Appearance.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->appearance))
                        __result0 = (global::UtinniCore.Utinni.Appearance) global::UtinniCore.Utinni.Appearance.NativeToManagedMap[((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->appearance];
                    else __result0 = global::UtinniCore.Utinni.Appearance.__CreateInstance(((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->appearance);
                    return __result0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->appearance = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                }
            }

            public global::UtinniCore.Utinni.Controller Controller
            {
                get
                {
                    global::UtinniCore.Utinni.Controller __result0;
                    if (((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->controller == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Controller.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->controller))
                        __result0 = (global::UtinniCore.Utinni.Controller) global::UtinniCore.Utinni.Controller.NativeToManagedMap[((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->controller];
                    else __result0 = global::UtinniCore.Utinni.Controller.__CreateInstance(((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->controller);
                    return __result0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->controller = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                }
            }

            public uint Unk07
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->unk07;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->unk07 = value;
                }
            }

            public global::UtinniCore.Utinni.Object ParentObject
            {
                get
                {
                    global::UtinniCore.Utinni.Object __result0;
                    if (((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->parentObject == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->parentObject))
                        __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->parentObject];
                    else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->parentObject);
                    return __result0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->parentObject = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                }
            }

            public uint Unk08
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->unk08;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->unk08 = value;
                }
            }

            public uint DpvsObjects
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->dpvsObjects;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->dpvsObjects = value;
                }
            }

            public int Rotations
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->rotations;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->rotations = value;
                }
            }

            public global::UtinniCore.Swg.Math.Vector Scale
            {
                get
                {
                    return global::UtinniCore.Swg.Math.Vector.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->scale));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->scale = *(global::UtinniCore.Swg.Math.Vector.__Internal*) value.__Instance;
                }
            }

            public global::UtinniCore.Swg.Math.Transform ObjectToParent
            {
                get
                {
                    return global::UtinniCore.Swg.Math.Transform.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->objectToParent));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->objectToParent = *(global::UtinniCore.Swg.Math.Transform.__Internal*) value.__Instance;
                }
            }

            public global::UtinniCore.Swg.Math.Transform ObjectToWorld
            {
                get
                {
                    global::UtinniCore.Swg.Math.Transform __result0;
                    if (((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->objectToWorld == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Swg.Math.Transform.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->objectToWorld))
                        __result0 = (global::UtinniCore.Swg.Math.Transform) global::UtinniCore.Swg.Math.Transform.NativeToManagedMap[((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->objectToWorld];
                    else __result0 = global::UtinniCore.Swg.Math.Transform.__CreateInstance(((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->objectToWorld);
                    return __result0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->objectToWorld = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                }
            }

            public uint Unk09
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->unk09;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->unk09 = value;
                }
            }

            public uint Container
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->container;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->container = value;
                }
            }

            public uint CollisionProperty
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->CollisionProperty;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->CollisionProperty = value;
                }
            }

            public uint SpatialSubdivisionHandle
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->SpatialSubdivisionHandle;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->SpatialSubdivisionHandle = value;
                }
            }

            public byte Unk10
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->unk10;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->unk10 = value;
                }
            }

            public byte Unk11
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->unk11;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->unk11 = value;
                }
            }

            public byte Unk12
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->unk12;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->unk12 = value;
                }
            }

            public byte Unk13
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->unk13;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->unk13 = value;
                }
            }

            public uint Unk14
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->unk14;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->unk14 = value;
                }
            }

            public uint ContainedBy
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Object.__Internal*) __Instance)->containedBy;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Object.__Internal*)__Instance)->containedBy = value;
                }
            }

            public static global::UtinniCore.Utinni.Object Ctor
            {
                get
                {
                    var __ret = __Internal.Ctor();
                    global::UtinniCore.Utinni.Object __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(__ret);
                    return __result0;
                }
            }

            public bool IsActive
            {
                get
                {
                    var __ret = __Internal.IsActive(__Instance);
                    return __ret;
                }
            }

            public global::UtinniCore.Swg.Math.Transform Transform
            {
                get
                {
                    var __ret = __Internal.GetTransform(__Instance);
                    global::UtinniCore.Swg.Math.Transform __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Swg.Math.Transform.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Swg.Math.Transform) global::UtinniCore.Swg.Math.Transform.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Swg.Math.Transform.__CreateInstance(__ret);
                    return __result0;
                }
            }

            public global::UtinniCore.Swg.Math.Transform TransformO2w
            {
                get
                {
                    var __ret = __Internal.GetTransformO2w(__Instance);
                    global::UtinniCore.Swg.Math.Transform __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Swg.Math.Transform.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Swg.Math.Transform) global::UtinniCore.Swg.Math.Transform.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Swg.Math.Transform.__CreateInstance(__ret);
                    return __result0;
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is a C++ reference (&).");
                    var __arg0 = value.__Instance;
                    __Internal.SetTransformO2w(__Instance, __arg0);
                }
            }

            public global::UtinniCore.Utinni.CellProperty ParentCell
            {
                get
                {
                    var __ret = __Internal.GetParentCell(__Instance);
                    global::UtinniCore.Utinni.CellProperty __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.CellProperty.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.CellProperty) global::UtinniCore.Utinni.CellProperty.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.CellProperty.__CreateInstance(__ret);
                    return __result0;
                }
            }

            public global::UtinniCore.Utinni.ClientObject ClientObject
            {
                get
                {
                    var __ret = __Internal.GetClientObject(__Instance);
                    global::UtinniCore.Utinni.ClientObject __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.ClientObject.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.ClientObject) global::UtinniCore.Utinni.ClientObject.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.ClientObject.__CreateInstance(__ret);
                    return __result0;
                }
            }

            public string TemplateFilename
            {
                get
                {
                    var __ret = __Internal.GetTemplateFilename(__Instance);
                    if (__ret == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) __ret;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                }
            }

            public string AppearanceFilename
            {
                get
                {
                    var __ret = __Internal.GetAppearanceFilename(__Instance);
                    if (__ret == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) __ret;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                }
            }
        }

        public unsafe partial class AutoVariableBase : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 4)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0AutoVariableBase@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.AutoVariableBase> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.AutoVariableBase>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.AutoVariableBase __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.AutoVariableBase(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.AutoVariableBase __CreateInstance(global::UtinniCore.Utinni.AutoVariableBase.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.AutoVariableBase(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.AutoVariableBase.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.AutoVariableBase.__Internal));
                *(global::UtinniCore.Utinni.AutoVariableBase.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private AutoVariableBase(global::UtinniCore.Utinni.AutoVariableBase.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected AutoVariableBase(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public AutoVariableBase()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.AutoVariableBase.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public AutoVariableBase(global::UtinniCore.Utinni.AutoVariableBase _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.AutoVariableBase.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.AutoVariableBase.__Internal*) __Instance) = *((global::UtinniCore.Utinni.AutoVariableBase.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.AutoVariableBase __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public uint Vtbl
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AutoVariableBase.__Internal*) __Instance)->vtbl;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AutoVariableBase.__Internal*)__Instance)->vtbl = value;
                }
            }
        }

        public unsafe partial class AutoDeltaVariableBase : global::UtinniCore.Utinni.AutoVariableBase, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 12)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal ushort index;

                [FieldOffset(8)]
                internal uint parent;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0AutoDeltaVariableBase@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            internal static new global::UtinniCore.Utinni.AutoDeltaVariableBase __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.AutoDeltaVariableBase(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.AutoDeltaVariableBase __CreateInstance(global::UtinniCore.Utinni.AutoDeltaVariableBase.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.AutoDeltaVariableBase(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.AutoDeltaVariableBase.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.AutoDeltaVariableBase.__Internal));
                *(global::UtinniCore.Utinni.AutoDeltaVariableBase.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private AutoDeltaVariableBase(global::UtinniCore.Utinni.AutoDeltaVariableBase.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected AutoDeltaVariableBase(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public AutoDeltaVariableBase()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.AutoDeltaVariableBase.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public AutoDeltaVariableBase(global::UtinniCore.Utinni.AutoDeltaVariableBase _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.AutoDeltaVariableBase.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.AutoDeltaVariableBase.__Internal*) __Instance) = *((global::UtinniCore.Utinni.AutoDeltaVariableBase.__Internal*) _0.__Instance);
            }

            public ushort Index
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AutoDeltaVariableBase.__Internal*) __Instance)->index;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AutoDeltaVariableBase.__Internal*)__Instance)->index = value;
                }
            }

            public uint Parent
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AutoDeltaVariableBase.__Internal*) __Instance)->parent;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AutoDeltaVariableBase.__Internal*)__Instance)->parent = value;
                }
            }
        }

        public unsafe partial class AutoDeltaByteStream : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 32)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint unk01;

                [FieldOffset(4)]
                internal uint unk02;

                [FieldOffset(8)]
                internal uint unk03;

                [FieldOffset(12)]
                internal uint unk04;

                [FieldOffset(16)]
                internal uint unk05;

                [FieldOffset(20)]
                internal uint unk06;

                [FieldOffset(24)]
                internal uint unk07;

                [FieldOffset(28)]
                internal uint unk08;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0AutoDeltaByteStream@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.AutoDeltaByteStream> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.AutoDeltaByteStream>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.AutoDeltaByteStream __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.AutoDeltaByteStream(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.AutoDeltaByteStream __CreateInstance(global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.AutoDeltaByteStream(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal));
                *(global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private AutoDeltaByteStream(global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected AutoDeltaByteStream(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public AutoDeltaByteStream()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public AutoDeltaByteStream(global::UtinniCore.Utinni.AutoDeltaByteStream _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) __Instance) = *((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.AutoDeltaByteStream __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public uint Unk01
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) __Instance)->unk01;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*)__Instance)->unk01 = value;
                }
            }

            public uint Unk02
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) __Instance)->unk02;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*)__Instance)->unk02 = value;
                }
            }

            public uint Unk03
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) __Instance)->unk03;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*)__Instance)->unk03 = value;
                }
            }

            public uint Unk04
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) __Instance)->unk04;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*)__Instance)->unk04 = value;
                }
            }

            public uint Unk05
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) __Instance)->unk05;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*)__Instance)->unk05 = value;
                }
            }

            public uint Unk06
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) __Instance)->unk06;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*)__Instance)->unk06 = value;
                }
            }

            public uint Unk07
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) __Instance)->unk07;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*)__Instance)->unk07 = value;
                }
            }

            public uint Unk08
            {
                get
                {
                    return ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) __Instance)->unk08;
                }

                set
                {
                    ((global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*)__Instance)->unk08 = value;
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class Network : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Network@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getObjectById@Network@utinni@@SAPAVObject@2@AB_J@Z")]
                internal static extern global::System.IntPtr GetObjectById(long* id);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getCachedObjectById@Network@utinni@@SAPAVObject@2@I@Z")]
                internal static extern global::System.IntPtr GetCachedObjectById(uint pCachedNetworkId);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?cast@Network@utinni@@SA_JH@Z")]
                internal static extern long Cast(int id);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isServerId@Network@utinni@@SA_N_J@Z")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsServerId(long id);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getManger@Network@utinni@@SAIXZ")]
                internal static extern uint GetManger();
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Network> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Network>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.Network __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Network(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.Network __CreateInstance(global::UtinniCore.Utinni.Network.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Network(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.Network.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Network.__Internal));
                *(global::UtinniCore.Utinni.Network.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private Network(global::UtinniCore.Utinni.Network.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected Network(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public Network()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Network.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public Network(global::UtinniCore.Utinni.Network _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Network.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.Network.__Internal*) __Instance) = *((global::UtinniCore.Utinni.Network.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.Network __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public static global::UtinniCore.Utinni.Object GetObjectById(long id)
            {
                var __arg0 = &id;
                var __ret = __Internal.GetObjectById(__arg0);
                global::UtinniCore.Utinni.Object __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(__ret);
                return __result0;
            }

            public static global::UtinniCore.Utinni.Object GetCachedObjectById(uint pCachedNetworkId)
            {
                var __ret = __Internal.GetCachedObjectById(pCachedNetworkId);
                global::UtinniCore.Utinni.Object __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(__ret);
                return __result0;
            }

            public static long Cast(int id)
            {
                var __ret = __Internal.Cast(id);
                return __ret;
            }

            public static bool IsServerId(long id)
            {
                var __ret = __Internal.IsServerId(id);
                return __ret;
            }

            public static uint Manger
            {
                get
                {
                    var __ret = __Internal.GetManger();
                    return __ret;
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class ClientObject : global::UtinniCore.Utinni.Object, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 800)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal uint unk01;

                [FieldOffset(8)]
                internal uint unk02;

                [FieldOffset(12)]
                internal uint unk03;

                [FieldOffset(16)]
                internal global::System.IntPtr objectTemplate;

                [FieldOffset(20)]
                internal uint unk04;

                [FieldOffset(24)]
                internal global::System.IntPtr name;

                [FieldOffset(32)]
                internal long networkId;

                [FieldOffset(40)]
                internal global::System.IntPtr appearance;

                [FieldOffset(44)]
                internal global::System.IntPtr controller;

                [FieldOffset(48)]
                internal uint unk07;

                [FieldOffset(52)]
                internal global::System.IntPtr parentObject;

                [FieldOffset(56)]
                internal uint unk08;

                [FieldOffset(60)]
                internal uint dpvsObjects;

                [FieldOffset(64)]
                internal int rotations;

                [FieldOffset(68)]
                internal global::UtinniCore.Swg.Math.Vector.__Internal scale;

                [FieldOffset(80)]
                internal global::UtinniCore.Swg.Math.Transform.__Internal objectToParent;

                [FieldOffset(128)]
                internal global::System.IntPtr objectToWorld;

                [FieldOffset(132)]
                internal uint unk09;

                [FieldOffset(136)]
                internal uint container;

                [FieldOffset(140)]
                internal uint CollisionProperty;

                [FieldOffset(144)]
                internal uint SpatialSubdivisionHandle;

                [FieldOffset(148)]
                internal byte unk10;

                [FieldOffset(149)]
                internal byte unk11;

                [FieldOffset(150)]
                internal byte unk12;

                [FieldOffset(151)]
                internal byte unk13;

                [FieldOffset(152)]
                internal uint unk14;

                [FieldOffset(156)]
                internal uint containedBy;

                [FieldOffset(160)]
                internal uint pArrangementDescriptor;

                [FieldOffset(164)]
                internal global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal unk011;

                [FieldOffset(196)]
                internal global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal unk021;

                [FieldOffset(228)]
                internal global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal unk031;

                [FieldOffset(260)]
                internal global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal unk041;

                [FieldOffset(292)]
                internal global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal unk05;

                [FieldOffset(324)]
                internal global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal unk06;

                [FieldOffset(356)]
                internal uint unk071;

                [FieldOffset(360)]
                internal byte unk081;

                [FieldOffset(361)]
                internal byte unk091;

                [FieldOffset(364)]
                internal uint unk101;

                [FieldOffset(368)]
                internal uint unk111;

                [FieldOffset(372)]
                internal uint unk121;

                [FieldOffset(376)]
                internal uint unk131;

                [FieldOffset(380)]
                internal uint unk141;

                [FieldOffset(384)]
                internal uint unk15;

                [FieldOffset(388)]
                internal uint unk16;

                [FieldOffset(392)]
                internal uint unk17;

                [FieldOffset(396)]
                internal global::UtinniCore.Utinni.AutoDeltaVariable.__Internalc__N_utinni_S_AutoDeltaVariable__I volume;

                [FieldOffset(416)]
                internal global::UtinniCore.Utinni.AutoDeltaVariableCallback.__Internal_Ptr name1;

                [FieldOffset(444)]
                internal global::UtinniCore.Utinni.AutoDeltaVariable.__Internalc__N_utinni_S_AutoDeltaVariable____N_utinni_S_StringId nameStringID;

                [FieldOffset(560)]
                internal global::UtinniCore.Utinni.AutoDeltaVariable.__Internalc__N_utinni_S_AutoDeltaVariable____N_utinni_S_StringId descriptionStringID;

                [FieldOffset(676)]
                internal global::UtinniCore.Utinni.AutoDeltaVariableCallback.__Internalc__N_utinni_S_AutoDeltaVariableCallback__f complexity;

                [FieldOffset(704)]
                internal global::UtinniCore.Utinni.AutoDeltaVariable.__Internalc__N_utinni_S_AutoDeltaVariable__I unk20;

                [FieldOffset(724)]
                internal global::UtinniCore.Utinni.AutoDeltaVariableCallback.__Internalc__N_utinni_S_AutoDeltaVariableCallback__I cashBalance;

                [FieldOffset(752)]
                internal global::UtinniCore.Utinni.AutoDeltaVariableCallback.__Internalc__N_utinni_S_AutoDeltaVariableCallback__I bankBalance;

                [FieldOffset(780)]
                internal byte isClientcached;

                [FieldOffset(784)]
                internal int uniqueID;

                [FieldOffset(788)]
                internal float unk21;

                [FieldOffset(792)]
                internal byte unk22;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0ClientObject@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0ClientObject@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??1ClientObject@utinni@@QAE@XZ")]
                internal static extern void dtor(global::System.IntPtr __instance, int delete);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setParentCell@ClientObject@utinni@@QAEXPAVCellProperty@2@@Z")]
                internal static extern void SetParentCell(global::System.IntPtr __instance, global::System.IntPtr pCell);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?beginBaselines@ClientObject@utinni@@QAEXXZ")]
                internal static extern void BeginBaselines(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?endBaselines@ClientObject@utinni@@QAEXXZ")]
                internal static extern void EndBaselines(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getGameObjectType@ClientObject@utinni@@QAEHXZ")]
                internal static extern int GetGameObjectType(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getGameObjectTypeStringIdKey@ClientObject@utinni@@QAEPBDXZ")]
                internal static extern global::System.IntPtr GetGameObjectTypeStringIdKey(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getGameObjectTypeName@ClientObject@utinni@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")]
                internal static extern void GetGameObjectTypeName(global::System.IntPtr __instance, global::System.IntPtr @return);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getCreatureObject@ClientObject@utinni@@QAEIXZ")]
                internal static extern uint GetCreatureObject(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getShipObject@ClientObject@utinni@@QAEIXZ")]
                internal static extern uint GetShipObject(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getStaticObject@ClientObject@utinni@@QAEIXZ")]
                internal static extern uint GetStaticObject(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getTangibleObject@ClientObject@utinni@@QAEIXZ")]
                internal static extern uint GetTangibleObject(global::System.IntPtr __instance);
            }

            internal static new global::UtinniCore.Utinni.ClientObject __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.ClientObject(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.ClientObject __CreateInstance(global::UtinniCore.Utinni.ClientObject.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.ClientObject(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.ClientObject.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ClientObject.__Internal));
                global::UtinniCore.Utinni.ClientObject.__Internal.cctor(ret, new global::System.IntPtr(&native));
                return ret.ToPointer();
            }

            private ClientObject(global::UtinniCore.Utinni.ClientObject.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected ClientObject(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public ClientObject()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ClientObject.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public ClientObject(global::UtinniCore.Utinni.ClientObject _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.ClientObject.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(_0, null))
                    throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = _0.__Instance;
                __Internal.cctor(__Instance, __arg0);
            }

            public override void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.Object __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (disposing)
                    __Internal.dtor(__Instance, 0);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public void SetParentCell(global::UtinniCore.Utinni.CellProperty pCell)
            {
                var __arg0 = ReferenceEquals(pCell, null) ? global::System.IntPtr.Zero : pCell.__Instance;
                __Internal.SetParentCell(__Instance, __arg0);
            }

            public void BeginBaselines()
            {
                __Internal.BeginBaselines(__Instance);
            }

            public void EndBaselines()
            {
                __Internal.EndBaselines(__Instance);
            }

            public uint PArrangementDescriptor
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->pArrangementDescriptor;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->pArrangementDescriptor = value;
                }
            }

            public global::UtinniCore.Utinni.AutoDeltaByteStream Unk01
            {
                get
                {
                    return global::UtinniCore.Utinni.AutoDeltaByteStream.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk011));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk011 = *(global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) value.__Instance;
                }
            }

            public global::UtinniCore.Utinni.AutoDeltaByteStream Unk02
            {
                get
                {
                    return global::UtinniCore.Utinni.AutoDeltaByteStream.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk021));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk021 = *(global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) value.__Instance;
                }
            }

            public global::UtinniCore.Utinni.AutoDeltaByteStream Unk03
            {
                get
                {
                    return global::UtinniCore.Utinni.AutoDeltaByteStream.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk031));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk031 = *(global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) value.__Instance;
                }
            }

            public global::UtinniCore.Utinni.AutoDeltaByteStream Unk04
            {
                get
                {
                    return global::UtinniCore.Utinni.AutoDeltaByteStream.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk041));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk041 = *(global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) value.__Instance;
                }
            }

            public global::UtinniCore.Utinni.AutoDeltaByteStream Unk05
            {
                get
                {
                    return global::UtinniCore.Utinni.AutoDeltaByteStream.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk05));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk05 = *(global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) value.__Instance;
                }
            }

            public global::UtinniCore.Utinni.AutoDeltaByteStream Unk06
            {
                get
                {
                    return global::UtinniCore.Utinni.AutoDeltaByteStream.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk06));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk06 = *(global::UtinniCore.Utinni.AutoDeltaByteStream.__Internal*) value.__Instance;
                }
            }

            public uint Unk07
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk071;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk071 = value;
                }
            }

            public bool Unk08
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk081 != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk081 = (byte) (value ? 1 : 0);
                }
            }

            public bool Unk09
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk091 != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk091 = (byte) (value ? 1 : 0);
                }
            }

            public uint Unk10
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk101;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk101 = value;
                }
            }

            public uint Unk11
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk111;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk111 = value;
                }
            }

            public uint Unk12
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk121;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk121 = value;
                }
            }

            public uint Unk13
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk131;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk131 = value;
                }
            }

            public uint Unk14
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk141;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk141 = value;
                }
            }

            public uint Unk15
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk15;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk15 = value;
                }
            }

            public uint Unk16
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk16;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk16 = value;
                }
            }

            public uint Unk17
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk17;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk17 = value;
                }
            }

            public bool IsClientcached
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->isClientcached != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->isClientcached = (byte) (value ? 1 : 0);
                }
            }

            public int UniqueID
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->uniqueID;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->uniqueID = value;
                }
            }

            public float Unk21
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk21;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk21 = value;
                }
            }

            public bool Unk22
            {
                get
                {
                    return ((global::UtinniCore.Utinni.ClientObject.__Internal*) __Instance)->unk22 != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.ClientObject.__Internal*)__Instance)->unk22 = (byte) (value ? 1 : 0);
                }
            }

            public int GameObjectType
            {
                get
                {
                    var __ret = __Internal.GetGameObjectType(__Instance);
                    return __ret;
                }
            }

            public string GameObjectTypeStringIdKey
            {
                get
                {
                    var __ret = __Internal.GetGameObjectTypeStringIdKey(__Instance);
                    if (__ret == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) __ret;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                }
            }

            public string GameObjectTypeName
            {
                get
                {
                    var __ret = new global::Std.BasicString.__Internalc__N_std_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C();
                    __Internal.GetGameObjectTypeName(__Instance, new IntPtr(&__ret));
                    var __basicStringRet0 = global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>.__CreateInstance(new global::System.IntPtr(&__ret));
                    var __retString0 = global::Std.BasicStringExtensions.Data(__basicStringRet0);
                    __basicStringRet0.Dispose();
                    return __retString0;
                }
            }

            public uint CreatureObject
            {
                get
                {
                    var __ret = __Internal.GetCreatureObject(__Instance);
                    return __ret;
                }
            }

            public uint ShipObject
            {
                get
                {
                    var __ret = __Internal.GetShipObject(__Instance);
                    return __ret;
                }
            }

            public uint StaticObject
            {
                get
                {
                    var __ret = __Internal.GetStaticObject(__Instance);
                    return __ret;
                }
            }

            public uint TangibleObject
            {
                get
                {
                    var __ret = __Internal.GetTangibleObject(__Instance);
                    return __ret;
                }
            }
        }
    }

    namespace Utinni
    {
        namespace CreatureObject
        {
            public unsafe partial class creature_object
            {
                public partial struct __Internal
                {
                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?addOnTargetCallback@creatureObject@utinni@@YAXP6AXPAVObject@2@@Z@Z")]
                    internal static extern void AddOnTargetCallback(global::System.IntPtr func);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?detour@creatureObject@utinni@@YAXXZ")]
                    internal static extern void Detour();
                }

                public static void AddOnTargetCallback(global::UtinniCore.Delegates.Action_IntPtr_C func)
                {
                    var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                    __Internal.AddOnTargetCallback(__arg0);
                }

                public static void Detour()
                {
                    __Internal.Detour();
                }
            }
        }
    }

    namespace Utinni
    {
        namespace PlayerObject
        {
            public unsafe partial class player_object
            {
                public partial struct __Internal
                {
                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?togglePlayerAppearance@playerObject@utinni@@YAXXZ")]
                    internal static extern void TogglePlayerAppearance();

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?getSpeed@playerObject@utinni@@YAMXZ")]
                    internal static extern float GetSpeed();

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?setSpeed@playerObject@utinni@@YAXM@Z")]
                    internal static extern void SetSpeed(float value);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?teleport@playerObject@utinni@@YAXMMM@Z")]
                    internal static extern void Teleport(float x, float y, float z);
                }

                public static void TogglePlayerAppearance()
                {
                    __Internal.TogglePlayerAppearance();
                }

                public static float GetSpeed()
                {
                    var __ret = __Internal.GetSpeed();
                    return __ret;
                }

                public static void SetSpeed(float value)
                {
                    __Internal.SetSpeed(value);
                }

                public static void Teleport(float x, float y, float z)
                {
                    __Internal.Teleport(x, y, z);
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class Scene : global::UtinniCore.Utinni.IoWin, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 28)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal global::System.IntPtr name;

                [FieldOffset(8)]
                internal global::System.IntPtr ioWin;

                [FieldOffset(12)]
                internal uint unk01;

                [FieldOffset(16)]
                internal uint unk02;

                [FieldOffset(20)]
                internal uint unk03;

                [FieldOffset(24)]
                internal uint unk04;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Scene@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            internal static new global::UtinniCore.Utinni.Scene __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Scene(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.Scene __CreateInstance(global::UtinniCore.Utinni.Scene.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Scene(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.Scene.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Scene.__Internal));
                *(global::UtinniCore.Utinni.Scene.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private Scene(global::UtinniCore.Utinni.Scene.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected Scene(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public Scene()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Scene.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public Scene(global::UtinniCore.Utinni.Scene _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Scene.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.Scene.__Internal*) __Instance) = *((global::UtinniCore.Utinni.Scene.__Internal*) _0.__Instance);
            }

            public uint Unk01
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Scene.__Internal*) __Instance)->unk01;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Scene.__Internal*)__Instance)->unk01 = value;
                }
            }

            public uint Unk02
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Scene.__Internal*) __Instance)->unk02;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Scene.__Internal*)__Instance)->unk02 = value;
                }
            }

            public uint Unk03
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Scene.__Internal*) __Instance)->unk03;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Scene.__Internal*)__Instance)->unk03 = value;
                }
            }

            public uint Unk04
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Scene.__Internal*) __Instance)->unk04;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Scene.__Internal*)__Instance)->unk04 = value;
                }
            }
        }

        public unsafe partial class NetworkScene : global::UtinniCore.Utinni.Scene, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 76)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal global::System.IntPtr name;

                [FieldOffset(8)]
                internal global::System.IntPtr ioWin;

                [FieldOffset(12)]
                internal uint unk01;

                [FieldOffset(16)]
                internal uint unk02;

                [FieldOffset(20)]
                internal uint unk03;

                [FieldOffset(24)]
                internal uint unk04;

                [FieldOffset(28)]
                internal global::System.IntPtr playerObject;

                [FieldOffset(32)]
                internal uint unk011;

                [FieldOffset(36)]
                internal uint unk021;

                [FieldOffset(40)]
                internal uint unk031;

                [FieldOffset(44)]
                internal uint unk041;

                [FieldOffset(48)]
                internal uint unk05;

                [FieldOffset(52)]
                internal uint unk06;

                [FieldOffset(56)]
                internal uint unk07;

                [FieldOffset(60)]
                internal uint unk08;

                [FieldOffset(64)]
                internal uint unk09;

                [FieldOffset(68)]
                internal uint unk10;

                [FieldOffset(72)]
                internal uint unk11;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0NetworkScene@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            internal static new global::UtinniCore.Utinni.NetworkScene __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.NetworkScene(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.NetworkScene __CreateInstance(global::UtinniCore.Utinni.NetworkScene.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.NetworkScene(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.NetworkScene.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.NetworkScene.__Internal));
                *(global::UtinniCore.Utinni.NetworkScene.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private NetworkScene(global::UtinniCore.Utinni.NetworkScene.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected NetworkScene(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public NetworkScene()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.NetworkScene.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public NetworkScene(global::UtinniCore.Utinni.NetworkScene _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.NetworkScene.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance) = *((global::UtinniCore.Utinni.NetworkScene.__Internal*) _0.__Instance);
            }

            public global::UtinniCore.Utinni.Object PlayerObject
            {
                get
                {
                    global::UtinniCore.Utinni.Object __result0;
                    if (((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->playerObject == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->playerObject))
                        __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->playerObject];
                    else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->playerObject);
                    return __result0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.NetworkScene.__Internal*)__Instance)->playerObject = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                }
            }

            public uint Unk01
            {
                get
                {
                    return ((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->unk011;
                }

                set
                {
                    ((global::UtinniCore.Utinni.NetworkScene.__Internal*)__Instance)->unk011 = value;
                }
            }

            public uint Unk02
            {
                get
                {
                    return ((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->unk021;
                }

                set
                {
                    ((global::UtinniCore.Utinni.NetworkScene.__Internal*)__Instance)->unk021 = value;
                }
            }

            public uint Unk03
            {
                get
                {
                    return ((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->unk031;
                }

                set
                {
                    ((global::UtinniCore.Utinni.NetworkScene.__Internal*)__Instance)->unk031 = value;
                }
            }

            public uint Unk04
            {
                get
                {
                    return ((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->unk041;
                }

                set
                {
                    ((global::UtinniCore.Utinni.NetworkScene.__Internal*)__Instance)->unk041 = value;
                }
            }

            public uint Unk05
            {
                get
                {
                    return ((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->unk05;
                }

                set
                {
                    ((global::UtinniCore.Utinni.NetworkScene.__Internal*)__Instance)->unk05 = value;
                }
            }

            public uint Unk06
            {
                get
                {
                    return ((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->unk06;
                }

                set
                {
                    ((global::UtinniCore.Utinni.NetworkScene.__Internal*)__Instance)->unk06 = value;
                }
            }

            public uint Unk07
            {
                get
                {
                    return ((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->unk07;
                }

                set
                {
                    ((global::UtinniCore.Utinni.NetworkScene.__Internal*)__Instance)->unk07 = value;
                }
            }

            public uint Unk08
            {
                get
                {
                    return ((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->unk08;
                }

                set
                {
                    ((global::UtinniCore.Utinni.NetworkScene.__Internal*)__Instance)->unk08 = value;
                }
            }

            public uint Unk09
            {
                get
                {
                    return ((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->unk09;
                }

                set
                {
                    ((global::UtinniCore.Utinni.NetworkScene.__Internal*)__Instance)->unk09 = value;
                }
            }

            public uint Unk10
            {
                get
                {
                    return ((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->unk10;
                }

                set
                {
                    ((global::UtinniCore.Utinni.NetworkScene.__Internal*)__Instance)->unk10 = value;
                }
            }

            public uint Unk11
            {
                get
                {
                    return ((global::UtinniCore.Utinni.NetworkScene.__Internal*) __Instance)->unk11;
                }

                set
                {
                    ((global::UtinniCore.Utinni.NetworkScene.__Internal*)__Instance)->unk11 = value;
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class Camera : global::UtinniCore.Utinni.Object, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 520)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal uint unk01;

                [FieldOffset(8)]
                internal uint unk02;

                [FieldOffset(12)]
                internal uint unk03;

                [FieldOffset(16)]
                internal global::System.IntPtr objectTemplate;

                [FieldOffset(20)]
                internal uint unk04;

                [FieldOffset(24)]
                internal global::System.IntPtr name;

                [FieldOffset(32)]
                internal long networkId;

                [FieldOffset(40)]
                internal global::System.IntPtr appearance;

                [FieldOffset(44)]
                internal global::System.IntPtr controller;

                [FieldOffset(48)]
                internal uint unk07;

                [FieldOffset(52)]
                internal global::System.IntPtr parentObject;

                [FieldOffset(56)]
                internal uint unk08;

                [FieldOffset(60)]
                internal uint dpvsObjects;

                [FieldOffset(64)]
                internal int rotations;

                [FieldOffset(68)]
                internal global::UtinniCore.Swg.Math.Vector.__Internal scale;

                [FieldOffset(80)]
                internal global::UtinniCore.Swg.Math.Transform.__Internal objectToParent;

                [FieldOffset(128)]
                internal global::System.IntPtr objectToWorld;

                [FieldOffset(132)]
                internal uint unk09;

                [FieldOffset(136)]
                internal uint container;

                [FieldOffset(140)]
                internal uint CollisionProperty;

                [FieldOffset(144)]
                internal uint SpatialSubdivisionHandle;

                [FieldOffset(148)]
                internal byte unk10;

                [FieldOffset(149)]
                internal byte unk11;

                [FieldOffset(150)]
                internal byte unk12;

                [FieldOffset(151)]
                internal byte unk13;

                [FieldOffset(152)]
                internal uint unk14;

                [FieldOffset(156)]
                internal uint containedBy;

                [FieldOffset(160)]
                internal global::UtinniCore.Swg.Math.Matrix4x4.__Internal projectionMatrix;

                [FieldOffset(224)]
                internal int viewportX;

                [FieldOffset(228)]
                internal int viewportY;

                [FieldOffset(232)]
                internal int viewportWidth;

                [FieldOffset(236)]
                internal int viewportHeight;

                [FieldOffset(240)]
                internal float oneOverViewportWidth;

                [FieldOffset(244)]
                internal float oneOverViewportHeight;

                [FieldOffset(248)]
                internal float nearPlane;

                [FieldOffset(252)]
                internal float farPlane;

                [FieldOffset(256)]
                internal float horizontalFieldOfView;

                [FieldOffset(260)]
                internal float verticalFieldOfView;

                [FieldOffset(264)]
                internal float tanOfHalfHorizontalFov;

                [FieldOffset(268)]
                internal float tanOfHalfVerticalFov;

                [FieldOffset(272)]
                internal fixed byte frustumVertex[96];

                [FieldOffset(368)]
                internal global::UtinniCore.Swg.Math.Volume.__Internal frustumVolume;

                [FieldOffset(376)]
                internal fixed byte frustumVertex_w[96];

                [FieldOffset(472)]
                internal global::UtinniCore.Swg.Math.Volume.__Internal frustumVolume_w;

                [FieldOffset(480)]
                internal global::UtinniCore.Utinni.Camera.ProjectionModes projectionMode;

                [FieldOffset(484)]
                internal float left;

                [FieldOffset(488)]
                internal float top;

                [FieldOffset(492)]
                internal float right;

                [FieldOffset(496)]
                internal float bottom;

                [FieldOffset(500)]
                internal byte isUnderWater;

                [FieldOffset(504)]
                internal uint unk011;

                [FieldOffset(508)]
                internal int numberOfObjectsAdded;

                [FieldOffset(512)]
                internal global::System.IntPtr unk021;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Camera@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Camera@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getViewport@Camera@utinni@@QAEXAAH000@Z")]
                internal static extern void GetViewport(global::System.IntPtr __instance, int* viewPortX0, int* viewPortY0, int* viewPortX1, int* viewPortY1);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getViewport@Camera@utinni@@QAEXAAM000@Z")]
                internal static extern void GetViewport_1(global::System.IntPtr __instance, float* viewPortX0, float* viewPortY0, float* viewPortX1, float* viewPortY1);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setViewport@Camera@utinni@@QAEXHHHH@Z")]
                internal static extern void SetViewport(global::System.IntPtr __instance, int x0, int y0, int width, int height);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setNearPlane@Camera@utinni@@QAEXM@Z")]
                internal static extern void SetNearPlane(global::System.IntPtr __instance, float nearPlane);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setFarPlane@Camera@utinni@@QAEXM@Z")]
                internal static extern void SetFarPlane(global::System.IntPtr __instance, float farPlane);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setHorizontalFieldOfView@Camera@utinni@@QAEXM@Z")]
                internal static extern void SetHorizontalFieldOfView(global::System.IntPtr __instance, float fieldOfView);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?reverseProjectInViewportSpace@Camera@utinni@@QAE?AUVector@math@swg@@HH@Z")]
                internal static extern void ReverseProjectInViewportSpace(global::System.IntPtr __instance, global::System.IntPtr @return, int x, int y);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?reverseProjectInViewportSpace@Camera@utinni@@QAE?AUVector@math@swg@@MMM@Z")]
                internal static extern void ReverseProjectInViewportSpace(global::System.IntPtr __instance, global::System.IntPtr @return, float viewPortX, float viewPortY, float cameraZ);
            }

            public enum ProjectionModes
            {
                PmPerspective = 0,
                PmParallel = 1
            }

            public enum Modes
            {
                CmFreeChase = 2,
                CmFree = 5
            }

            internal static new global::UtinniCore.Utinni.Camera __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Camera(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.Camera __CreateInstance(global::UtinniCore.Utinni.Camera.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Camera(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.Camera.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Camera.__Internal));
                global::UtinniCore.Utinni.Camera.__Internal.cctor(ret, new global::System.IntPtr(&native));
                return ret.ToPointer();
            }

            private Camera(global::UtinniCore.Utinni.Camera.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected Camera(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public Camera(global::UtinniCore.Utinni.Camera _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Camera.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(_0, null))
                    throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = _0.__Instance;
                __Internal.cctor(__Instance, __arg0);
            }

            public Camera()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Camera.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public void GetViewport(ref int viewPortX0, ref int viewPortY0, ref int viewPortX1, ref int viewPortY1)
            {
                fixed (int* __viewPortX00 = &viewPortX0)
                {
                    var __arg0 = __viewPortX00;
                    fixed (int* __viewPortY01 = &viewPortY0)
                    {
                        var __arg1 = __viewPortY01;
                        fixed (int* __viewPortX12 = &viewPortX1)
                        {
                            var __arg2 = __viewPortX12;
                            fixed (int* __viewPortY13 = &viewPortY1)
                            {
                                var __arg3 = __viewPortY13;
                                __Internal.GetViewport(__Instance, __arg0, __arg1, __arg2, __arg3);
                            }
                        }
                    }
                }
            }

            public void GetViewport(ref float viewPortX0, ref float viewPortY0, ref float viewPortX1, ref float viewPortY1)
            {
                fixed (float* __viewPortX00 = &viewPortX0)
                {
                    var __arg0 = __viewPortX00;
                    fixed (float* __viewPortY01 = &viewPortY0)
                    {
                        var __arg1 = __viewPortY01;
                        fixed (float* __viewPortX12 = &viewPortX1)
                        {
                            var __arg2 = __viewPortX12;
                            fixed (float* __viewPortY13 = &viewPortY1)
                            {
                                var __arg3 = __viewPortY13;
                                __Internal.GetViewport_1(__Instance, __arg0, __arg1, __arg2, __arg3);
                            }
                        }
                    }
                }
            }

            public void SetViewport(int x0, int y0, int width, int height)
            {
                __Internal.SetViewport(__Instance, x0, y0, width, height);
            }

            public void SetNearPlane(float nearPlane)
            {
                __Internal.SetNearPlane(__Instance, nearPlane);
            }

            public void SetFarPlane(float farPlane)
            {
                __Internal.SetFarPlane(__Instance, farPlane);
            }

            public void SetHorizontalFieldOfView(float fieldOfView)
            {
                __Internal.SetHorizontalFieldOfView(__Instance, fieldOfView);
            }

            public global::UtinniCore.Swg.Math.Vector ReverseProjectInViewportSpace(int x, int y)
            {
                var __ret = new global::UtinniCore.Swg.Math.Vector.__Internal();
                __Internal.ReverseProjectInViewportSpace(__Instance, new IntPtr(&__ret), x, y);
                return global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
            }

            public global::UtinniCore.Swg.Math.Vector ReverseProjectInViewportSpace(float viewPortX, float viewPortY, float cameraZ)
            {
                var __ret = new global::UtinniCore.Swg.Math.Vector.__Internal();
                __Internal.ReverseProjectInViewportSpace(__Instance, new IntPtr(&__ret), viewPortX, viewPortY, cameraZ);
                return global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
            }

            public global::UtinniCore.Swg.Math.Matrix4x4 ProjectionMatrix
            {
                get
                {
                    return global::UtinniCore.Swg.Math.Matrix4x4.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->projectionMatrix));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->projectionMatrix = *(global::UtinniCore.Swg.Math.Matrix4x4.__Internal*) value.__Instance;
                }
            }

            public int ViewportX
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->viewportX;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->viewportX = value;
                }
            }

            public int ViewportY
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->viewportY;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->viewportY = value;
                }
            }

            public int ViewportWidth
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->viewportWidth;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->viewportWidth = value;
                }
            }

            public int ViewportHeight
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->viewportHeight;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->viewportHeight = value;
                }
            }

            public float OneOverViewportWidth
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->oneOverViewportWidth;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->oneOverViewportWidth = value;
                }
            }

            public float OneOverViewportHeight
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->oneOverViewportHeight;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->oneOverViewportHeight = value;
                }
            }

            public float NearPlane
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->nearPlane;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->nearPlane = value;
                }
            }

            public float FarPlane
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->farPlane;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->farPlane = value;
                }
            }

            public float HorizontalFieldOfView
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->horizontalFieldOfView;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->horizontalFieldOfView = value;
                }
            }

            public float VerticalFieldOfView
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->verticalFieldOfView;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->verticalFieldOfView = value;
                }
            }

            public float TanOfHalfHorizontalFov
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->tanOfHalfHorizontalFov;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->tanOfHalfHorizontalFov = value;
                }
            }

            public float TanOfHalfVerticalFov
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->tanOfHalfVerticalFov;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->tanOfHalfVerticalFov = value;
                }
            }

            public global::UtinniCore.Swg.Math.Vector[] FrustumVertex
            {
                get
                {
                    global::UtinniCore.Swg.Math.Vector[] __value = null;
                    if (((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->frustumVertex != null)
                    {
                        __value = new global::UtinniCore.Swg.Math.Vector[8];
                        for (int i = 0; i < 8; i++)
                            __value[i] = global::UtinniCore.Swg.Math.Vector.__CreateInstance(*((global::UtinniCore.Swg.Math.Vector.__Internal*)&(((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->frustumVertex[i * sizeof(global::UtinniCore.Swg.Math.Vector.__Internal)])));
                    }
                    return __value;
                }

                set
                {
                    if (value != null)
                    {
                        if (value.Length != 8)
                            throw new ArgumentOutOfRangeException("value", "The dimensions of the provided array don't match the required size.");
                        for (int i = 0; i < 8; i++)
                            *(global::UtinniCore.Swg.Math.Vector.__Internal*) &((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->frustumVertex[i * sizeof(global::UtinniCore.Swg.Math.Vector.__Internal)] = *(global::UtinniCore.Swg.Math.Vector.__Internal*)value[i].__Instance;
                    }
                }
            }

            public global::UtinniCore.Swg.Math.Volume FrustumVolume
            {
                get
                {
                    return global::UtinniCore.Swg.Math.Volume.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->frustumVolume));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->frustumVolume = *(global::UtinniCore.Swg.Math.Volume.__Internal*) value.__Instance;
                }
            }

            public global::UtinniCore.Swg.Math.Vector[] FrustumVertexW
            {
                get
                {
                    global::UtinniCore.Swg.Math.Vector[] __value = null;
                    if (((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->frustumVertex_w != null)
                    {
                        __value = new global::UtinniCore.Swg.Math.Vector[8];
                        for (int i = 0; i < 8; i++)
                            __value[i] = global::UtinniCore.Swg.Math.Vector.__CreateInstance(*((global::UtinniCore.Swg.Math.Vector.__Internal*)&(((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->frustumVertex_w[i * sizeof(global::UtinniCore.Swg.Math.Vector.__Internal)])));
                    }
                    return __value;
                }

                set
                {
                    if (value != null)
                    {
                        if (value.Length != 8)
                            throw new ArgumentOutOfRangeException("value", "The dimensions of the provided array don't match the required size.");
                        for (int i = 0; i < 8; i++)
                            *(global::UtinniCore.Swg.Math.Vector.__Internal*) &((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->frustumVertex_w[i * sizeof(global::UtinniCore.Swg.Math.Vector.__Internal)] = *(global::UtinniCore.Swg.Math.Vector.__Internal*)value[i].__Instance;
                    }
                }
            }

            public global::UtinniCore.Swg.Math.Volume FrustumVolumeW
            {
                get
                {
                    return global::UtinniCore.Swg.Math.Volume.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->frustumVolume_w));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->frustumVolume_w = *(global::UtinniCore.Swg.Math.Volume.__Internal*) value.__Instance;
                }
            }

            public global::UtinniCore.Utinni.Camera.ProjectionModes ProjectionMode
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->projectionMode;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->projectionMode = value;
                }
            }

            public float Left
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->left;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->left = value;
                }
            }

            public float Top
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->top;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->top = value;
                }
            }

            public float Right
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->right;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->right = value;
                }
            }

            public float Bottom
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->bottom;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->bottom = value;
                }
            }

            public bool IsUnderWater
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->isUnderWater != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->isUnderWater = (byte) (value ? 1 : 0);
                }
            }

            public uint Unk01
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->unk011;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->unk011 = value;
                }
            }

            public int NumberOfObjectsAdded
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->numberOfObjectsAdded;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->numberOfObjectsAdded = value;
                }
            }

            public uint* Unk02
            {
                get
                {
                    return (uint*) ((global::UtinniCore.Utinni.Camera.__Internal*) __Instance)->unk021;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Camera.__Internal*)__Instance)->unk021 = (global::System.IntPtr) value;
                }
            }
        }

        public unsafe partial class RenderWorldCamera : global::UtinniCore.Utinni.Camera, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 520)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal uint unk01;

                [FieldOffset(8)]
                internal uint unk02;

                [FieldOffset(12)]
                internal uint unk03;

                [FieldOffset(16)]
                internal global::System.IntPtr objectTemplate;

                [FieldOffset(20)]
                internal uint unk04;

                [FieldOffset(24)]
                internal global::System.IntPtr name;

                [FieldOffset(32)]
                internal long networkId;

                [FieldOffset(40)]
                internal global::System.IntPtr appearance;

                [FieldOffset(44)]
                internal global::System.IntPtr controller;

                [FieldOffset(48)]
                internal uint unk07;

                [FieldOffset(52)]
                internal global::System.IntPtr parentObject;

                [FieldOffset(56)]
                internal uint unk08;

                [FieldOffset(60)]
                internal uint dpvsObjects;

                [FieldOffset(64)]
                internal int rotations;

                [FieldOffset(68)]
                internal global::UtinniCore.Swg.Math.Vector.__Internal scale;

                [FieldOffset(80)]
                internal global::UtinniCore.Swg.Math.Transform.__Internal objectToParent;

                [FieldOffset(128)]
                internal global::System.IntPtr objectToWorld;

                [FieldOffset(132)]
                internal uint unk09;

                [FieldOffset(136)]
                internal uint container;

                [FieldOffset(140)]
                internal uint CollisionProperty;

                [FieldOffset(144)]
                internal uint SpatialSubdivisionHandle;

                [FieldOffset(148)]
                internal byte unk10;

                [FieldOffset(149)]
                internal byte unk11;

                [FieldOffset(150)]
                internal byte unk12;

                [FieldOffset(151)]
                internal byte unk13;

                [FieldOffset(152)]
                internal uint unk14;

                [FieldOffset(156)]
                internal uint containedBy;

                [FieldOffset(160)]
                internal global::UtinniCore.Swg.Math.Matrix4x4.__Internal projectionMatrix;

                [FieldOffset(224)]
                internal int viewportX;

                [FieldOffset(228)]
                internal int viewportY;

                [FieldOffset(232)]
                internal int viewportWidth;

                [FieldOffset(236)]
                internal int viewportHeight;

                [FieldOffset(240)]
                internal float oneOverViewportWidth;

                [FieldOffset(244)]
                internal float oneOverViewportHeight;

                [FieldOffset(248)]
                internal float nearPlane;

                [FieldOffset(252)]
                internal float farPlane;

                [FieldOffset(256)]
                internal float horizontalFieldOfView;

                [FieldOffset(260)]
                internal float verticalFieldOfView;

                [FieldOffset(264)]
                internal float tanOfHalfHorizontalFov;

                [FieldOffset(268)]
                internal float tanOfHalfVerticalFov;

                [FieldOffset(272)]
                internal fixed byte frustumVertex[96];

                [FieldOffset(368)]
                internal global::UtinniCore.Swg.Math.Volume.__Internal frustumVolume;

                [FieldOffset(376)]
                internal fixed byte frustumVertex_w[96];

                [FieldOffset(472)]
                internal global::UtinniCore.Swg.Math.Volume.__Internal frustumVolume_w;

                [FieldOffset(480)]
                internal global::UtinniCore.Utinni.Camera.ProjectionModes projectionMode;

                [FieldOffset(484)]
                internal float left;

                [FieldOffset(488)]
                internal float top;

                [FieldOffset(492)]
                internal float right;

                [FieldOffset(496)]
                internal float bottom;

                [FieldOffset(500)]
                internal byte isUnderWater;

                [FieldOffset(504)]
                internal uint unk011;

                [FieldOffset(508)]
                internal int numberOfObjectsAdded;

                [FieldOffset(512)]
                internal global::System.IntPtr unk021;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0RenderWorldCamera@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0RenderWorldCamera@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addExcludedObject@RenderWorldCamera@utinni@@SAXPAVObject@2@@Z")]
                internal static extern void AddExcludedObject(global::System.IntPtr obj);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?clearExcludedObjects@RenderWorldCamera@utinni@@SAXXZ")]
                internal static extern void ClearExcludedObjects();
            }

            internal static new global::UtinniCore.Utinni.RenderWorldCamera __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.RenderWorldCamera(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.RenderWorldCamera __CreateInstance(global::UtinniCore.Utinni.RenderWorldCamera.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.RenderWorldCamera(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.RenderWorldCamera.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.RenderWorldCamera.__Internal));
                global::UtinniCore.Utinni.RenderWorldCamera.__Internal.cctor(ret, new global::System.IntPtr(&native));
                return ret.ToPointer();
            }

            private RenderWorldCamera(global::UtinniCore.Utinni.RenderWorldCamera.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected RenderWorldCamera(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public RenderWorldCamera()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.RenderWorldCamera.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public RenderWorldCamera(global::UtinniCore.Utinni.RenderWorldCamera _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.RenderWorldCamera.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(_0, null))
                    throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = _0.__Instance;
                __Internal.cctor(__Instance, __arg0);
            }

            public static void AddExcludedObject(global::UtinniCore.Utinni.Object obj)
            {
                var __arg0 = ReferenceEquals(obj, null) ? global::System.IntPtr.Zero : obj.__Instance;
                __Internal.AddExcludedObject(__arg0);
            }

            public static void ClearExcludedObjects()
            {
                __Internal.ClearExcludedObjects();
            }
        }

        public unsafe partial class GameCamera : global::UtinniCore.Utinni.RenderWorldCamera, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 520)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal uint unk01;

                [FieldOffset(8)]
                internal uint unk02;

                [FieldOffset(12)]
                internal uint unk03;

                [FieldOffset(16)]
                internal global::System.IntPtr objectTemplate;

                [FieldOffset(20)]
                internal uint unk04;

                [FieldOffset(24)]
                internal global::System.IntPtr name;

                [FieldOffset(32)]
                internal long networkId;

                [FieldOffset(40)]
                internal global::System.IntPtr appearance;

                [FieldOffset(44)]
                internal global::System.IntPtr controller;

                [FieldOffset(48)]
                internal uint unk07;

                [FieldOffset(52)]
                internal global::System.IntPtr parentObject;

                [FieldOffset(56)]
                internal uint unk08;

                [FieldOffset(60)]
                internal uint dpvsObjects;

                [FieldOffset(64)]
                internal int rotations;

                [FieldOffset(68)]
                internal global::UtinniCore.Swg.Math.Vector.__Internal scale;

                [FieldOffset(80)]
                internal global::UtinniCore.Swg.Math.Transform.__Internal objectToParent;

                [FieldOffset(128)]
                internal global::System.IntPtr objectToWorld;

                [FieldOffset(132)]
                internal uint unk09;

                [FieldOffset(136)]
                internal uint container;

                [FieldOffset(140)]
                internal uint CollisionProperty;

                [FieldOffset(144)]
                internal uint SpatialSubdivisionHandle;

                [FieldOffset(148)]
                internal byte unk10;

                [FieldOffset(149)]
                internal byte unk11;

                [FieldOffset(150)]
                internal byte unk12;

                [FieldOffset(151)]
                internal byte unk13;

                [FieldOffset(152)]
                internal uint unk14;

                [FieldOffset(156)]
                internal uint containedBy;

                [FieldOffset(160)]
                internal global::UtinniCore.Swg.Math.Matrix4x4.__Internal projectionMatrix;

                [FieldOffset(224)]
                internal int viewportX;

                [FieldOffset(228)]
                internal int viewportY;

                [FieldOffset(232)]
                internal int viewportWidth;

                [FieldOffset(236)]
                internal int viewportHeight;

                [FieldOffset(240)]
                internal float oneOverViewportWidth;

                [FieldOffset(244)]
                internal float oneOverViewportHeight;

                [FieldOffset(248)]
                internal float nearPlane;

                [FieldOffset(252)]
                internal float farPlane;

                [FieldOffset(256)]
                internal float horizontalFieldOfView;

                [FieldOffset(260)]
                internal float verticalFieldOfView;

                [FieldOffset(264)]
                internal float tanOfHalfHorizontalFov;

                [FieldOffset(268)]
                internal float tanOfHalfVerticalFov;

                [FieldOffset(272)]
                internal fixed byte frustumVertex[96];

                [FieldOffset(368)]
                internal global::UtinniCore.Swg.Math.Volume.__Internal frustumVolume;

                [FieldOffset(376)]
                internal fixed byte frustumVertex_w[96];

                [FieldOffset(472)]
                internal global::UtinniCore.Swg.Math.Volume.__Internal frustumVolume_w;

                [FieldOffset(480)]
                internal global::UtinniCore.Utinni.Camera.ProjectionModes projectionMode;

                [FieldOffset(484)]
                internal float left;

                [FieldOffset(488)]
                internal float top;

                [FieldOffset(492)]
                internal float right;

                [FieldOffset(496)]
                internal float bottom;

                [FieldOffset(500)]
                internal byte isUnderWater;

                [FieldOffset(504)]
                internal uint unk011;

                [FieldOffset(508)]
                internal int numberOfObjectsAdded;

                [FieldOffset(512)]
                internal global::System.IntPtr unk021;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0GameCamera@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0GameCamera@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?alter@GameCamera@utinni@@QAEMM@Z")]
                internal static extern float Alter(global::System.IntPtr __instance, float time);
            }

            internal static new global::UtinniCore.Utinni.GameCamera __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.GameCamera(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.GameCamera __CreateInstance(global::UtinniCore.Utinni.GameCamera.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.GameCamera(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.GameCamera.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.GameCamera.__Internal));
                global::UtinniCore.Utinni.GameCamera.__Internal.cctor(ret, new global::System.IntPtr(&native));
                return ret.ToPointer();
            }

            private GameCamera(global::UtinniCore.Utinni.GameCamera.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected GameCamera(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public GameCamera()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.GameCamera.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public GameCamera(global::UtinniCore.Utinni.GameCamera _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.GameCamera.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(_0, null))
                    throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = _0.__Instance;
                __Internal.cctor(__Instance, __arg0);
            }

            public float Alter(float time)
            {
                var __ret = __Internal.Alter(__Instance, time);
                return __ret;
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class GroundScene : global::UtinniCore.Utinni.NetworkScene, IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 232)]
            public new partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal global::System.IntPtr name;

                [FieldOffset(8)]
                internal global::System.IntPtr ioWin;

                [FieldOffset(12)]
                internal uint unk01;

                [FieldOffset(16)]
                internal uint unk02;

                [FieldOffset(20)]
                internal uint unk03;

                [FieldOffset(24)]
                internal uint unk04;

                [FieldOffset(28)]
                internal global::System.IntPtr playerObject;

                [FieldOffset(32)]
                internal uint unk011;

                [FieldOffset(36)]
                internal uint unk021;

                [FieldOffset(40)]
                internal uint unk031;

                [FieldOffset(44)]
                internal uint unk041;

                [FieldOffset(48)]
                internal uint unk05;

                [FieldOffset(52)]
                internal uint unk06;

                [FieldOffset(56)]
                internal uint unk07;

                [FieldOffset(60)]
                internal uint unk08;

                [FieldOffset(64)]
                internal uint unk09;

                [FieldOffset(68)]
                internal uint unk10;

                [FieldOffset(72)]
                internal uint unk11;

                [FieldOffset(76)]
                internal uint inputMap;

                [FieldOffset(80)]
                internal uint debugPortalCameraInputMap;

                [FieldOffset(84)]
                internal uint structurePlacementCameraInputMap;

                [FieldOffset(88)]
                internal uint freeCameraInputMap;

                [FieldOffset(92)]
                internal uint mouseCursor;

                [FieldOffset(96)]
                internal uint lastYawPitch;

                [FieldOffset(100)]
                internal uint cockpitCamera;

                [FieldOffset(104)]
                internal uint shipTurretCamera;

                [FieldOffset(108)]
                internal uint freeChaseCamera;

                [FieldOffset(112)]
                internal uint freeCamera;

                [FieldOffset(116)]
                internal uint debugPortalCamera;

                [FieldOffset(120)]
                internal uint structurePlacementCamera;

                [FieldOffset(124)]
                internal uint flyByCamera;

                [FieldOffset(128)]
                internal fixed uint cameras[7];

                [FieldOffset(156)]
                internal int currentView;

                [FieldOffset(160)]
                internal byte disableWorldSnapshot;

                [FieldOffset(161)]
                internal byte unk012;

                [FieldOffset(162)]
                internal byte unk022;

                [FieldOffset(163)]
                internal byte isLoading;

                [FieldOffset(164)]
                internal byte unk032;

                [FieldOffset(165)]
                internal byte isReady;

                [FieldOffset(166)]
                internal byte unk042;

                [FieldOffset(168)]
                internal uint unk051;

                [FieldOffset(172)]
                internal uint unk061;

                [FieldOffset(176)]
                internal uint unk071;

                [FieldOffset(180)]
                internal uint unk081;

                [FieldOffset(184)]
                internal uint unk091;

                [FieldOffset(188)]
                internal uint overheadMap;

                [FieldOffset(192)]
                internal uint unk101;

                [FieldOffset(196)]
                internal uint unk111;

                [FieldOffset(200)]
                internal byte currentMode;

                [FieldOffset(204)]
                internal uint unk12;

                [FieldOffset(208)]
                internal uint unk13;

                [FieldOffset(212)]
                internal uint unk14;

                [FieldOffset(216)]
                internal uint unk15;

                [FieldOffset(220)]
                internal byte isTutorial;

                [FieldOffset(224)]
                internal uint unk16;

                [FieldOffset(228)]
                internal uint unk17;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0GroundScene@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?get@GroundScene@utinni@@SAPAV12@XZ")]
                internal static extern global::System.IntPtr Get();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?ctor@GroundScene@utinni@@SAPAV12@PBD0@Z")]
                internal static extern global::System.IntPtr Ctor([MarshalAs(UnmanagedType.LPUTF8Str)] string terrainFilename, [MarshalAs(UnmanagedType.LPUTF8Str)] string avatarObjectFilename);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addPreDrawLoopCallback@GroundScene@utinni@@SAXP6AXPAV12@@Z@Z")]
                internal static extern void AddPreDrawLoopCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addPostDrawLoopCallback@GroundScene@utinni@@SAXP6AXPAV12@@Z@Z")]
                internal static extern void AddPostDrawLoopCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addUpdateLoopCallback@GroundScene@utinni@@SAXP6AXPAV12@M@Z@Z")]
                internal static extern void AddUpdateLoopCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addCameraChangeCallback@GroundScene@utinni@@SAXP6AXXZ@Z")]
                internal static extern void AddCameraChangeCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?detour@GroundScene@utinni@@SAXXZ")]
                internal static extern void Detour();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?removeDetour@GroundScene@utinni@@SAXXZ")]
                internal static extern void RemoveDetour();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?toggleFreeCamera@GroundScene@utinni@@QAEXXZ")]
                internal static extern void ToggleFreeCamera(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?changeCameraMode@GroundScene@utinni@@QAEXH@Z")]
                internal static extern void ChangeCameraMode(global::System.IntPtr __instance, int cameraMode);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?reloadTerrain@GroundScene@utinni@@QAEXXZ")]
                internal static extern void ReloadTerrain(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?createObjectAtPlayer@GroundScene@utinni@@QAEXPBD@Z")]
                internal static extern void CreateObjectAtPlayer(global::System.IntPtr __instance, [MarshalAs(UnmanagedType.LPUTF8Str)] string filename);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?createAppearanceAtPlayer@GroundScene@utinni@@QAEXPBD@Z")]
                internal static extern void CreateAppearanceAtPlayer(global::System.IntPtr __instance, [MarshalAs(UnmanagedType.LPUTF8Str)] string filename);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getName@GroundScene@utinni@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")]
                internal static extern void GetName(global::System.IntPtr __instance, global::System.IntPtr @return);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getCurrentCamera@GroundScene@utinni@@QAEPAVCamera@2@XZ")]
                internal static extern global::System.IntPtr GetCurrentCamera(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?isFreeCameraActive@GroundScene@utinni@@QBE_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsFreeCameraActive(global::System.IntPtr __instance);
            }

            internal static new global::UtinniCore.Utinni.GroundScene __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.GroundScene(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.GroundScene __CreateInstance(global::UtinniCore.Utinni.GroundScene.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.GroundScene(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.GroundScene.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.GroundScene.__Internal));
                *(global::UtinniCore.Utinni.GroundScene.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private GroundScene(global::UtinniCore.Utinni.GroundScene.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected GroundScene(void* native, bool skipVTables = false)
                : base((void*) native)
            {
            }

            public GroundScene()
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.GroundScene.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public GroundScene(global::UtinniCore.Utinni.GroundScene _0)
                : this((void*) null)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.GroundScene.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance) = *((global::UtinniCore.Utinni.GroundScene.__Internal*) _0.__Instance);
            }

            public void ToggleFreeCamera()
            {
                __Internal.ToggleFreeCamera(__Instance);
            }

            public void ChangeCameraMode(int cameraMode)
            {
                __Internal.ChangeCameraMode(__Instance, cameraMode);
            }

            public void ReloadTerrain()
            {
                __Internal.ReloadTerrain(__Instance);
            }

            public void CreateObjectAtPlayer(string filename)
            {
                __Internal.CreateObjectAtPlayer(__Instance, filename);
            }

            public void CreateAppearanceAtPlayer(string filename)
            {
                __Internal.CreateAppearanceAtPlayer(__Instance, filename);
            }

            public static global::UtinniCore.Utinni.GroundScene Get()
            {
                var __ret = __Internal.Get();
                global::UtinniCore.Utinni.GroundScene __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.GroundScene.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.GroundScene) global::UtinniCore.Utinni.GroundScene.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.GroundScene.__CreateInstance(__ret);
                return __result0;
            }

            public static global::UtinniCore.Utinni.GroundScene Ctor(string terrainFilename, string avatarObjectFilename)
            {
                var __ret = __Internal.Ctor(terrainFilename, avatarObjectFilename);
                global::UtinniCore.Utinni.GroundScene __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.GroundScene.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.GroundScene) global::UtinniCore.Utinni.GroundScene.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.GroundScene.__CreateInstance(__ret);
                return __result0;
            }

            public static void AddPreDrawLoopCallback(global::UtinniCore.Delegates.Action_IntPtr_C func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddPreDrawLoopCallback(__arg0);
            }

            public static void AddPostDrawLoopCallback(global::UtinniCore.Delegates.Action_IntPtr_C func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddPostDrawLoopCallback(__arg0);
            }

            public static void AddUpdateLoopCallback(global::UtinniCore.Delegates.Action_IntPtr_float func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddUpdateLoopCallback(__arg0);
            }

            public static void AddCameraChangeCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddCameraChangeCallback(__arg0);
            }

            public static void Detour()
            {
                __Internal.Detour();
            }

            public static void RemoveDetour()
            {
                __Internal.RemoveDetour();
            }

            public uint InputMap
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->inputMap;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->inputMap = value;
                }
            }

            public uint DebugPortalCameraInputMap
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->debugPortalCameraInputMap;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->debugPortalCameraInputMap = value;
                }
            }

            public uint StructurePlacementCameraInputMap
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->structurePlacementCameraInputMap;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->structurePlacementCameraInputMap = value;
                }
            }

            public uint FreeCameraInputMap
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->freeCameraInputMap;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->freeCameraInputMap = value;
                }
            }

            public uint MouseCursor
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->mouseCursor;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->mouseCursor = value;
                }
            }

            public uint LastYawPitch
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->lastYawPitch;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->lastYawPitch = value;
                }
            }

            public uint CockpitCamera
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->cockpitCamera;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->cockpitCamera = value;
                }
            }

            public uint ShipTurretCamera
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->shipTurretCamera;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->shipTurretCamera = value;
                }
            }

            public uint FreeChaseCamera
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->freeChaseCamera;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->freeChaseCamera = value;
                }
            }

            public uint FreeCamera
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->freeCamera;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->freeCamera = value;
                }
            }

            public uint DebugPortalCamera
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->debugPortalCamera;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->debugPortalCamera = value;
                }
            }

            public uint StructurePlacementCamera
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->structurePlacementCamera;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->structurePlacementCamera = value;
                }
            }

            public uint FlyByCamera
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->flyByCamera;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->flyByCamera = value;
                }
            }

            public uint[] Cameras
            {
                get
                {
                    uint[] __value = null;
                    if (((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->cameras != null)
                    {
                        __value = new uint[7];
                        for (int i = 0; i < 7; i++)
                            __value[i] = ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->cameras[i];
                    }
                    return __value;
                }

                set
                {
                    if (value != null)
                    {
                        for (int i = 0; i < 7; i++)
                            ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->cameras[i] = value[i];
                    }
                }
            }

            public int CurrentView
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->currentView;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->currentView = value;
                }
            }

            public bool DisableWorldSnapshot
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->disableWorldSnapshot != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->disableWorldSnapshot = (byte) (value ? 1 : 0);
                }
            }

            public bool Unk01
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk012 != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk012 = (byte) (value ? 1 : 0);
                }
            }

            public bool Unk02
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk022 != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk022 = (byte) (value ? 1 : 0);
                }
            }

            public bool IsLoading
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->isLoading != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->isLoading = (byte) (value ? 1 : 0);
                }
            }

            public bool Unk03
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk032 != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk032 = (byte) (value ? 1 : 0);
                }
            }

            public bool IsReady
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->isReady != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->isReady = (byte) (value ? 1 : 0);
                }
            }

            public bool Unk04
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk042 != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk042 = (byte) (value ? 1 : 0);
                }
            }

            public uint Unk05
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk051;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk051 = value;
                }
            }

            public uint Unk06
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk061;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk061 = value;
                }
            }

            public uint Unk07
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk071;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk071 = value;
                }
            }

            public uint Unk08
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk081;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk081 = value;
                }
            }

            public uint Unk09
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk091;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk091 = value;
                }
            }

            public uint OverheadMap
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->overheadMap;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->overheadMap = value;
                }
            }

            public uint Unk10
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk101;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk101 = value;
                }
            }

            public uint Unk11
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk111;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk111 = value;
                }
            }

            public bool CurrentMode
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->currentMode != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->currentMode = (byte) (value ? 1 : 0);
                }
            }

            public uint Unk12
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk12;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk12 = value;
                }
            }

            public uint Unk13
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk13;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk13 = value;
                }
            }

            public uint Unk14
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk14;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk14 = value;
                }
            }

            public uint Unk15
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk15;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk15 = value;
                }
            }

            public bool IsTutorial
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->isTutorial != 0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->isTutorial = (byte) (value ? 1 : 0);
                }
            }

            public uint Unk16
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk16;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk16 = value;
                }
            }

            public uint Unk17
            {
                get
                {
                    return ((global::UtinniCore.Utinni.GroundScene.__Internal*) __Instance)->unk17;
                }

                set
                {
                    ((global::UtinniCore.Utinni.GroundScene.__Internal*)__Instance)->unk17 = value;
                }
            }

            public string Name
            {
                get
                {
                    var __ret = new global::Std.BasicString.__Internalc__N_std_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C();
                    __Internal.GetName(__Instance, new IntPtr(&__ret));
                    var __basicStringRet0 = global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>.__CreateInstance(new global::System.IntPtr(&__ret));
                    var __retString0 = global::Std.BasicStringExtensions.Data(__basicStringRet0);
                    __basicStringRet0.Dispose();
                    return __retString0;
                }
            }

            public global::UtinniCore.Utinni.Camera CurrentCamera
            {
                get
                {
                    var __ret = __Internal.GetCurrentCamera(__Instance);
                    global::UtinniCore.Utinni.Camera __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Camera.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.Camera) global::UtinniCore.Utinni.Camera.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.Camera.__CreateInstance(__ret);
                    return __result0;
                }
            }

            public bool IsFreeCameraActive
            {
                get
                {
                    var __ret = __Internal.IsFreeCameraActive(__Instance);
                    return __ret;
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class Terrain : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Terrain@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?get@Terrain@utinni@@SAPAV12@XZ")]
                internal static extern global::System.IntPtr Get();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getTimeOfDay@Terrain@utinni@@QAEMXZ")]
                internal static extern float GetTimeOfDay(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setTimeOfDay@Terrain@utinni@@QAEXM@Z")]
                internal static extern void SetTimeOfDay(global::System.IntPtr __instance, float time);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getTimeOfDayHours@Terrain@utinni@@QAEHXZ")]
                internal static extern int GetTimeOfDayHours(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getTimeOfDayMinutes@Terrain@utinni@@QAEHXZ")]
                internal static extern int GetTimeOfDayMinutes(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getWeatherIndex@Terrain@utinni@@QAEHXZ")]
                internal static extern int GetWeatherIndex(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?setWeatherIndex@Terrain@utinni@@QAEXH@Z")]
                internal static extern void SetWeatherIndex(global::System.IntPtr __instance, int weatherIndex);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getFilename@Terrain@utinni@@QAEPBDXZ")]
                internal static extern global::System.IntPtr GetFilename(global::System.IntPtr __instance);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Terrain> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Terrain>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.Terrain __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Terrain(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.Terrain __CreateInstance(global::UtinniCore.Utinni.Terrain.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Terrain(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.Terrain.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Terrain.__Internal));
                *(global::UtinniCore.Utinni.Terrain.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private Terrain(global::UtinniCore.Utinni.Terrain.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected Terrain(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public Terrain()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Terrain.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public Terrain(global::UtinniCore.Utinni.Terrain _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Terrain.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.Terrain.__Internal*) __Instance) = *((global::UtinniCore.Utinni.Terrain.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.Terrain __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public static global::UtinniCore.Utinni.Terrain Get()
            {
                var __ret = __Internal.Get();
                global::UtinniCore.Utinni.Terrain __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.Terrain.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.Terrain) global::UtinniCore.Utinni.Terrain.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.Terrain.__CreateInstance(__ret);
                return __result0;
            }

            public float TimeOfDay
            {
                get
                {
                    var __ret = __Internal.GetTimeOfDay(__Instance);
                    return __ret;
                }

                set
                {
                    __Internal.SetTimeOfDay(__Instance, value);
                }
            }

            public int TimeOfDayHours
            {
                get
                {
                    var __ret = __Internal.GetTimeOfDayHours(__Instance);
                    return __ret;
                }
            }

            public int TimeOfDayMinutes
            {
                get
                {
                    var __ret = __Internal.GetTimeOfDayMinutes(__Instance);
                    return __ret;
                }
            }

            public int WeatherIndex
            {
                get
                {
                    var __ret = __Internal.GetWeatherIndex(__Instance);
                    return __ret;
                }

                set
                {
                    __Internal.SetWeatherIndex(__Instance, value);
                }
            }

            public string Filename
            {
                get
                {
                    var __ret = __Internal.GetFilename(__Instance);
                    if (__ret == global::System.IntPtr.Zero)
                        return default(string);
                    var __retPtr = (byte*) __ret;
                    int __length = 0;
                    while (*(__retPtr++) != 0) __length += sizeof(byte);
                    return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                }
            }
        }
    }

    namespace Utinni
    {
        namespace RenderWorld
        {
            public unsafe partial class render_world
            {
                public partial struct __Internal
                {
                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?addObjectNotifications@renderWorld@utinni@@YAXPAVObject@2@@Z")]
                    internal static extern void AddObjectNotifications(global::System.IntPtr obj);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?detour@renderWorld@utinni@@YAXXZ")]
                    internal static extern void Detour();
                }

                public static void AddObjectNotifications(global::UtinniCore.Utinni.Object obj)
                {
                    var __arg0 = ReferenceEquals(obj, null) ? global::System.IntPtr.Zero : obj.__Instance;
                    __Internal.AddObjectNotifications(__arg0);
                }

                public static void Detour()
                {
                    __Internal.Detour();
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class WorldSnapshotReaderWriter : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 16)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal global::System.IntPtr nodeList;

                [FieldOffset(4)]
                internal global::System.IntPtr objectTemplateNameList;

                [FieldOffset(8)]
                internal global::System.IntPtr objectTemplateCrcMap;

                [FieldOffset(12)]
                internal global::System.IntPtr networkIdMap;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0WorldSnapshotReaderWriter@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?get@WorldSnapshotReaderWriter@utinni@@SAPAV12@XZ")]
                internal static extern global::System.IntPtr Get();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?clear@WorldSnapshotReaderWriter@utinni@@QAEXXZ")]
                internal static extern void Clear(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?clearPreloadList@WorldSnapshotReaderWriter@utinni@@SAXIII@Z")]
                internal static extern void ClearPreloadList(uint unk1, uint unk2, uint unk3);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?saveFile@WorldSnapshotReaderWriter@utinni@@QAEXPBD@Z")]
                internal static extern void SaveFile(global::System.IntPtr __instance, [MarshalAs(UnmanagedType.LPUTF8Str)] string snapshotName);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getObjectTemplateName@WorldSnapshotReaderWriter@utinni@@QAEPBDH@Z")]
                internal static extern global::System.IntPtr GetObjectTemplateName(global::System.IntPtr __instance, int objectTemplateNameIndex);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getNodeById@WorldSnapshotReaderWriter@utinni@@QAEPAVNode@12@H@Z")]
                internal static extern global::System.IntPtr GetNodeById(global::System.IntPtr __instance, int id);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getNodeById@WorldSnapshotReaderWriter@utinni@@QAEPAVNode@12@HPAVObject@2@@Z")]
                internal static extern global::System.IntPtr GetNodeById(global::System.IntPtr __instance, int id, global::System.IntPtr parentObject);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?findChildNode@WorldSnapshotReaderWriter@utinni@@QAEPAVNode@12@PAV312@H@Z")]
                internal static extern global::System.IntPtr FindChildNode(global::System.IntPtr __instance, global::System.IntPtr parentNode, int id);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getNodeByIdWithParent@WorldSnapshotReaderWriter@utinni@@QAEPAVNode@12@PAVObject@2@H@Z")]
                internal static extern global::System.IntPtr GetNodeByIdWithParent(global::System.IntPtr __instance, global::System.IntPtr parentObject, int id);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getNodeByNetworkId@WorldSnapshotReaderWriter@utinni@@QAEPAVNode@12@H@Z")]
                internal static extern global::System.IntPtr GetNodeByNetworkId(global::System.IntPtr __instance, int networkId);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getNodeAt@WorldSnapshotReaderWriter@utinni@@QAEPAVNode@12@H@Z")]
                internal static extern global::System.IntPtr GetNodeAt(global::System.IntPtr __instance, int index);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?addNode@WorldSnapshotReaderWriter@utinni@@QAEPAVNode@12@HHPBDHABUTransform@math@swg@@MI@Z")]
                internal static extern global::System.IntPtr AddNode(global::System.IntPtr __instance, int nodeId, int parentNodeId, [MarshalAs(UnmanagedType.LPUTF8Str)] string objectFilename, int cellId, global::System.IntPtr transform, float radius, uint pobCrc);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getNodeCount@WorldSnapshotReaderWriter@utinni@@QAEHXZ")]
                internal static extern int GetNodeCount(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getNodeCountTotal@WorldSnapshotReaderWriter@utinni@@QAEHXZ")]
                internal static extern int GetNodeCountTotal(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?getLastNode@WorldSnapshotReaderWriter@utinni@@QAEPAVNode@12@XZ")]
                internal static extern global::System.IntPtr GetLastNode(global::System.IntPtr __instance);
            }

            public unsafe partial class Node : IDisposable
            {
                [StructLayout(LayoutKind.Explicit, Size = 96)]
                public partial struct __Internal
                {
                    [FieldOffset(0)]
                    internal byte isDeleted;

                    [FieldOffset(4)]
                    internal int id;

                    [FieldOffset(8)]
                    internal int parentId;

                    [FieldOffset(12)]
                    internal int objectTemplateNameIndex;

                    [FieldOffset(16)]
                    internal int cellIndex;

                    [FieldOffset(20)]
                    internal global::UtinniCore.Swg.Math.Transform.__Internal transform;

                    [FieldOffset(68)]
                    internal float radius;

                    [FieldOffset(72)]
                    internal int pobCRC;

                    [FieldOffset(76)]
                    internal global::System.IntPtr parentNode;

                    [FieldOffset(80)]
                    internal global::System.IntPtr children;

                    [FieldOffset(84)]
                    internal uint pSpatialSubdivisionHandle;

                    [FieldOffset(88)]
                    internal float distanceSquaredTo;

                    [FieldOffset(92)]
                    internal byte isInWorld;

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Node@WorldSnapshotReaderWriter@utinni@@QAE@XZ")]
                    internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="??0Node@WorldSnapshotReaderWriter@utinni@@QAE@ABV012@@Z")]
                    internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?removeNode@Node@WorldSnapshotReaderWriter@utinni@@QAEXXZ")]
                    internal static extern void RemoveNode(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?removeNodeFull@Node@WorldSnapshotReaderWriter@utinni@@QAEXXZ")]
                    internal static extern void RemoveNodeFull(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?getChildById@Node@WorldSnapshotReaderWriter@utinni@@QAEPAV123@H@Z")]
                    internal static extern global::System.IntPtr GetChildById(global::System.IntPtr __instance, int id);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?getChildAt@Node@WorldSnapshotReaderWriter@utinni@@QAEPAV123@H@Z")]
                    internal static extern global::System.IntPtr GetChildAt(global::System.IntPtr __instance, int index);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?getNodeNetworkId@Node@WorldSnapshotReaderWriter@utinni@@QAE_JXZ")]
                    internal static extern long GetNodeNetworkId(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?getNodeSpatialSubdivisionHandle@Node@WorldSnapshotReaderWriter@utinni@@QAEIXZ")]
                    internal static extern uint GetNodeSpatialSubdivisionHandle(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?setNodeSpatialSubdivisionHandle@Node@WorldSnapshotReaderWriter@utinni@@QAEXI@Z")]
                    internal static extern void SetNodeSpatialSubdivisionHandle(global::System.IntPtr __instance, uint handle);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?getObjectTemplateName@Node@WorldSnapshotReaderWriter@utinni@@QBEPBDXZ")]
                    internal static extern global::System.IntPtr GetObjectTemplateName(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?getChildCount@Node@WorldSnapshotReaderWriter@utinni@@QBEHXZ")]
                    internal static extern int GetChildCount(global::System.IntPtr __instance);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                        EntryPoint="?getLastChild@Node@WorldSnapshotReaderWriter@utinni@@QAEPAV123@XZ")]
                    internal static extern global::System.IntPtr GetLastChild(global::System.IntPtr __instance);
                }

                public global::System.IntPtr __Instance { get; protected set; }

                internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node>();

                protected bool __ownsNativeInstance;

                internal static global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node(native.ToPointer(), skipVTables);
                }

                internal static global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __CreateInstance(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal native, bool skipVTables = false)
                {
                    return new global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node(native, skipVTables);
                }

                private static void* __CopyValue(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal native)
                {
                    var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal));
                    *(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) ret = native;
                    return ret.ToPointer();
                }

                private Node(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal native, bool skipVTables = false)
                    : this(__CopyValue(native), skipVTables)
                {
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                }

                protected Node(void* native, bool skipVTables = false)
                {
                    if (native == null)
                        return;
                    __Instance = new global::System.IntPtr(native);
                }

                public Node()
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    __Internal.ctor(__Instance);
                }

                public Node(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node _0)
                {
                    __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal));
                    __ownsNativeInstance = true;
                    NativeToManagedMap[__Instance] = this;
                    *((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance) = *((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) _0.__Instance);
                }

                public void Dispose()
                {
                    Dispose(disposing: true);
                }

                public virtual void Dispose(bool disposing)
                {
                    if (__Instance == IntPtr.Zero)
                        return;
                    global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __dummy;
                    NativeToManagedMap.TryRemove(__Instance, out __dummy);
                    if (__ownsNativeInstance)
                        Marshal.FreeHGlobal(__Instance);
                    __Instance = IntPtr.Zero;
                }

                public void RemoveNode()
                {
                    __Internal.RemoveNode(__Instance);
                }

                public void RemoveNodeFull()
                {
                    __Internal.RemoveNodeFull(__Instance);
                }

                public global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node GetChildById(int id)
                {
                    var __ret = __Internal.GetChildById(__Instance, id);
                    global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__CreateInstance(__ret);
                    return __result0;
                }

                public global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node GetChildAt(int index)
                {
                    var __ret = __Internal.GetChildAt(__Instance, index);
                    global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__CreateInstance(__ret);
                    return __result0;
                }

                public bool IsDeleted
                {
                    get
                    {
                        return ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->isDeleted != 0;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*)__Instance)->isDeleted = (byte) (value ? 1 : 0);
                    }
                }

                public int Id
                {
                    get
                    {
                        return ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->id;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*)__Instance)->id = value;
                    }
                }

                public int ParentId
                {
                    get
                    {
                        return ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->parentId;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*)__Instance)->parentId = value;
                    }
                }

                public int ObjectTemplateNameIndex
                {
                    get
                    {
                        return ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->objectTemplateNameIndex;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*)__Instance)->objectTemplateNameIndex = value;
                    }
                }

                public int CellIndex
                {
                    get
                    {
                        return ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->cellIndex;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*)__Instance)->cellIndex = value;
                    }
                }

                public global::UtinniCore.Swg.Math.Transform Transform
                {
                    get
                    {
                        return global::UtinniCore.Swg.Math.Transform.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->transform));
                    }

                    set
                    {
                        if (ReferenceEquals(value, null))
                            throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                        ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*)__Instance)->transform = *(global::UtinniCore.Swg.Math.Transform.__Internal*) value.__Instance;
                    }
                }

                public float Radius
                {
                    get
                    {
                        return ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->radius;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*)__Instance)->radius = value;
                    }
                }

                public int PobCRC
                {
                    get
                    {
                        return ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->pobCRC;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*)__Instance)->pobCRC = value;
                    }
                }

                public global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node ParentNode
                {
                    get
                    {
                        global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __result0;
                        if (((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->parentNode == IntPtr.Zero) __result0 = null;
                        else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->parentNode))
                            __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap[((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->parentNode];
                        else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__CreateInstance(((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->parentNode);
                        return __result0;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*)__Instance)->parentNode = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                    }
                }

                public uint PSpatialSubdivisionHandle
                {
                    get
                    {
                        return ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->pSpatialSubdivisionHandle;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*)__Instance)->pSpatialSubdivisionHandle = value;
                    }
                }

                public float DistanceSquaredTo
                {
                    get
                    {
                        return ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->distanceSquaredTo;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*)__Instance)->distanceSquaredTo = value;
                    }
                }

                public bool IsInWorld
                {
                    get
                    {
                        return ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*) __Instance)->isInWorld != 0;
                    }

                    set
                    {
                        ((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__Internal*)__Instance)->isInWorld = (byte) (value ? 1 : 0);
                    }
                }

                public long NodeNetworkId
                {
                    get
                    {
                        var __ret = __Internal.GetNodeNetworkId(__Instance);
                        return __ret;
                    }
                }

                public uint NodeSpatialSubdivisionHandle
                {
                    get
                    {
                        var __ret = __Internal.GetNodeSpatialSubdivisionHandle(__Instance);
                        return __ret;
                    }

                    set
                    {
                        __Internal.SetNodeSpatialSubdivisionHandle(__Instance, value);
                    }
                }

                public string ObjectTemplateName
                {
                    get
                    {
                        var __ret = __Internal.GetObjectTemplateName(__Instance);
                        if (__ret == global::System.IntPtr.Zero)
                            return default(string);
                        var __retPtr = (byte*) __ret;
                        int __length = 0;
                        while (*(__retPtr++) != 0) __length += sizeof(byte);
                        return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
                    }
                }

                public int ChildCount
                {
                    get
                    {
                        var __ret = __Internal.GetChildCount(__Instance);
                        return __ret;
                    }
                }

                public global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node LastChild
                {
                    get
                    {
                        var __ret = __Internal.GetLastChild(__Instance);
                        global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __result0;
                        if (__ret == IntPtr.Zero) __result0 = null;
                        else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap.ContainsKey(__ret))
                            __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap[__ret];
                        else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__CreateInstance(__ret);
                        return __result0;
                    }
                }
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.WorldSnapshotReaderWriter> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.WorldSnapshotReaderWriter>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.WorldSnapshotReaderWriter __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.WorldSnapshotReaderWriter(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.WorldSnapshotReaderWriter __CreateInstance(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.WorldSnapshotReaderWriter(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.__Internal));
                *(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private WorldSnapshotReaderWriter(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected WorldSnapshotReaderWriter(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public WorldSnapshotReaderWriter()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public WorldSnapshotReaderWriter(global::UtinniCore.Utinni.WorldSnapshotReaderWriter _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.__Internal*) __Instance) = *((global::UtinniCore.Utinni.WorldSnapshotReaderWriter.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.WorldSnapshotReaderWriter __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public void Clear()
            {
                __Internal.Clear(__Instance);
            }

            public void SaveFile(string snapshotName)
            {
                __Internal.SaveFile(__Instance, snapshotName);
            }

            public string GetObjectTemplateName(int objectTemplateNameIndex)
            {
                var __ret = __Internal.GetObjectTemplateName(__Instance, objectTemplateNameIndex);
                if (__ret == global::System.IntPtr.Zero)
                    return default(string);
                var __retPtr = (byte*) __ret;
                int __length = 0;
                while (*(__retPtr++) != 0) __length += sizeof(byte);
                return global::System.Text.Encoding.UTF8.GetString((byte*) __ret, __length);
            }

            public global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node GetNodeById(int id)
            {
                var __ret = __Internal.GetNodeById(__Instance, id);
                global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__CreateInstance(__ret);
                return __result0;
            }

            public global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node GetNodeById(int id, global::UtinniCore.Utinni.Object parentObject)
            {
                var __arg1 = ReferenceEquals(parentObject, null) ? global::System.IntPtr.Zero : parentObject.__Instance;
                var __ret = __Internal.GetNodeById(__Instance, id, __arg1);
                global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__CreateInstance(__ret);
                return __result0;
            }

            public global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node FindChildNode(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node parentNode, int id)
            {
                var __arg0 = ReferenceEquals(parentNode, null) ? global::System.IntPtr.Zero : parentNode.__Instance;
                var __ret = __Internal.FindChildNode(__Instance, __arg0, id);
                global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__CreateInstance(__ret);
                return __result0;
            }

            public global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node GetNodeByIdWithParent(global::UtinniCore.Utinni.Object parentObject, int id)
            {
                var __arg0 = ReferenceEquals(parentObject, null) ? global::System.IntPtr.Zero : parentObject.__Instance;
                var __ret = __Internal.GetNodeByIdWithParent(__Instance, __arg0, id);
                global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__CreateInstance(__ret);
                return __result0;
            }

            public global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node GetNodeByNetworkId(int networkId)
            {
                var __ret = __Internal.GetNodeByNetworkId(__Instance, networkId);
                global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__CreateInstance(__ret);
                return __result0;
            }

            public global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node GetNodeAt(int index)
            {
                var __ret = __Internal.GetNodeAt(__Instance, index);
                global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__CreateInstance(__ret);
                return __result0;
            }

            public global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node AddNode(int nodeId, int parentNodeId, string objectFilename, int cellId, global::UtinniCore.Swg.Math.Transform transform, float radius, uint pobCrc)
            {
                if (ReferenceEquals(transform, null))
                    throw new global::System.ArgumentNullException("transform", "Cannot be null because it is a C++ reference (&).");
                var __arg4 = transform.__Instance;
                var __ret = __Internal.AddNode(__Instance, nodeId, parentNodeId, objectFilename, cellId, __arg4, radius, pobCrc);
                global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__CreateInstance(__ret);
                return __result0;
            }

            public static global::UtinniCore.Utinni.WorldSnapshotReaderWriter Get()
            {
                var __ret = __Internal.Get();
                global::UtinniCore.Utinni.WorldSnapshotReaderWriter __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.__CreateInstance(__ret);
                return __result0;
            }

            public static void ClearPreloadList(uint unk1, uint unk2, uint unk3)
            {
                __Internal.ClearPreloadList(unk1, unk2, unk3);
            }

            public int NodeCount
            {
                get
                {
                    var __ret = __Internal.GetNodeCount(__Instance);
                    return __ret;
                }
            }

            public int NodeCountTotal
            {
                get
                {
                    var __ret = __Internal.GetNodeCountTotal(__Instance);
                    return __ret;
                }
            }

            public global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node LastNode
            {
                get
                {
                    var __ret = __Internal.GetLastNode(__Instance);
                    global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__CreateInstance(__ret);
                    return __result0;
                }
            }
        }

        public unsafe partial class WorldSnapshot : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0WorldSnapshot@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?load@WorldSnapshot@utinni@@SAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")]
                internal static extern void Load(global::System.IntPtr name);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?unload@WorldSnapshot@utinni@@SAXXZ")]
                internal static extern void Unload();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?reload@WorldSnapshot@utinni@@SAXXZ")]
                internal static extern void Reload();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?detailLevelChanged@WorldSnapshot@utinni@@SAXXZ")]
                internal static extern void DetailLevelChanged();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?generateHighestId@WorldSnapshot@utinni@@SAHXZ")]
                internal static extern int GenerateHighestId();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isValidObject@WorldSnapshot@utinni@@SA_NPBD@Z")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsValidObject([MarshalAs(UnmanagedType.LPUTF8Str)] string objectFilename);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?createAddNode@WorldSnapshot@utinni@@SAPAVNode@WorldSnapshotReaderWriter@2@PBDAAUTransform@math@swg@@@Z")]
                internal static extern global::System.IntPtr CreateAddNode([MarshalAs(UnmanagedType.LPUTF8Str)] string objectFilename, global::System.IntPtr transform);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?createNodeCopy@WorldSnapshot@utinni@@SAPAVNode@WorldSnapshotReaderWriter@2@PAV342@AAUTransform@math@swg@@@Z")]
                internal static extern global::System.IntPtr CreateNodeCopy(global::System.IntPtr originalNode, global::System.IntPtr transform);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addNode@WorldSnapshot@utinni@@SAPAVObject@2@PAVNode@WorldSnapshotReaderWriter@2@@Z")]
                internal static extern global::System.IntPtr AddNode(global::System.IntPtr node);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?removeNode@WorldSnapshot@utinni@@SAXPAVNode@WorldSnapshotReaderWriter@2@@Z")]
                internal static extern void RemoveNode(global::System.IntPtr node);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?getPreloadSnapshot@WorldSnapshot@utinni@@SA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool GetPreloadSnapshot();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setPreloadSnapshot@WorldSnapshot@utinni@@SAX_N@Z")]
                internal static extern void SetPreloadSnapshot(bool preloadSnapshot);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.WorldSnapshot> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.WorldSnapshot>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.WorldSnapshot __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.WorldSnapshot(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.WorldSnapshot __CreateInstance(global::UtinniCore.Utinni.WorldSnapshot.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.WorldSnapshot(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.WorldSnapshot.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.WorldSnapshot.__Internal));
                *(global::UtinniCore.Utinni.WorldSnapshot.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private WorldSnapshot(global::UtinniCore.Utinni.WorldSnapshot.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected WorldSnapshot(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public WorldSnapshot()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.WorldSnapshot.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public WorldSnapshot(global::UtinniCore.Utinni.WorldSnapshot _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.WorldSnapshot.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.WorldSnapshot.__Internal*) __Instance) = *((global::UtinniCore.Utinni.WorldSnapshot.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.WorldSnapshot __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public static void Load(string name)
            {
                var __basicString0 = new global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>();
                global::Std.BasicStringExtensions.Assign(__basicString0, name);
                var __arg0 = __basicString0.__Instance;
                __Internal.Load(__arg0);
                __basicString0.Dispose();
            }

            public static void Unload()
            {
                __Internal.Unload();
            }

            public static void Reload()
            {
                __Internal.Reload();
            }

            public static void DetailLevelChanged()
            {
                __Internal.DetailLevelChanged();
            }

            public static int GenerateHighestId()
            {
                var __ret = __Internal.GenerateHighestId();
                return __ret;
            }

            public static bool IsValidObject(string objectFilename)
            {
                var __ret = __Internal.IsValidObject(objectFilename);
                return __ret;
            }

            public static global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node CreateAddNode(string objectFilename, global::UtinniCore.Swg.Math.Transform transform)
            {
                if (ReferenceEquals(transform, null))
                    throw new global::System.ArgumentNullException("transform", "Cannot be null because it is a C++ reference (&).");
                var __arg1 = transform.__Instance;
                var __ret = __Internal.CreateAddNode(objectFilename, __arg1);
                global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__CreateInstance(__ret);
                return __result0;
            }

            public static global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node CreateNodeCopy(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node originalNode, global::UtinniCore.Swg.Math.Transform transform)
            {
                var __arg0 = ReferenceEquals(originalNode, null) ? global::System.IntPtr.Zero : originalNode.__Instance;
                if (ReferenceEquals(transform, null))
                    throw new global::System.ArgumentNullException("transform", "Cannot be null because it is a C++ reference (&).");
                var __arg1 = transform.__Instance;
                var __ret = __Internal.CreateNodeCopy(__arg0, __arg1);
                global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node) global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node.__CreateInstance(__ret);
                return __result0;
            }

            public static global::UtinniCore.Utinni.Object AddNode(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node node)
            {
                var __arg0 = ReferenceEquals(node, null) ? global::System.IntPtr.Zero : node.__Instance;
                var __ret = __Internal.AddNode(__arg0);
                global::UtinniCore.Utinni.Object __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(__ret);
                return __result0;
            }

            public static void RemoveNode(global::UtinniCore.Utinni.WorldSnapshotReaderWriter.Node node)
            {
                var __arg0 = ReferenceEquals(node, null) ? global::System.IntPtr.Zero : node.__Instance;
                __Internal.RemoveNode(__arg0);
            }

            public static bool PreloadSnapshot
            {
                get
                {
                    var __ret = __Internal.GetPreloadSnapshot();
                    return __ret;
                }

                set
                {
                    __Internal.SetPreloadSnapshot(value);
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class CommandParser
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.CommandParser> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.CommandParser>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.CommandParser __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.CommandParser(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.CommandParser __CreateInstance(global::UtinniCore.Utinni.CommandParser.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.CommandParser(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.CommandParser.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CommandParser.__Internal));
                *(global::UtinniCore.Utinni.CommandParser.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private CommandParser(global::UtinniCore.Utinni.CommandParser.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected CommandParser(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }
        }

        public unsafe partial class CuiChatWindow : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0CuiChatWindow@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addCreateCommandParserCallback@CuiChatWindow@utinni@@SAXP6AXPAVCommandParser@2@@Z@Z")]
                internal static extern void AddCreateCommandParserCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?enableTextInput@CuiChatWindow@utinni@@SAX_N@Z")]
                internal static extern void EnableTextInput(bool value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?writeToAllTabs@CuiChatWindow@utinni@@SAXPBD@Z")]
                internal static extern void WriteToAllTabs([MarshalAs(UnmanagedType.LPUTF8Str)] string str);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?writeToCurrentTab@CuiChatWindow@utinni@@SAXPBD@Z")]
                internal static extern void WriteToCurrentTab([MarshalAs(UnmanagedType.LPUTF8Str)] string str);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?sendMessage@CuiChatWindow@utinni@@SAXPBD_N@Z")]
                internal static extern void SendMessage([MarshalAs(UnmanagedType.LPUTF8Str)] string msg, bool addToChatHistory);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?detour@CuiChatWindow@utinni@@SAXXZ")]
                internal static extern void Detour();
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.CuiChatWindow> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.CuiChatWindow>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.CuiChatWindow __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.CuiChatWindow(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.CuiChatWindow __CreateInstance(global::UtinniCore.Utinni.CuiChatWindow.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.CuiChatWindow(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.CuiChatWindow.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CuiChatWindow.__Internal));
                *(global::UtinniCore.Utinni.CuiChatWindow.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private CuiChatWindow(global::UtinniCore.Utinni.CuiChatWindow.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected CuiChatWindow(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public CuiChatWindow()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CuiChatWindow.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public CuiChatWindow(global::UtinniCore.Utinni.CuiChatWindow _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CuiChatWindow.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.CuiChatWindow.__Internal*) __Instance) = *((global::UtinniCore.Utinni.CuiChatWindow.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.CuiChatWindow __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public static void AddCreateCommandParserCallback(global::UtinniCore.Delegates.Action_IntPtr_C func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddCreateCommandParserCallback(__arg0);
            }

            public static void EnableTextInput(bool value)
            {
                __Internal.EnableTextInput(value);
            }

            public static void WriteToAllTabs(string str)
            {
                __Internal.WriteToAllTabs(str);
            }

            public static void WriteToCurrentTab(string str)
            {
                __Internal.WriteToCurrentTab(str);
            }

            public static void SendMessage(string msg, bool addToChatHistory)
            {
                __Internal.SendMessage(msg, addToChatHistory);
            }

            public static void Detour()
            {
                __Internal.Detour();
            }
        }
    }

    namespace Utinni
    {
        namespace CuiHud
        {
            public unsafe partial class cui_hud
            {
                public partial struct __Internal
                {
                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?collideCursorWithWorld@cuiHud@utinni@@YA_NHHAAUVector@math@swg@@PAVObject@2@@Z")]
                    [return: MarshalAs(UnmanagedType.I1)]
                    internal static extern bool CollideCursorWithWorld(int x, int y, global::System.IntPtr result, global::System.IntPtr excludeObject);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?getCursorWorldPosition@cuiHud@utinni@@YAABUVector@math@swg@@XZ")]
                    internal static extern global::System.IntPtr GetCursorWorldPosition();

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?patchAllowTargetEverything@cuiHud@utinni@@YAX_N@Z")]
                    internal static extern void PatchAllowTargetEverything(bool value);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?getWs@cuiHud@utinni@@YAPAUVector@math@swg@@XZ")]
                    internal static extern global::System.IntPtr GetWs();

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?getWe@cuiHud@utinni@@YAPAUVector@math@swg@@XZ")]
                    internal static extern global::System.IntPtr GetWe();

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?detour@cuiHud@utinni@@YAXXZ")]
                    internal static extern void Detour();
                }

                public static bool CollideCursorWithWorld(int x, int y, global::UtinniCore.Swg.Math.Vector result, global::UtinniCore.Utinni.Object excludeObject)
                {
                    if (ReferenceEquals(result, null))
                        throw new global::System.ArgumentNullException("result", "Cannot be null because it is a C++ reference (&).");
                    var __arg2 = result.__Instance;
                    var __arg3 = ReferenceEquals(excludeObject, null) ? global::System.IntPtr.Zero : excludeObject.__Instance;
                    var __ret = __Internal.CollideCursorWithWorld(x, y, __arg2, __arg3);
                    return __ret;
                }

                public static global::UtinniCore.Swg.Math.Vector GetCursorWorldPosition()
                {
                    var __ret = __Internal.GetCursorWorldPosition();
                    global::UtinniCore.Swg.Math.Vector __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Swg.Math.Vector.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Swg.Math.Vector) global::UtinniCore.Swg.Math.Vector.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
                    return __result0;
                }

                public static void PatchAllowTargetEverything(bool value)
                {
                    __Internal.PatchAllowTargetEverything(value);
                }

                public static global::UtinniCore.Swg.Math.Vector GetWs()
                {
                    var __ret = __Internal.GetWs();
                    global::UtinniCore.Swg.Math.Vector __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Swg.Math.Vector.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Swg.Math.Vector) global::UtinniCore.Swg.Math.Vector.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
                    return __result0;
                }

                public static global::UtinniCore.Swg.Math.Vector GetWe()
                {
                    var __ret = __Internal.GetWe();
                    global::UtinniCore.Swg.Math.Vector __result0;
                    if (__ret == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Swg.Math.Vector.NativeToManagedMap.ContainsKey(__ret))
                        __result0 = (global::UtinniCore.Swg.Math.Vector) global::UtinniCore.Swg.Math.Vector.NativeToManagedMap[__ret];
                    else __result0 = global::UtinniCore.Swg.Math.Vector.__CreateInstance(__ret);
                    return __result0;
                }

                public static void Detour()
                {
                    __Internal.Detour();
                }
            }
        }
    }

    namespace Utinni
    {
        namespace CuiIo
        {
            public unsafe partial class cui_io
            {
                public partial struct __Internal
                {
                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?get@cuiIo@utinni@@YAIXZ")]
                    internal static extern uint Get();

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?enableKeyboard@cuiIo@utinni@@YAX_N@Z")]
                    internal static extern void EnableKeyboard(bool value);

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?restorePreviousEnableKeyboardValue@cuiIo@utinni@@YAXXZ")]
                    internal static extern void RestorePreviousEnableKeyboardValue();

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?isInputBlocked@cuiIo@utinni@@YA_NXZ")]
                    [return: MarshalAs(UnmanagedType.I1)]
                    internal static extern bool IsInputBlocked();

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?detour@cuiIo@utinni@@YAXXZ")]
                    internal static extern void Detour();
                }

                public static uint Get()
                {
                    var __ret = __Internal.Get();
                    return __ret;
                }

                public static void EnableKeyboard(bool value)
                {
                    __Internal.EnableKeyboard(value);
                }

                public static void RestorePreviousEnableKeyboardValue()
                {
                    __Internal.RestorePreviousEnableKeyboardValue();
                }

                public static bool IsInputBlocked()
                {
                    var __ret = __Internal.IsInputBlocked();
                    return __ret;
                }

                public static void Detour()
                {
                    __Internal.Detour();
                }
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class CuiManager : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0CuiManager@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setSize@CuiManager@utinni@@SAXHH@Z")]
                internal static extern void SetSize(int width, int height);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?togglePointer@CuiManager@utinni@@SAX_N@Z")]
                internal static extern void TogglePointer(bool isOn);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?restartMusic@CuiManager@utinni@@SAXXZ")]
                internal static extern void RestartMusic();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?detour@CuiManager@utinni@@SAXXZ")]
                internal static extern void Detour();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isRenderingUi@CuiManager@utinni@@SA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsRenderingUi();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?hasObjectUnderCursor@CuiManager@utinni@@SA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool HasObjectUnderCursor();
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.CuiManager> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.CuiManager>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.CuiManager __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.CuiManager(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.CuiManager __CreateInstance(global::UtinniCore.Utinni.CuiManager.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.CuiManager(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.CuiManager.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CuiManager.__Internal));
                *(global::UtinniCore.Utinni.CuiManager.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private CuiManager(global::UtinniCore.Utinni.CuiManager.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected CuiManager(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public CuiManager()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CuiManager.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public CuiManager(global::UtinniCore.Utinni.CuiManager _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CuiManager.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.CuiManager.__Internal*) __Instance) = *((global::UtinniCore.Utinni.CuiManager.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.CuiManager __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public static void SetSize(int width, int height)
            {
                __Internal.SetSize(width, height);
            }

            public static void TogglePointer(bool isOn)
            {
                __Internal.TogglePointer(isOn);
            }

            public static void RestartMusic()
            {
                __Internal.RestartMusic();
            }

            public static void Detour()
            {
                __Internal.Detour();
            }

            public static bool IsRenderingUi
            {
                get
                {
                    var __ret = __Internal.IsRenderingUi();
                    return __ret;
                }
            }

            public static bool HasObjectUnderCursor
            {
                get
                {
                    var __ret = __Internal.HasObjectUnderCursor();
                    return __ret;
                }
            }
        }

        public unsafe partial class UiManager : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0UiManager@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?get@UiManager@utinni@@SAPAV12@XZ")]
                internal static extern global::System.IntPtr Get();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="?drawCursor@UiManager@utinni@@QAEX_N@Z")]
                internal static extern void DrawCursor(global::System.IntPtr __instance, bool value);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.UiManager> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.UiManager>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.UiManager __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.UiManager(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.UiManager __CreateInstance(global::UtinniCore.Utinni.UiManager.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.UiManager(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.UiManager.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UiManager.__Internal));
                *(global::UtinniCore.Utinni.UiManager.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private UiManager(global::UtinniCore.Utinni.UiManager.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected UiManager(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public UiManager()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UiManager.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public UiManager(global::UtinniCore.Utinni.UiManager _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.UiManager.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.UiManager.__Internal*) __Instance) = *((global::UtinniCore.Utinni.UiManager.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.UiManager __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public void DrawCursor(bool value)
            {
                __Internal.DrawCursor(__Instance, value);
            }

            public static global::UtinniCore.Utinni.UiManager Get()
            {
                var __ret = __Internal.Get();
                global::UtinniCore.Utinni.UiManager __result0;
                if (__ret == IntPtr.Zero) __result0 = null;
                else if (global::UtinniCore.Utinni.UiManager.NativeToManagedMap.ContainsKey(__ret))
                    __result0 = (global::UtinniCore.Utinni.UiManager) global::UtinniCore.Utinni.UiManager.NativeToManagedMap[__ret];
                else __result0 = global::UtinniCore.Utinni.UiManager.__CreateInstance(__ret);
                return __result0;
            }
        }

        public unsafe partial class SystemMessageManager : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 0)]
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0SystemMessageManager@utinni@@QAE@ABV01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addReceiveMessageCallback@SystemMessageManager@utinni@@SAXP6AXPBD@Z@Z")]
                internal static extern void AddReceiveMessageCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?sendMessage@SystemMessageManager@utinni@@SAXPBD_N@Z")]
                internal static extern void SendMessage([MarshalAs(UnmanagedType.LPUTF8Str)] string message, bool chatOnly);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?detour@SystemMessageManager@utinni@@SAXXZ")]
                internal static extern void Detour();
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.SystemMessageManager> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.SystemMessageManager>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.SystemMessageManager __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.SystemMessageManager(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.SystemMessageManager __CreateInstance(global::UtinniCore.Utinni.SystemMessageManager.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.SystemMessageManager(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.SystemMessageManager.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.SystemMessageManager.__Internal));
                *(global::UtinniCore.Utinni.SystemMessageManager.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private SystemMessageManager(global::UtinniCore.Utinni.SystemMessageManager.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected SystemMessageManager(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public SystemMessageManager()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.SystemMessageManager.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public SystemMessageManager(global::UtinniCore.Utinni.SystemMessageManager _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.SystemMessageManager.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.SystemMessageManager.__Internal*) __Instance) = *((global::UtinniCore.Utinni.SystemMessageManager.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.SystemMessageManager __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public static void AddReceiveMessageCallback(global::UtinniCore.Delegates.Action_string func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddReceiveMessageCallback(__arg0);
            }

            public static void SendMessage(string message, bool chatOnly)
            {
                __Internal.SendMessage(message, chatOnly);
            }

            public static void Detour()
            {
                __Internal.Detour();
            }
        }
    }

    namespace Utinni
    {
        namespace CuiMisc
        {
            public unsafe partial class cui_misc
            {
                public partial struct __Internal
                {
                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?reloadUi@cuiMisc@utinni@@YAXXZ")]
                    internal static extern void ReloadUi();

                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?patch@cuiMisc@utinni@@YAXXZ")]
                    internal static extern void Patch();
                }

                public static void ReloadUi()
                {
                    __Internal.ReloadUi();
                }

                public static void Patch()
                {
                    __Internal.Patch();
                }
            }
        }

        namespace CuiLoginScreen
        {
            public unsafe partial class cui_misc
            {
                public partial struct __Internal
                {
                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?detour@cuiLoginScreen@utinni@@YAXXZ")]
                    internal static extern void Detour();
                }

                public static void Detour()
                {
                    __Internal.Detour();
                }
            }
        }
    }

    namespace ImguiImpl
    {
        public unsafe partial class imgui_impl
        {
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?enableInternalUi@imgui_impl@@YAX_N@Z")]
                internal static extern void EnableInternalUi(bool enable);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?render@imgui_impl@@YAXXZ")]
                internal static extern void Render();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isRendering@imgui_impl@@YA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsRendering();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addRenderCallback@imgui_impl@@YAXP6AXXZ@Z")]
                internal static extern void AddRenderCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isInternalUiHovered@imgui_impl@@YA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsInternalUiHovered();
            }

            public static void EnableInternalUi(bool enable)
            {
                __Internal.EnableInternalUi(enable);
            }

            public static void Render()
            {
                __Internal.Render();
            }

            public static bool IsRendering()
            {
                var __ret = __Internal.IsRendering();
                return __ret;
            }

            public static void AddRenderCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddRenderCallback(__arg0);
            }

            public static bool IsInternalUiHovered()
            {
                var __ret = __Internal.IsInternalUiHovered();
                return __ret;
            }
        }
    }

    namespace ImguiGizmo
    {
        public unsafe partial class imgui_impl
        {
            public partial struct __Internal
            {
                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?enable@imgui_gizmo@@YAXPAVObject@utinni@@@Z")]
                internal static extern void Enable(global::System.IntPtr obj);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?disable@imgui_gizmo@@YAXXZ")]
                internal static extern void Disable();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isEnabled@imgui_gizmo@@YA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsEnabled();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?hasMouseHover@imgui_gizmo@@YA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool HasMouseHover();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addOnEnabledCallback@imgui_gizmo@@YAXP6AXXZ@Z")]
                internal static extern void AddOnEnabledCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addOnDisabledCallback@imgui_gizmo@@YAXP6AXXZ@Z")]
                internal static extern void AddOnDisabledCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addOnPositionChangedCallback@imgui_gizmo@@YAXP6AXXZ@Z")]
                internal static extern void AddOnPositionChangedCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?addOnRotationChangedCallback@imgui_gizmo@@YAXP6AXXZ@Z")]
                internal static extern void AddOnRotationChangedCallback(global::System.IntPtr func);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?toggleGizmoMode@imgui_gizmo@@YAXXZ")]
                internal static extern void ToggleGizmoMode();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?toggleOperationMode@imgui_gizmo@@YAXXZ")]
                internal static extern void ToggleOperationMode();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setGizmoModeToWorld@imgui_gizmo@@YAXXZ")]
                internal static extern void SetGizmoModeToWorld();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setGizmoModeToLocal@imgui_gizmo@@YAXXZ")]
                internal static extern void SetGizmoModeToLocal();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isGizmoModeToLocal@imgui_gizmo@@YA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsGizmoModeToLocal();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isGizmoModeToWorld@imgui_gizmo@@YA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsGizmoModeToWorld();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setOperationModeToTranslate@imgui_gizmo@@YAXXZ")]
                internal static extern void SetOperationModeToTranslate();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setOperationModeToRotate@imgui_gizmo@@YAXXZ")]
                internal static extern void SetOperationModeToRotate();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isOperationModeTransform@imgui_gizmo@@YA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsOperationModeTransform();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isOperationModeRotate@imgui_gizmo@@YA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsOperationModeRotate();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?toggleSnap@imgui_gizmo@@YAXXZ")]
                internal static extern void ToggleSnap();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?enableSnap@imgui_gizmo@@YAX_N@Z")]
                internal static extern void EnableSnap(bool value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?isSnapOn@imgui_gizmo@@YA_NXZ")]
                [return: MarshalAs(UnmanagedType.I1)]
                internal static extern bool IsSnapOn();

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?setSnapSize@imgui_gizmo@@YAXM@Z")]
                internal static extern void SetSnapSize(float value);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                    EntryPoint="?draw@imgui_gizmo@@YAXXZ")]
                internal static extern void Draw();
            }

            public static void Enable(global::UtinniCore.Utinni.Object obj)
            {
                var __arg0 = ReferenceEquals(obj, null) ? global::System.IntPtr.Zero : obj.__Instance;
                __Internal.Enable(__arg0);
            }

            public static void Disable()
            {
                __Internal.Disable();
            }

            public static bool IsEnabled()
            {
                var __ret = __Internal.IsEnabled();
                return __ret;
            }

            public static bool HasMouseHover()
            {
                var __ret = __Internal.HasMouseHover();
                return __ret;
            }

            public static void AddOnEnabledCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddOnEnabledCallback(__arg0);
            }

            public static void AddOnDisabledCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddOnDisabledCallback(__arg0);
            }

            public static void AddOnPositionChangedCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddOnPositionChangedCallback(__arg0);
            }

            public static void AddOnRotationChangedCallback(global::UtinniCore.Delegates.Action_ func)
            {
                var __arg0 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
                __Internal.AddOnRotationChangedCallback(__arg0);
            }

            public static void ToggleGizmoMode()
            {
                __Internal.ToggleGizmoMode();
            }

            public static void ToggleOperationMode()
            {
                __Internal.ToggleOperationMode();
            }

            public static void SetGizmoModeToWorld()
            {
                __Internal.SetGizmoModeToWorld();
            }

            public static void SetGizmoModeToLocal()
            {
                __Internal.SetGizmoModeToLocal();
            }

            public static bool IsGizmoModeToLocal()
            {
                var __ret = __Internal.IsGizmoModeToLocal();
                return __ret;
            }

            public static bool IsGizmoModeToWorld()
            {
                var __ret = __Internal.IsGizmoModeToWorld();
                return __ret;
            }

            public static void SetOperationModeToTranslate()
            {
                __Internal.SetOperationModeToTranslate();
            }

            public static void SetOperationModeToRotate()
            {
                __Internal.SetOperationModeToRotate();
            }

            public static bool IsOperationModeTransform()
            {
                var __ret = __Internal.IsOperationModeTransform();
                return __ret;
            }

            public static bool IsOperationModeRotate()
            {
                var __ret = __Internal.IsOperationModeRotate();
                return __ret;
            }

            public static void ToggleSnap()
            {
                __Internal.ToggleSnap();
            }

            public static void EnableSnap(bool value)
            {
                __Internal.EnableSnap(value);
            }

            public static bool IsSnapOn()
            {
                var __ret = __Internal.IsSnapOn();
                return __ret;
            }

            public static void SetSnapSize(float value)
            {
                __Internal.SetSnapSize(value);
            }

            public static void Draw()
            {
                __Internal.Draw();
            }
        }
    }

    namespace Utinni
    {
        public unsafe partial class CollisionInfo : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 32)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal global::System.IntPtr @object;

                [FieldOffset(4)]
                internal global::UtinniCore.Swg.Math.Vector.__Internal point;

                [FieldOffset(16)]
                internal global::UtinniCore.Swg.Math.Vector.__Internal normal;

                [FieldOffset(28)]
                internal float time;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0CollisionInfo@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0CollisionInfo@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.CollisionInfo> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.CollisionInfo>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.CollisionInfo __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.CollisionInfo(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.CollisionInfo __CreateInstance(global::UtinniCore.Utinni.CollisionInfo.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.CollisionInfo(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.CollisionInfo.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CollisionInfo.__Internal));
                *(global::UtinniCore.Utinni.CollisionInfo.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private CollisionInfo(global::UtinniCore.Utinni.CollisionInfo.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected CollisionInfo(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public CollisionInfo()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CollisionInfo.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public CollisionInfo(global::UtinniCore.Utinni.CollisionInfo _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.CollisionInfo.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.CollisionInfo.__Internal*) __Instance) = *((global::UtinniCore.Utinni.CollisionInfo.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.CollisionInfo __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public global::UtinniCore.Utinni.Object Object
            {
                get
                {
                    global::UtinniCore.Utinni.Object __result0;
                    if (((global::UtinniCore.Utinni.CollisionInfo.__Internal*) __Instance)->@object == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.CollisionInfo.__Internal*) __Instance)->@object))
                        __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[((global::UtinniCore.Utinni.CollisionInfo.__Internal*) __Instance)->@object];
                    else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(((global::UtinniCore.Utinni.CollisionInfo.__Internal*) __Instance)->@object);
                    return __result0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CollisionInfo.__Internal*)__Instance)->@object = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                }
            }

            public global::UtinniCore.Swg.Math.Vector Point
            {
                get
                {
                    return global::UtinniCore.Swg.Math.Vector.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.CollisionInfo.__Internal*) __Instance)->point));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.CollisionInfo.__Internal*)__Instance)->point = *(global::UtinniCore.Swg.Math.Vector.__Internal*) value.__Instance;
                }
            }

            public global::UtinniCore.Swg.Math.Vector Normal
            {
                get
                {
                    return global::UtinniCore.Swg.Math.Vector.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.CollisionInfo.__Internal*) __Instance)->normal));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.CollisionInfo.__Internal*)__Instance)->normal = *(global::UtinniCore.Swg.Math.Vector.__Internal*) value.__Instance;
                }
            }

            public float Time
            {
                get
                {
                    return ((global::UtinniCore.Utinni.CollisionInfo.__Internal*) __Instance)->time;
                }

                set
                {
                    ((global::UtinniCore.Utinni.CollisionInfo.__Internal*)__Instance)->time = value;
                }
            }
        }

        public unsafe partial class Controller : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 16)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal uint unk01;

                [FieldOffset(8)]
                internal uint unk02;

                [FieldOffset(12)]
                internal global::System.IntPtr ownerObject;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0Controller@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Controller> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.Controller>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.Controller __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Controller(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.Controller __CreateInstance(global::UtinniCore.Utinni.Controller.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.Controller(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.Controller.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Controller.__Internal));
                *(global::UtinniCore.Utinni.Controller.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private Controller(global::UtinniCore.Utinni.Controller.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected Controller(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public Controller()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Controller.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public Controller(global::UtinniCore.Utinni.Controller _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.Controller.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.Controller.__Internal*) __Instance) = *((global::UtinniCore.Utinni.Controller.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.Controller __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public uint Vtbl
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Controller.__Internal*) __Instance)->vtbl;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Controller.__Internal*)__Instance)->vtbl = value;
                }
            }

            public uint Unk01
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Controller.__Internal*) __Instance)->unk01;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Controller.__Internal*)__Instance)->unk01 = value;
                }
            }

            public uint Unk02
            {
                get
                {
                    return ((global::UtinniCore.Utinni.Controller.__Internal*) __Instance)->unk02;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Controller.__Internal*)__Instance)->unk02 = value;
                }
            }

            public global::UtinniCore.Utinni.Object OwnerObject
            {
                get
                {
                    global::UtinniCore.Utinni.Object __result0;
                    if (((global::UtinniCore.Utinni.Controller.__Internal*) __Instance)->ownerObject == IntPtr.Zero) __result0 = null;
                    else if (global::UtinniCore.Utinni.Object.NativeToManagedMap.ContainsKey(((global::UtinniCore.Utinni.Controller.__Internal*) __Instance)->ownerObject))
                        __result0 = (global::UtinniCore.Utinni.Object) global::UtinniCore.Utinni.Object.NativeToManagedMap[((global::UtinniCore.Utinni.Controller.__Internal*) __Instance)->ownerObject];
                    else __result0 = global::UtinniCore.Utinni.Object.__CreateInstance(((global::UtinniCore.Utinni.Controller.__Internal*) __Instance)->ownerObject);
                    return __result0;
                }

                set
                {
                    ((global::UtinniCore.Utinni.Controller.__Internal*)__Instance)->ownerObject = ReferenceEquals(value, null) ? global::System.IntPtr.Zero : value.__Instance;
                }
            }
        }

        public unsafe partial class DataResource : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 24)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal uint vtbl;

                [FieldOffset(4)]
                internal global::UtinniCore.Utinni.PersistentCrcString.__Internal name;

                [FieldOffset(20)]
                internal int referenceCount;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0DataResource@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.DataResource> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.DataResource>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.DataResource __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.DataResource(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.DataResource __CreateInstance(global::UtinniCore.Utinni.DataResource.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.DataResource(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.DataResource.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.DataResource.__Internal));
                *(global::UtinniCore.Utinni.DataResource.__Internal*) ret = native;
                return ret.ToPointer();
            }

            private DataResource(global::UtinniCore.Utinni.DataResource.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected DataResource(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public DataResource()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.DataResource.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            public DataResource(global::UtinniCore.Utinni.DataResource _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.DataResource.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                *((global::UtinniCore.Utinni.DataResource.__Internal*) __Instance) = *((global::UtinniCore.Utinni.DataResource.__Internal*) _0.__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.DataResource __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public uint Vtbl
            {
                get
                {
                    return ((global::UtinniCore.Utinni.DataResource.__Internal*) __Instance)->vtbl;
                }

                set
                {
                    ((global::UtinniCore.Utinni.DataResource.__Internal*)__Instance)->vtbl = value;
                }
            }

            public global::UtinniCore.Utinni.PersistentCrcString Name
            {
                get
                {
                    return global::UtinniCore.Utinni.PersistentCrcString.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.DataResource.__Internal*) __Instance)->name));
                }

                set
                {
                    if (ReferenceEquals(value, null))
                        throw new global::System.ArgumentNullException("value", "Cannot be null because it is passed by value.");
                    ((global::UtinniCore.Utinni.DataResource.__Internal*)__Instance)->name = *(global::UtinniCore.Utinni.PersistentCrcString.__Internal*) value.__Instance;
                }
            }

            public int ReferenceCount
            {
                get
                {
                    return ((global::UtinniCore.Utinni.DataResource.__Internal*) __Instance)->referenceCount;
                }

                set
                {
                    ((global::UtinniCore.Utinni.DataResource.__Internal*)__Instance)->referenceCount = value;
                }
            }
        }

        public unsafe partial class StringId : IDisposable
        {
            [StructLayout(LayoutKind.Explicit, Size = 52)]
            public partial struct __Internal
            {
                [FieldOffset(0)]
                internal global::Std.BasicString.__Internalc__N_std_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C stringTable;

                [FieldOffset(24)]
                internal global::Std.BasicString.__Internalc__N_std_S_basic_string__C___N_std_S_char_traits__C___N_std_S_allocator__C text;

                [FieldOffset(48)]
                internal uint textIndex;

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0StringId@utinni@@QAE@ABU01@@Z")]
                internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??0StringId@utinni@@QAE@XZ")]
                internal static extern global::System.IntPtr ctor(global::System.IntPtr __instance);

                [SuppressUnmanagedCodeSecurity]
                [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                    EntryPoint="??1StringId@utinni@@QAE@XZ")]
                internal static extern void dtor(global::System.IntPtr __instance, int delete);
            }

            public global::System.IntPtr __Instance { get; protected set; }

            internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.StringId> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::UtinniCore.Utinni.StringId>();

            protected bool __ownsNativeInstance;

            internal static global::UtinniCore.Utinni.StringId __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.StringId(native.ToPointer(), skipVTables);
            }

            internal static global::UtinniCore.Utinni.StringId __CreateInstance(global::UtinniCore.Utinni.StringId.__Internal native, bool skipVTables = false)
            {
                return new global::UtinniCore.Utinni.StringId(native, skipVTables);
            }

            private static void* __CopyValue(global::UtinniCore.Utinni.StringId.__Internal native)
            {
                var ret = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.StringId.__Internal));
                global::UtinniCore.Utinni.StringId.__Internal.cctor(ret, new global::System.IntPtr(&native));
                return ret.ToPointer();
            }

            private StringId(global::UtinniCore.Utinni.StringId.__Internal native, bool skipVTables = false)
                : this(__CopyValue(native), skipVTables)
            {
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
            }

            protected StringId(void* native, bool skipVTables = false)
            {
                if (native == null)
                    return;
                __Instance = new global::System.IntPtr(native);
            }

            public StringId(global::UtinniCore.Utinni.StringId _0)
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.StringId.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                if (ReferenceEquals(_0, null))
                    throw new global::System.ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
                var __arg0 = _0.__Instance;
                __Internal.cctor(__Instance, __arg0);
            }

            public StringId()
            {
                __Instance = Marshal.AllocHGlobal(sizeof(global::UtinniCore.Utinni.StringId.__Internal));
                __ownsNativeInstance = true;
                NativeToManagedMap[__Instance] = this;
                __Internal.ctor(__Instance);
            }

            public void Dispose()
            {
                Dispose(disposing: true);
            }

            public virtual void Dispose(bool disposing)
            {
                if (__Instance == IntPtr.Zero)
                    return;
                global::UtinniCore.Utinni.StringId __dummy;
                NativeToManagedMap.TryRemove(__Instance, out __dummy);
                if (disposing)
                    __Internal.dtor(__Instance, 0);
                if (__ownsNativeInstance)
                    Marshal.FreeHGlobal(__Instance);
                __Instance = IntPtr.Zero;
            }

            public string StringTable
            {
                get
                {
                    var __basicStringRet0 = global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.StringId.__Internal*) __Instance)->stringTable));
                    return global::Std.BasicStringExtensions.Data(__basicStringRet0);
                }

                set
                {
                    global::Std.BasicStringExtensions.__Internal.Assign(new global::System.IntPtr(&((global::UtinniCore.Utinni.StringId.__Internal*)__Instance)->stringTable), value);
                }
            }

            public string Text
            {
                get
                {
                    var __basicStringRet0 = global::Std.BasicString<sbyte, global::Std.CharTraits<sbyte>, global::Std.Allocator<sbyte>>.__CreateInstance(new global::System.IntPtr(&((global::UtinniCore.Utinni.StringId.__Internal*) __Instance)->text));
                    return global::Std.BasicStringExtensions.Data(__basicStringRet0);
                }

                set
                {
                    global::Std.BasicStringExtensions.__Internal.Assign(new global::System.IntPtr(&((global::UtinniCore.Utinni.StringId.__Internal*)__Instance)->text), value);
                }
            }

            public uint TextIndex
            {
                get
                {
                    return ((global::UtinniCore.Utinni.StringId.__Internal*) __Instance)->textIndex;
                }

                set
                {
                    ((global::UtinniCore.Utinni.StringId.__Internal*)__Instance)->textIndex = value;
                }
            }
        }

        namespace Report
        {
            public unsafe partial class swg_misc
            {
                public partial struct __Internal
                {
                    [SuppressUnmanagedCodeSecurity]
                    [DllImport("UtinniCore", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                        EntryPoint="?detour@report@utinni@@YAXXZ")]
                    internal static extern void Detour();
                }

                public static void Detour()
                {
                    __Internal.Detour();
                }
            }
        }
    }

    namespace Delegates
    {
        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
        public unsafe delegate void Action_string([MarshalAs(UnmanagedType.LPUTF8Str)] string msg);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.ThisCall)]
        internal unsafe delegate void Action_IntPtr_int(global::System.IntPtr __instance, int arg1);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.ThisCall)]
        public unsafe delegate void Action_IntPtr(global::System.IntPtr __instance);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.ThisCall)]
        internal unsafe delegate global::System.IntPtr Func_IntPtr_IntPtr(global::System.IntPtr __instance);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
        public unsafe delegate void Action_();

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
        public unsafe delegate void Action_float(float elapsedTime);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
        public unsafe delegate void Action_IntPtr_C(global::System.IntPtr target);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
        public unsafe delegate void Action_IntPtr_float(global::System.IntPtr pThis, float elapsedTime);
    }
}

namespace Std
{
    namespace pair
    {
        [StructLayout(LayoutKind.Explicit, Size = 8)]
        public unsafe partial struct __Internalc__N_std_S_pair__1I____N_utinni_S_WorldSnapshotReaderWriter_S_Node
        {
            [FieldOffset(0)]
            internal int first;

            [FieldOffset(4)]
            internal global::System.IntPtr second;
        }
    }
}
